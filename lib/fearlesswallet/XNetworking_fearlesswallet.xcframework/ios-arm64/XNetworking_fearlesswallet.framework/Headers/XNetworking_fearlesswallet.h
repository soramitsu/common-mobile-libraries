#import <Foundation/NSArray.h>
#import <Foundation/NSDictionary.h>
#import <Foundation/NSError.h>
#import <Foundation/NSObject.h>
#import <Foundation/NSSet.h>
#import <Foundation/NSString.h>
#import <Foundation/NSValue.h>

@class XNetworking_fearlesswalletExtrinsicParam, XNetworking_fearlesswalletExtrinsics, XNetworking_fearlesswalletSignerInfo, XNetworking_fearlesswalletSoraHistoryDatabaseCompanion, XNetworking_fearlesswalletQuery<__covariant RowType>, XNetworking_fearlesswalletBlockExplorerGraphQlRequestCompanion, XNetworking_fearlesswalletBlockExplorerGraphQlRequest, XNetworking_fearlesswalletResponsePageInfoCompanion, XNetworking_fearlesswalletResponsePageInfo, XNetworking_fearlesswalletUtils, XNetworking_fearlesswalletJson, XNetworking_fearlesswalletWebSocketClientConfig, XNetworking_fearlesswalletNetworkClientConfig, XNetworking_fearlesswalletHttpClient, XNetworking_fearlesswalletHttpMethod, XNetworking_fearlesswalletKotlinPair<__covariant A, __covariant B>, XNetworking_fearlesswalletContentType, XNetworking_fearlesswalletHttpResponse, XNetworking_fearlesswalletKotlinThrowable, XNetworking_fearlesswalletKotlinArray<T>, XNetworking_fearlesswalletDatabaseDriverFactory, XNetworking_fearlesswalletHistoryMapper, XNetworking_fearlesswalletTxHistoryItemNested, XNetworking_fearlesswalletTxHistoryItem, XNetworking_fearlesswalletTxHistoryInfo, XNetworking_fearlesswalletTxHistoryItemParam, XNetworking_fearlesswalletHistoryDatabaseProvider, XNetworking_fearlesswalletTxHistoryResult<R>, XNetworking_fearlesswalletSubQueryClient<T, R>, XNetworking_fearlesswalletSoramitsuNetworkClient, XNetworking_fearlesswalletSubSquidClient<T, R>, XNetworking_fearlesswalletTxHistoryClient<T, R>, XNetworking_fearlesswalletSubSquidClientCompanion, XNetworking_fearlesswalletKotlinException, XNetworking_fearlesswalletContentNegotiationPlugin, XNetworking_fearlesswalletAttributeKey<T>, XNetworking_fearlesswalletContentNegotiation, XNetworking_fearlesswalletContentNegotiationConfig, XNetworking_fearlesswalletJsonContentTypeMatcher, XNetworking_fearlesswalletKotlinEnumCompanion, XNetworking_fearlesswalletKotlinEnum<E>, XNetworking_fearlesswalletLogLevel, XNetworking_fearlesswalletLoggerCompanion, XNetworking_fearlesswalletLoggingCompanion, XNetworking_fearlesswalletHttpRequestBuilder, XNetworking_fearlesswalletLogging, XNetworking_fearlesswalletLoggingConfig, XNetworking_fearlesswalletHttpClientEngineConfig, XNetworking_fearlesswalletDarwin, XNetworking_fearlesswalletDarwinClientEngineConfig, XNetworking_fearlesswalletProxyConfig, NSMutableURLRequest, NSURLSessionConfiguration, NSURLSession, NSURLSessionTask, NSURLAuthenticationChallenge, XNetworking_fearlesswalletKotlinUnit, NSURLCredential, NSObject, XNetworking_fearlesswalletIOException, NSError, XNetworking_fearlesswalletPinnedCertificateCompanion, XNetworking_fearlesswalletPinnedCertificate, XNetworking_fearlesswalletHttpClientConfig<T>, XNetworking_fearlesswalletEvents, XNetworking_fearlesswalletHttpReceivePipeline, XNetworking_fearlesswalletHttpRequestPipeline, XNetworking_fearlesswalletHttpResponsePipeline, XNetworking_fearlesswalletHttpSendPipeline, XNetworking_fearlesswalletKotlinRuntimeException, XNetworking_fearlesswalletKotlinIllegalStateException, XNetworking_fearlesswalletHttpClientCall, XNetworking_fearlesswalletHttpRequestData, XNetworking_fearlesswalletHttpResponseData, XNetworking_fearlesswalletHttpClientCallCompanion, XNetworking_fearlesswalletTypeInfo, XNetworking_fearlesswalletKotlinUnsupportedOperationException, XNetworking_fearlesswalletOutgoingContent, XNetworking_fearlesswalletKotlinIllegalArgumentException, XNetworking_fearlesswalletUrl, XNetworking_fearlesswalletCacheControl, XNetworking_fearlesswalletHttpStatusCode, XNetworking_fearlesswalletOutgoingContentNoContent, XNetworking_fearlesswalletEmptyContent, XNetworking_fearlesswalletHeadersBuilder, XNetworking_fearlesswalletHttpRequestBuilderCompanion, XNetworking_fearlesswalletURLBuilder, XNetworking_fearlesswalletPipelinePhase, XNetworking_fearlesswalletPipeline<TSubject, TContext>, XNetworking_fearlesswalletHttpRequestPipelinePhases, XNetworking_fearlesswalletGMTDate, XNetworking_fearlesswalletHttpProtocolVersion, XNetworking_fearlesswalletHttpSendPipelinePhases, XNetworking_fearlesswalletFormPart<T>, XNetworking_fearlesswalletChannelProvider, XNetworking_fearlesswalletInputProvider, XNetworking_fearlesswalletByteReadPacket, XNetworking_fearlesswalletKotlinByteArray, XNetworking_fearlesswalletInput, XNetworking_fearlesswalletOutgoingContentByteArrayContent, XNetworking_fearlesswalletOutgoingContentWriteChannelContent, XNetworking_fearlesswalletPartData, XNetworking_fearlesswalletHttpReceivePipelinePhases, XNetworking_fearlesswalletHttpResponseContainer, XNetworking_fearlesswalletHttpResponsePipelinePhases, XNetworking_fearlesswalletCoroutineDispatcher, XNetworking_fearlesswalletProxyBuilder, XNetworking_fearlesswalletProxyType, XNetworking_fearlesswalletengines, XNetworking_fearlesswalletBodyProgressPlugin, XNetworking_fearlesswalletBodyProgress, XNetworking_fearlesswalletResponseException, XNetworking_fearlesswalletDataConversion, XNetworking_fearlesswalletDataConversion_, XNetworking_fearlesswalletDataConversion_Configuration, XNetworking_fearlesswalletDefaultRequestPlugin, XNetworking_fearlesswalletDefaultRequest, XNetworking_fearlesswalletDefaultRequestDefaultRequestBuilder, XNetworking_fearlesswalletHttpCallValidatorCompanion, XNetworking_fearlesswalletHttpCallValidator, XNetworking_fearlesswalletHttpCallValidatorConfig, XNetworking_fearlesswalletHttpPlainTextPlugin, XNetworking_fearlesswalletCharset, XNetworking_fearlesswalletHttpPlainText, XNetworking_fearlesswalletHttpPlainTextConfig, XNetworking_fearlesswalletHttpRedirectPlugin, XNetworking_fearlesswalletHttpRedirect, XNetworking_fearlesswalletHttpRedirectConfig, XNetworking_fearlesswalletEventDefinition<T>, XNetworking_fearlesswalletHttpRequestRetryPlugin, XNetworking_fearlesswalletHttpRequestRetryDelayContext, XNetworking_fearlesswalletHttpRequestRetryModifyRequestContext, XNetworking_fearlesswalletHttpRequestRetryShouldRetryContext, XNetworking_fearlesswalletHttpRequestRetry, XNetworking_fearlesswalletHttpRequestRetryConfiguration, XNetworking_fearlesswalletHttpRequestRetryRetryEventData, XNetworking_fearlesswalletHttpSendPlugin, XNetworking_fearlesswalletHttpSend, XNetworking_fearlesswalletHttpSendConfig, XNetworking_fearlesswalletHttpTimeoutPlugin, XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion, XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfiguration, XNetworking_fearlesswalletHttpTimeout, XNetworking_fearlesswalletUserAgentPlugin, XNetworking_fearlesswalletUserAgent, XNetworking_fearlesswalletUserAgentConfig, XNetworking_fearlesswalletHttpCacheCompanion, XNetworking_fearlesswalletHttpCacheStorage, XNetworking_fearlesswalletHttpCache, XNetworking_fearlesswalletHttpCacheConfig, XNetworking_fearlesswalletCachedResponseData, XNetworking_fearlesswalletCacheStorageCompanion, XNetworking_fearlesswalletHttpCacheStorageCompanion, XNetworking_fearlesswalletHttpCacheEntry, XNetworking_fearlesswalletFrame, XNetworking_fearlesswalletWebSocketCapability, XNetworking_fearlesswalletWebSocketExtensionsCapability, XNetworking_fearlesswalletWebSocketsPlugin, XNetworking_fearlesswalletWebSocketExtensionsConfig, XNetworking_fearlesswalletWebSockets, XNetworking_fearlesswalletWebSocketsConfig, XNetworking_fearlesswalletCookie, XNetworking_fearlesswalletHttpCookiesCompanion, XNetworking_fearlesswalletHttpCookies, XNetworking_fearlesswalletHttpCookiesConfig, XNetworking_fearlesswalletSend, XNetworking_fearlesswalletSendingRequest, XNetworking_fearlesswalletSetupRequest, XNetworking_fearlesswalletResponseObserverPlugin, XNetworking_fearlesswalletResponseObserver, XNetworking_fearlesswalletResponseObserverConfig, XNetworking_fearlesswalletContentConvertException, XNetworking_fearlesswalletWebsocketContentConvertException, XNetworking_fearlesswalletCloseReasonCodes, XNetworking_fearlesswalletCloseReason, XNetworking_fearlesswalletCloseReasonCodesCompanion, XNetworking_fearlesswalletFrameCompanion, XNetworking_fearlesswalletFrameType, XNetworking_fearlesswalletFrameTooBigException, XNetworking_fearlesswalletFrameTypeCompanion, XNetworking_fearlesswalletProtocolViolationException, XNetworking_fearlesswalletWebSocketExtensionHeader, XNetworking_fearlesswalletCacheControl_Visibility, XNetworking_fearlesswalletCacheControl_, XNetworking_fearlesswalletHeaderValueParam, XNetworking_fearlesswalletHeaderValueWithParametersCompanion, XNetworking_fearlesswalletHeaderValueWithParameters, XNetworking_fearlesswalletContentDispositionCompanion, XNetworking_fearlesswalletContentDisposition, XNetworking_fearlesswalletContentDispositionParameters, XNetworking_fearlesswalletContentRange, XNetworking_fearlesswalletContentRangeBounded, XNetworking_fearlesswalletContentRangeSuffix, XNetworking_fearlesswalletContentRangeTailFrom, XNetworking_fearlesswalletContentTypeCompanion, XNetworking_fearlesswalletContentTypeApplication, XNetworking_fearlesswalletContentTypeAudio, XNetworking_fearlesswalletContentTypeFont, XNetworking_fearlesswalletContentTypeImage, XNetworking_fearlesswalletContentTypeMessage, XNetworking_fearlesswalletContentTypeMultiPart, XNetworking_fearlesswalletContentTypeText, XNetworking_fearlesswalletContentTypeVideo, XNetworking_fearlesswalletCookieEncoding, XNetworking_fearlesswalletEmptyHeaders, XNetworking_fearlesswalletHeaderValue, XNetworking_fearlesswalletHeadersCompanion, XNetworking_fearlesswalletStringValuesBuilderImpl, XNetworking_fearlesswalletStringValuesImpl, XNetworking_fearlesswalletStringValuesSingleImpl, XNetworking_fearlesswalletHttpHeaders, XNetworking_fearlesswalletHttpMethodCompanion, XNetworking_fearlesswalletHttpProtocolVersionCompanion, XNetworking_fearlesswalletHttpStatusCodeCompanion, XNetworking_fearlesswalletLinkHeaderParameters, XNetworking_fearlesswalletLinkHeaderRel, XNetworking_fearlesswalletParametersCompanion, XNetworking_fearlesswalletRangeUnits, XNetworking_fearlesswalletRangesSpecifier, XNetworking_fearlesswalletKotlinLongRange, XNetworking_fearlesswalletURLProtocol, XNetworking_fearlesswalletURLBuilderCompanion, XNetworking_fearlesswalletURLProtocolCompanion, XNetworking_fearlesswalletUrlCompanion, XNetworking_fearlesswalletAuthScheme, XNetworking_fearlesswalletHeaderValueEncoding, XNetworking_fearlesswalletHttpAuthHeaderCompanion, XNetworking_fearlesswalletHttpAuthHeaderParameterized, XNetworking_fearlesswalletHttpAuthHeader, XNetworking_fearlesswalletHttpAuthHeaderParameters, XNetworking_fearlesswalletCachingOptions, XNetworking_fearlesswalletVersionCheckResult, XNetworking_fearlesswalletEntityTagVersionCompanion, XNetworking_fearlesswalletEntityTagVersion, XNetworking_fearlesswalletLastModifiedVersion, XNetworking_fearlesswalletMultiPartDataEmpty, XNetworking_fearlesswalletNullBody, XNetworking_fearlesswalletAlwaysFailNonceManager, XNetworking_fearlesswalletGenerateOnlyNonceManager, XNetworking_fearlesswalletHash, XNetworking_fearlesswalletIdentity, XNetworking_fearlesswalletPlatform, XNetworking_fearlesswalletPlatformUtils, XNetworking_fearlesswalletStringValuesCompanion, XNetworking_fearlesswalletThreadInfo, XNetworking_fearlesswalletWorkerStacktrace, XNetworking_fearlesswalletLogLevel_, XNetworking_fearlesswalletAtomicOp<__contravariant T>, XNetworking_fearlesswalletOpDescriptor, XNetworking_fearlesswalletLockFreeLinkedListNode, XNetworking_fearlesswalletLockFreeLinkedListNodeAddLastDesc<T>, XNetworking_fearlesswalletAtomicDesc, XNetworking_fearlesswalletLockFreeLinkedListNodeRemoveFirstDesc<T>, XNetworking_fearlesswalletKotlinNothing, XNetworking_fearlesswalletLockFreeLinkedListNodeAbstractAtomicDesc, XNetworking_fearlesswalletChannelIOException, XNetworking_fearlesswalletDelegatingConversionServiceConfiguration<T>, XNetworking_fearlesswalletDefaultConversionService, XNetworking_fearlesswalletKotlinAbstractCoroutineContextElement, XNetworking_fearlesswalletPluginNameKey, XNetworking_fearlesswalletPluginName, XNetworking_fearlesswalletPluginTraceElementPluginEvent, XNetworking_fearlesswalletPluginTraceElement, XNetworking_fearlesswalletPluginsTraceKey, XNetworking_fearlesswalletPluginsTrace, XNetworking_fearlesswalletGMTDateCompanion, XNetworking_fearlesswalletWeekDay, XNetworking_fearlesswalletMonth, XNetworking_fearlesswalletGMTDateParserCompanion, XNetworking_fearlesswalletMonthCompanion, XNetworking_fearlesswalletWeekDayCompanion, XNetworking_fearlesswalletMemory, XNetworking_fearlesswalletChunkBuffer, XNetworking_fearlesswalletBuffer, XNetworking_fearlesswalletBytePacketBuilder, XNetworking_fearlesswalletByteReadChannelCompanion, XNetworking_fearlesswalletKotlinCancellationException, XNetworking_fearlesswalletMemoryCompanion, XNetworking_fearlesswalletBufferCompanion, XNetworking_fearlesswalletByteOrderCompanion, XNetworking_fearlesswalletByteOrder, XNetworking_fearlesswalletOutput, XNetworking_fearlesswalletKotlinCharArray, XNetworking_fearlesswalletInputCompanion, XNetworking_fearlesswalletByteReadPacketCompanion, XNetworking_fearlesswalletSynchronizedObject, XNetworking_fearlesswalletDefaultPool<T>, XNetworking_fearlesswalletChunkBufferCompanion, XNetworking_fearlesswalletCharsetCompanion, XNetworking_fearlesswalletCharsetDecoder, XNetworking_fearlesswalletCharsetEncoder, XNetworking_fearlesswalletCharsets, XNetworking_fearlesswalletMalformedInputException, XNetworking_fearlesswalletPosixExceptionCompanion, XNetworking_fearlesswalletPosixException, XNetworking_fearlesswalletTransacterTransaction, XNetworking_fearlesswalletConnectionWrapper, XNetworking_fearlesswalletDatabaseConfiguration, XNetworking_fearlesswalletDecodeSequenceMode, XNetworking_fearlesswalletSerializersModule, XNetworking_fearlesswalletJsonDefault, XNetworking_fearlesswalletJsonElement, XNetworking_fearlesswalletJsonConfiguration, XNetworking_fearlesswalletJsonElementCompanion, XNetworking_fearlesswalletJsonNamingStrategyBuiltins, XNetworking_fearlesswalletJsonPrimitiveCompanion, XNetworking_fearlesswalletJsonPrimitive, XNetworking_fearlesswalletJsonNull, XNetworking_fearlesswalletJobSupport, XNetworking_fearlesswalletCoroutineStart, XNetworking_fearlesswalletCoroutineDispatcherKey, XNetworking_fearlesswalletKotlinAbstractCoroutineContextKey<B, E>, XNetworking_fearlesswalletCoroutineExceptionHandlerKey, XNetworking_fearlesswalletCoroutineNameKey, XNetworking_fearlesswalletCoroutineName, XNetworking_fearlesswalletDispatchers, XNetworking_fearlesswalletMainCoroutineDispatcher, XNetworking_fearlesswalletGlobalScope, XNetworking_fearlesswalletJobKey, XNetworking_fearlesswalletNonCancellable, XNetworking_fearlesswalletNonDisposableHandle, XNetworking_fearlesswalletTimeoutCancellationException, XNetworking_fearlesswalletBufferOverflow, XNetworking_fearlesswalletChannelFactory, XNetworking_fearlesswalletKotlinNoSuchElementException, XNetworking_fearlesswalletSharingCommand, XNetworking_fearlesswalletSharingStartedCompanion, XNetworking_fearlesswalletChannelFlow<T>, XNetworking_fearlesswalletAtomicOp_<__contravariant T>, XNetworking_fearlesswalletOpDescriptor_, XNetworking_fearlesswalletLockFreeLinkedListNode_, XNetworking_fearlesswalletSynchronizedObjectLockState, XNetworking_fearlesswalletKotlinAtomicReference<T>, XNetworking_fearlesswalletThreadSafeHeap<T>, XNetworking_fearlesswalletKeychainSettings, NSUserDefaults, XNetworking_fearlesswalletNSUserDefaultsSettings, XNetworking_fearlesswalletSettingsCompanion, XNetworking_fearlesswalletAbstractSharedLinkedListNode<T>, XNetworking_fearlesswalletSharedLruCacheCacheEntry<K, V>, XNetworking_fearlesswalletSerializationException, XNetworking_fearlesswalletAbstractPolymorphicSerializer<T>, XNetworking_fearlesswalletAbstractCollectionSerializer<Element, Collection, Builder>, XNetworking_fearlesswalletTaggedDecoder<Tag>, XNetworking_fearlesswalletTaggedEncoder<Tag>, XNetworking_fearlesswalletSerialKind, XNetworking_fearlesswalletPolymorphicKind, XNetworking_fearlesswalletPolymorphicKindOPEN, XNetworking_fearlesswalletPolymorphicKindSEALED, XNetworking_fearlesswalletPrimitiveKind, XNetworking_fearlesswalletPrimitiveKindBOOLEAN, XNetworking_fearlesswalletPrimitiveKindBYTE, XNetworking_fearlesswalletPrimitiveKindCHAR, XNetworking_fearlesswalletPrimitiveKindDOUBLE, XNetworking_fearlesswalletPrimitiveKindFLOAT, XNetworking_fearlesswalletPrimitiveKindINT, XNetworking_fearlesswalletPrimitiveKindLONG, XNetworking_fearlesswalletPrimitiveKindSHORT, XNetworking_fearlesswalletPrimitiveKindSTRING, XNetworking_fearlesswalletSerialKindCONTEXTUAL, XNetworking_fearlesswalletSerialKindENUM, XNetworking_fearlesswalletStructureKind, XNetworking_fearlesswalletStructureKindCLASS, XNetworking_fearlesswalletStructureKindLIST, XNetworking_fearlesswalletStructureKindMAP, XNetworking_fearlesswalletStructureKindOBJECT, XNetworking_fearlesswalletLongAsStringSerializer, XNetworking_fearlesswalletCompositeDecoderCompanion, XNetworking_fearlesswalletTraceBase, XNetworking_fearlesswalletTraceBaseNone, XNetworking_fearlesswalletSynchronizedObjectStatus, XNetworking_fearlesswalletFieldType, XNetworking_fearlesswalletJournalMode, XNetworking_fearlesswalletDatabaseConfigurationExtended, XNetworking_fearlesswalletDatabaseConfigurationLogging, XNetworking_fearlesswalletDatabaseConfigurationLifecycle, XNetworking_fearlesswalletDatabaseConfigurationEncryption, XNetworking_fearlesswalletSynchronousFlag, XNetworking_fearlesswalletDatabaseFileContext, XNetworking_fearlesswalletFieldTypeCompanion, XNetworking_fearlesswalletJournalModeCompanion, XNetworking_fearlesswalletConcurrentDatabaseConnection, XNetworking_fearlesswalletSqliteDatabase, XNetworking_fearlesswalletOpenFlags, XNetworking_fearlesswalletSqliteDatabaseConfig, XNetworking_fearlesswalletSQLiteException, XNetworking_fearlesswalletSqliteErrorType, XNetworking_fearlesswalletNativeStatement, XNetworking_fearlesswalletNativeDatabaseManager, XNetworking_fearlesswalletNativeDatabaseConnectionTransaction, XNetworking_fearlesswalletNativeDatabaseConnection, XNetworking_fearlesswalletChainModelCompanion, XNetworking_fearlesswalletChainModel, XNetworking_fearlesswalletChainResponseCompanion, XNetworking_fearlesswalletChainResponse, XNetworking_fearlesswalletResultChainInfo, XNetworking_fearlesswalletChainBuilderException, XNetworking_fearlesswalletSubQueryClientForFearlessWallet, XNetworking_fearlesswalletSubSquidClientForFearlessWallet, XNetworking_fearlesswalletErrorCompanion, XNetworking_fearlesswalletError, XNetworking_fearlesswalletExecutionResultCompanion, XNetworking_fearlesswalletExecutionResult, XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItem, XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElementsCompanion, XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElements, XNetworking_fearlesswalletFearlessSubSquidHistoryNodeCompanion, XNetworking_fearlesswalletFearlessSubSquidHistoryNode, XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItemCompanion, XNetworking_fearlesswalletFearlessSubSquidResponseData, XNetworking_fearlesswalletFearlessSubSquidResponseCompanion, XNetworking_fearlesswalletFearlessSubSquidResponse, XNetworking_fearlesswalletFearlessSubSquidResponseDataCompanion, XNetworking_fearlesswalletFearlessExtrinsicItemCompanion, XNetworking_fearlesswalletFearlessExtrinsicItem, XNetworking_fearlesswalletFearlessHistoryResponseItem, XNetworking_fearlesswalletFearlessHistoryResponseDataElementsCompanion, XNetworking_fearlesswalletFearlessHistoryResponseDataElements, XNetworking_fearlesswalletFearlessRewardItem, XNetworking_fearlesswalletFearlessTransferItem, XNetworking_fearlesswalletFearlessHistoryResponseItemCompanion, XNetworking_fearlesswalletFearlessRewardItemCompanion, XNetworking_fearlesswalletFearlessSubQueryResponseData, XNetworking_fearlesswalletFearlessSubQueryResponseCompanion, XNetworking_fearlesswalletFearlessSubQueryResponse, XNetworking_fearlesswalletFearlessSubQueryResponseDataCompanion, XNetworking_fearlesswalletFearlessTransferItemCompanion, XNetworking_fearlesswalletCloseableCoroutineDispatcher, XNetworking_fearlesswalletHttpStatement, XNetworking_fearlesswalletDefaultClientWebSocketSession, XNetworking_fearlesswalletFormBuilder, XNetworking_fearlesswalletNetworkAddress, XNetworking_fearlesswalletFrameClose, XNetworking_fearlesswalletFrameText, XNetworking_fearlesswalletKotlinLongProgressionCompanion, XNetworking_fearlesswalletKotlinLongIterator, XNetworking_fearlesswalletKotlinLongProgression, XNetworking_fearlesswalletKotlinLongRangeCompanion, XNetworking_fearlesswalletKotlinByteIterator, XNetworking_fearlesswalletKotlinDoubleArray, XNetworking_fearlesswalletKotlinFloatArray, XNetworking_fearlesswalletKotlinIntArray, XNetworking_fearlesswalletKotlinLongArray, XNetworking_fearlesswalletKotlinShortArray, XNetworking_fearlesswalletJsonArrayBuilder, XNetworking_fearlesswalletJsonObjectBuilder, XNetworking_fearlesswalletKotlinIntIterator, XNetworking_fearlesswalletKotlinIntProgressionCompanion, XNetworking_fearlesswalletKotlinIntProgression, XNetworking_fearlesswalletKotlinIntRangeCompanion, XNetworking_fearlesswalletKotlinIntRange, XNetworking_fearlesswalletAfterVersion, XNetworking_fearlesswalletAfterVersionWithDriver, XNetworking_fearlesswalletAtomic<V>, XNetworking_fearlesswalletAtomicInt, XNetworking_fearlesswalletAtomicLong, XNetworking_fearlesswalletAtomicReference<V>, XNetworking_fearlesswalletThreadLocalRef<T>, XNetworking_fearlesswalletSerializersModuleBuilder, XNetworking_fearlesswalletPolymorphicModuleBuilder<__contravariant Base>, XNetworking_fearlesswalletClassSerialDescriptorBuilder, XNetworking_fearlesswalletKotlinBooleanCompanion, XNetworking_fearlesswalletKotlinByteCompanion, XNetworking_fearlesswalletKotlinCharCompanion, XNetworking_fearlesswalletKotlinDoubleCompanion, XNetworking_fearlesswalletKotlinFloatCompanion, XNetworking_fearlesswalletKotlinIntCompanion, XNetworking_fearlesswalletKotlinLongCompanion, XNetworking_fearlesswalletKotlinShortCompanion, XNetworking_fearlesswalletKotlinStringCompanion, XNetworking_fearlesswalletKotlinUByteCompanion, XNetworking_fearlesswalletKotlinUIntCompanion, XNetworking_fearlesswalletKotlinULongCompanion, XNetworking_fearlesswalletKotlinUShortCompanion, XNetworking_fearlesswalletKotlinDurationCompanion, XNetworking_fearlesswalletKotlinDurationUnit, XNetworking_fearlesswalletHttpResponseReceiveFail, XNetworking_fearlesswalletConnectTimeoutException, XNetworking_fearlesswalletSocketTimeoutException, XNetworking_fearlesswalletClientPluginBuilder<PluginConfig>, XNetworking_fearlesswalletJsonBuilder, XNetworking_fearlesswalletEnumColumnAdapter<T>, NSRecursiveLock, XNetworking_fearlesswalletTraceFormat, XNetworking_fearlesswalletAtomicArray<T>, XNetworking_fearlesswalletKotlinKTypeProjection, XNetworking_fearlesswalletKotlinCharIterator, XNetworking_fearlesswalletKotlinDoubleIterator, XNetworking_fearlesswalletKotlinFloatIterator, XNetworking_fearlesswalletKotlinShortIterator, XNetworking_fearlesswalletKotlinKVariance, XNetworking_fearlesswalletKotlinKTypeProjectionCompanion;

@protocol XNetworking_fearlesswalletSoraHistoryDatabaseQueries, XNetworking_fearlesswalletTransactionWithoutReturn, XNetworking_fearlesswalletTransactionWithReturn, XNetworking_fearlesswalletTransacter, XNetworking_fearlesswalletSoraHistoryDatabase, XNetworking_fearlesswalletSqlDriver, XNetworking_fearlesswalletSqlDriverSchema, XNetworking_fearlesswalletKSerializer, XNetworking_fearlesswalletFlow, XNetworking_fearlesswalletHttpClientEngineFactory, XNetworking_fearlesswalletSoramitsuHttpClientProvider, XNetworking_fearlesswalletDeserializationStrategy, XNetworking_fearlesswalletKotlinxSerializationExtension, XNetworking_fearlesswalletSerialFormat, XNetworking_fearlesswalletKotlinxSerializationExtensionProvider, XNetworking_fearlesswalletContentConverter, XNetworking_fearlesswalletConfiguration, XNetworking_fearlesswalletKotlinKClass, XNetworking_fearlesswalletContentTypeMatcher, XNetworking_fearlesswalletHttpClientPlugin, XNetworking_fearlesswalletKotlinComparable, XNetworking_fearlesswalletLogger, XNetworking_fearlesswalletHttpClientEngine, XNetworking_fearlesswalletKotlinCoroutineContext, XNetworking_fearlesswalletCoroutineScope, XNetworking_fearlesswalletCloseable, XNetworking_fearlesswalletHttpClientEngineCapability, XNetworking_fearlesswalletAttributes, XNetworking_fearlesswalletByteReadChannel, XNetworking_fearlesswalletHttpRequest, XNetworking_fearlesswalletHeaders, XNetworking_fearlesswalletByteWriteChannel, XNetworking_fearlesswalletHttpMessage, XNetworking_fearlesswalletHttpMessageBuilder, XNetworking_fearlesswalletJob, XNetworking_fearlesswalletKotlinSuspendFunction2, XNetworking_fearlesswalletParameters, XNetworking_fearlesswalletKotlinSuspendFunction1, XNetworking_fearlesswalletKotlinIterator, XNetworking_fearlesswalletKotlinIterable, XNetworking_fearlesswalletKotlinSuspendFunction3, XNetworking_fearlesswalletCacheStorage, XNetworking_fearlesswalletWebSocketExtension, XNetworking_fearlesswalletReceiveChannel, XNetworking_fearlesswalletSendChannel, XNetworking_fearlesswalletWebSocketSession, XNetworking_fearlesswalletClientWebSocketSession, XNetworking_fearlesswalletDeferred, XNetworking_fearlesswalletDefaultWebSocketSession, XNetworking_fearlesswalletWebsocketContentConverter, XNetworking_fearlesswalletCookiesStorage, XNetworking_fearlesswalletClientHook, XNetworking_fearlesswalletKotlinSuspendFunction4, XNetworking_fearlesswalletDisposableHandle, XNetworking_fearlesswalletCopyableThrowable, XNetworking_fearlesswalletWebSocketExtensionFactory, XNetworking_fearlesswalletKotlinSequence, XNetworking_fearlesswalletKotlinMapEntry, XNetworking_fearlesswalletStringValues, XNetworking_fearlesswalletStringValuesBuilder, XNetworking_fearlesswalletParametersBuilder, XNetworking_fearlesswalletVersion, XNetworking_fearlesswalletMultiPartData, XNetworking_fearlesswalletNonceManager, XNetworking_fearlesswalletEncoder, XNetworking_fearlesswalletConversionService, XNetworking_fearlesswalletKotlinKType, XNetworking_fearlesswalletKotlinCoroutineContextKey, XNetworking_fearlesswalletKotlinCoroutineContextElement, XNetworking_fearlesswalletReadSession, XNetworking_fearlesswalletKotlinAppendable, XNetworking_fearlesswalletByteChannel, XNetworking_fearlesswalletSuspendableReadSession, XNetworking_fearlesswalletObjectPool, XNetworking_fearlesswalletWriterSuspendSession, XNetworking_fearlesswalletChildHandle, XNetworking_fearlesswalletChildJob, XNetworking_fearlesswalletSelectClause0, XNetworking_fearlesswalletWriterSession, XNetworking_fearlesswalletAllocator, XNetworking_fearlesswalletSqlPreparedStatement, XNetworking_fearlesswalletSqlCursor, XNetworking_fearlesswalletCloseable_, XNetworking_fearlesswalletDatabaseManager, XNetworking_fearlesswalletSerializationStrategy, XNetworking_fearlesswalletStringFormat, XNetworking_fearlesswalletJsonNamingStrategy, XNetworking_fearlesswalletEncoder_, XNetworking_fearlesswalletSerialDescriptor, XNetworking_fearlesswalletDecoder, XNetworking_fearlesswalletCompositeDecoder, XNetworking_fearlesswalletCompositeEncoder, XNetworking_fearlesswalletParentJob, XNetworking_fearlesswalletSelectClause1, XNetworking_fearlesswalletKotlinContinuation, XNetworking_fearlesswalletKotlinContinuationInterceptor, XNetworking_fearlesswalletRunnable, XNetworking_fearlesswalletKotlinSuspendFunction0, XNetworking_fearlesswalletCancellableContinuation, XNetworking_fearlesswalletSelectClause2, XNetworking_fearlesswalletChannelIterator, XNetworking_fearlesswalletBroadcastChannel, XNetworking_fearlesswalletFlowCollector, XNetworking_fearlesswalletStateFlow, XNetworking_fearlesswalletSharedFlow, XNetworking_fearlesswalletMutableSharedFlow, XNetworking_fearlesswalletSharingStarted, XNetworking_fearlesswalletFusibleFlow, XNetworking_fearlesswalletProducerScope, XNetworking_fearlesswalletSelectInstance, XNetworking_fearlesswalletSelectClause, XNetworking_fearlesswalletMainDispatcherFactory, XNetworking_fearlesswalletColumnAdapter, XNetworking_fearlesswalletQueryListener, XNetworking_fearlesswalletTransactionCallbacks, XNetworking_fearlesswalletSettings, XNetworking_fearlesswalletSettingsFactory, XNetworking_fearlesswalletSettingsListener, XNetworking_fearlesswalletObservableSettings, XNetworking_fearlesswalletKotlinMutableMapMutableEntry, XNetworking_fearlesswalletLruCache, XNetworking_fearlesswalletSerializersModuleCollector, XNetworking_fearlesswalletKotlinAnnotation, XNetworking_fearlesswalletStatement, XNetworking_fearlesswalletDatabaseConnection, XNetworking_fearlesswalletLogger__, XNetworking_fearlesswalletCursor, XNetworking_fearlesswalletSqliteStatement, XNetworking_fearlesswalletLogger_, XNetworking_fearlesswalletKotlinClosedRange, XNetworking_fearlesswalletKotlinOpenEndRange, XNetworking_fearlesswalletKotlinKProperty, XNetworking_fearlesswalletClientPlugin, XNetworking_fearlesswalletBinaryFormat, XNetworking_fearlesswalletDigest, XNetworking_fearlesswalletReaderJob, XNetworking_fearlesswalletWriterJob, XNetworking_fearlesswalletKotlinNativePlacement, XNetworking_fearlesswalletKotlinNativeFreeablePlacement, XNetworking_fearlesswalletKotlinReadWriteProperty, XNetworking_fearlesswalletKotlinReadOnlyProperty, XNetworking_fearlesswalletCompletableJob, XNetworking_fearlesswalletCompletableDeferred, XNetworking_fearlesswalletCoroutineExceptionHandler, XNetworking_fearlesswalletChannel, XNetworking_fearlesswalletMutableStateFlow, XNetworking_fearlesswalletKotlinSuspendFunction5, XNetworking_fearlesswalletKotlinSuspendFunction6, XNetworking_fearlesswalletSelectBuilder, XNetworking_fearlesswalletMutex, XNetworking_fearlesswalletSemaphore, XNetworking_fearlesswalletKotlinKDeclarationContainer, XNetworking_fearlesswalletKotlinKAnnotatedElement, XNetworking_fearlesswalletKotlinKClassifier, XNetworking_fearlesswalletKotlinFunction, XNetworking_fearlesswalletKotlinKCallable;

NS_ASSUME_NONNULL_BEGIN
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunknown-warning-option"
#pragma clang diagnostic ignored "-Wincompatible-property-type"
#pragma clang diagnostic ignored "-Wnullability"

#pragma push_macro("_Nullable_result")
#if !__has_feature(nullability_nullable_result)
#undef _Nullable_result
#define _Nullable_result _Nullable
#endif

__attribute__((swift_name("KotlinBase")))
@interface XNetworking_fearlesswalletBase : NSObject
- (instancetype)init __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (void)initialize __attribute__((objc_requires_super));
@end

@interface XNetworking_fearlesswalletBase (XNetworking_fearlesswalletBaseCopying) <NSCopying>
@end

__attribute__((swift_name("KotlinMutableSet")))
@interface XNetworking_fearlesswalletMutableSet<ObjectType> : NSMutableSet<ObjectType>
@end

__attribute__((swift_name("KotlinMutableDictionary")))
@interface XNetworking_fearlesswalletMutableDictionary<KeyType, ObjectType> : NSMutableDictionary<KeyType, ObjectType>
@end

@interface NSError (NSErrorXNetworking_fearlesswalletKotlinException)
@property (readonly) id _Nullable kotlinException;
@end

__attribute__((swift_name("KotlinNumber")))
@interface XNetworking_fearlesswalletNumber : NSNumber
- (instancetype)initWithChar:(char)value __attribute__((unavailable));
- (instancetype)initWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
- (instancetype)initWithShort:(short)value __attribute__((unavailable));
- (instancetype)initWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
- (instancetype)initWithInt:(int)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
- (instancetype)initWithLong:(long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
- (instancetype)initWithLongLong:(long long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
- (instancetype)initWithFloat:(float)value __attribute__((unavailable));
- (instancetype)initWithDouble:(double)value __attribute__((unavailable));
- (instancetype)initWithBool:(BOOL)value __attribute__((unavailable));
- (instancetype)initWithInteger:(NSInteger)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
+ (instancetype)numberWithChar:(char)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
+ (instancetype)numberWithShort:(short)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
+ (instancetype)numberWithInt:(int)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
+ (instancetype)numberWithLong:(long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
+ (instancetype)numberWithLongLong:(long long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
+ (instancetype)numberWithFloat:(float)value __attribute__((unavailable));
+ (instancetype)numberWithDouble:(double)value __attribute__((unavailable));
+ (instancetype)numberWithBool:(BOOL)value __attribute__((unavailable));
+ (instancetype)numberWithInteger:(NSInteger)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
@end

__attribute__((swift_name("KotlinByte")))
@interface XNetworking_fearlesswalletByte : XNetworking_fearlesswalletNumber
- (instancetype)initWithChar:(char)value;
+ (instancetype)numberWithChar:(char)value;
@end

__attribute__((swift_name("KotlinUByte")))
@interface XNetworking_fearlesswalletUByte : XNetworking_fearlesswalletNumber
- (instancetype)initWithUnsignedChar:(unsigned char)value;
+ (instancetype)numberWithUnsignedChar:(unsigned char)value;
@end

__attribute__((swift_name("KotlinShort")))
@interface XNetworking_fearlesswalletShort : XNetworking_fearlesswalletNumber
- (instancetype)initWithShort:(short)value;
+ (instancetype)numberWithShort:(short)value;
@end

__attribute__((swift_name("KotlinUShort")))
@interface XNetworking_fearlesswalletUShort : XNetworking_fearlesswalletNumber
- (instancetype)initWithUnsignedShort:(unsigned short)value;
+ (instancetype)numberWithUnsignedShort:(unsigned short)value;
@end

__attribute__((swift_name("KotlinInt")))
@interface XNetworking_fearlesswalletInt : XNetworking_fearlesswalletNumber
- (instancetype)initWithInt:(int)value;
+ (instancetype)numberWithInt:(int)value;
@end

__attribute__((swift_name("KotlinUInt")))
@interface XNetworking_fearlesswalletUInt : XNetworking_fearlesswalletNumber
- (instancetype)initWithUnsignedInt:(unsigned int)value;
+ (instancetype)numberWithUnsignedInt:(unsigned int)value;
@end

__attribute__((swift_name("KotlinLong")))
@interface XNetworking_fearlesswalletLong : XNetworking_fearlesswalletNumber
- (instancetype)initWithLongLong:(long long)value;
+ (instancetype)numberWithLongLong:(long long)value;
@end

__attribute__((swift_name("KotlinULong")))
@interface XNetworking_fearlesswalletULong : XNetworking_fearlesswalletNumber
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value;
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value;
@end

__attribute__((swift_name("KotlinFloat")))
@interface XNetworking_fearlesswalletFloat : XNetworking_fearlesswalletNumber
- (instancetype)initWithFloat:(float)value;
+ (instancetype)numberWithFloat:(float)value;
@end

__attribute__((swift_name("KotlinDouble")))
@interface XNetworking_fearlesswalletDouble : XNetworking_fearlesswalletNumber
- (instancetype)initWithDouble:(double)value;
+ (instancetype)numberWithDouble:(double)value;
@end

__attribute__((swift_name("KotlinBoolean")))
@interface XNetworking_fearlesswalletBoolean : XNetworking_fearlesswalletNumber
- (instancetype)initWithBool:(BOOL)value;
+ (instancetype)numberWithBool:(BOOL)value;
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExtrinsicParam")))
@interface XNetworking_fearlesswalletExtrinsicParam : XNetworking_fearlesswalletBase
- (instancetype)initWithExtrinsicHash:(NSString *)extrinsicHash paramName:(NSString *)paramName paramValue:(NSString *)paramValue __attribute__((swift_name("init(extrinsicHash:paramName:paramValue:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletExtrinsicParam *)doCopyExtrinsicHash:(NSString *)extrinsicHash paramName:(NSString *)paramName paramValue:(NSString *)paramValue __attribute__((swift_name("doCopy(extrinsicHash:paramName:paramValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *extrinsicHash __attribute__((swift_name("extrinsicHash")));
@property (readonly) NSString *paramName __attribute__((swift_name("paramName")));
@property (readonly) NSString *paramValue __attribute__((swift_name("paramValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Extrinsics")))
@interface XNetworking_fearlesswalletExtrinsics : XNetworking_fearlesswalletBase
- (instancetype)initWithTxHash:(NSString *)txHash signAddress:(NSString *)signAddress blockHash:(NSString * _Nullable)blockHash module:(NSString *)module method:(NSString *)method networkFee:(NSString *)networkFee timestamp:(int64_t)timestamp success:(BOOL)success batch:(BOOL)batch parentHash:(NSString * _Nullable)parentHash networkName:(NSString *)networkName __attribute__((swift_name("init(txHash:signAddress:blockHash:module:method:networkFee:timestamp:success:batch:parentHash:networkName:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletExtrinsics *)doCopyTxHash:(NSString *)txHash signAddress:(NSString *)signAddress blockHash:(NSString * _Nullable)blockHash module:(NSString *)module method:(NSString *)method networkFee:(NSString *)networkFee timestamp:(int64_t)timestamp success:(BOOL)success batch:(BOOL)batch parentHash:(NSString * _Nullable)parentHash networkName:(NSString *)networkName __attribute__((swift_name("doCopy(txHash:signAddress:blockHash:module:method:networkFee:timestamp:success:batch:parentHash:networkName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL batch __attribute__((swift_name("batch")));
@property (readonly) NSString * _Nullable blockHash __attribute__((swift_name("blockHash")));
@property (readonly) NSString *method __attribute__((swift_name("method")));
@property (readonly) NSString *module __attribute__((swift_name("module")));
@property (readonly) NSString *networkFee __attribute__((swift_name("networkFee")));
@property (readonly) NSString *networkName __attribute__((swift_name("networkName")));
@property (readonly) NSString * _Nullable parentHash __attribute__((swift_name("parentHash")));
@property (readonly) NSString *signAddress __attribute__((swift_name("signAddress")));
@property (readonly) BOOL success __attribute__((swift_name("success")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) NSString *txHash __attribute__((swift_name("txHash")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SignerInfo")))
@interface XNetworking_fearlesswalletSignerInfo : XNetworking_fearlesswalletBase
- (instancetype)initWithSignAddress:(NSString *)signAddress topTime:(int64_t)topTime oldTime:(int64_t)oldTime oldCursor:(NSString * _Nullable)oldCursor endReached:(BOOL)endReached networkName:(NSString *)networkName __attribute__((swift_name("init(signAddress:topTime:oldTime:oldCursor:endReached:networkName:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletSignerInfo *)doCopySignAddress:(NSString *)signAddress topTime:(int64_t)topTime oldTime:(int64_t)oldTime oldCursor:(NSString * _Nullable)oldCursor endReached:(BOOL)endReached networkName:(NSString *)networkName __attribute__((swift_name("doCopy(signAddress:topTime:oldTime:oldCursor:endReached:networkName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL endReached __attribute__((swift_name("endReached")));
@property (readonly) NSString *networkName __attribute__((swift_name("networkName")));
@property (readonly) NSString * _Nullable oldCursor __attribute__((swift_name("oldCursor")));
@property (readonly) int64_t oldTime __attribute__((swift_name("oldTime")));
@property (readonly) NSString *signAddress __attribute__((swift_name("signAddress")));
@property (readonly) int64_t topTime __attribute__((swift_name("topTime")));
@end

__attribute__((swift_name("Transacter")))
@protocol XNetworking_fearlesswalletTransacter
@required
- (void)transactionNoEnclosing:(BOOL)noEnclosing body:(void (^)(id<XNetworking_fearlesswalletTransactionWithoutReturn>))body __attribute__((swift_name("transaction(noEnclosing:body:)")));
- (id _Nullable)transactionWithResultNoEnclosing:(BOOL)noEnclosing bodyWithReturn:(id _Nullable (^)(id<XNetworking_fearlesswalletTransactionWithReturn>))bodyWithReturn __attribute__((swift_name("transactionWithResult(noEnclosing:bodyWithReturn:)")));
@end

__attribute__((swift_name("SoraHistoryDatabase")))
@protocol XNetworking_fearlesswalletSoraHistoryDatabase <XNetworking_fearlesswalletTransacter>
@required
@property (readonly) id<XNetworking_fearlesswalletSoraHistoryDatabaseQueries> soraHistoryDatabaseQueries __attribute__((swift_name("soraHistoryDatabaseQueries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SoraHistoryDatabaseCompanion")))
@interface XNetworking_fearlesswalletSoraHistoryDatabaseCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSoraHistoryDatabaseCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletSoraHistoryDatabase>)invokeDriver:(id<XNetworking_fearlesswalletSqlDriver>)driver __attribute__((swift_name("invoke(driver:)")));
@property (readonly) id<XNetworking_fearlesswalletSqlDriverSchema> Schema __attribute__((swift_name("Schema")));
@end

__attribute__((swift_name("SoraHistoryDatabaseQueries")))
@protocol XNetworking_fearlesswalletSoraHistoryDatabaseQueries <XNetworking_fearlesswalletTransacter>
@required
- (void)insertExtrinsicTxHash:(NSString *)txHash signAddress:(NSString *)signAddress networkName:(NSString *)networkName blockHash:(NSString * _Nullable)blockHash module:(NSString *)module method:(NSString *)method networkFee:(NSString *)networkFee timestamp:(int64_t)timestamp success:(BOOL)success batch:(BOOL)batch parentHash:(NSString * _Nullable)parentHash __attribute__((swift_name("insertExtrinsic(txHash:signAddress:networkName:blockHash:module:method:networkFee:timestamp:success:batch:parentHash:)")));
- (void)insertExtrinsicParamExtrinsicHash:(NSString *)extrinsicHash paramName:(NSString *)paramName paramValue:(NSString *)paramValue __attribute__((swift_name("insertExtrinsicParam(extrinsicHash:paramName:paramValue:)")));
- (void)insertSignerInfoSignAddress:(NSString *)signAddress networkName:(NSString *)networkName topTime:(int64_t)topTime oldTime:(int64_t)oldTime oldCursor:(NSString * _Nullable)oldCursor endReached:(BOOL)endReached __attribute__((swift_name("insertSignerInfo(signAddress:networkName:topTime:oldTime:oldCursor:endReached:)")));
- (void)insertSignerInfoFullSignerInfo:(XNetworking_fearlesswalletSignerInfo *)SignerInfo __attribute__((swift_name("insertSignerInfoFull(SignerInfo:)")));
- (void)removeAllExtrinsics __attribute__((swift_name("removeAllExtrinsics()")));
- (void)removeAllSignerInfo __attribute__((swift_name("removeAllSignerInfo()")));
- (void)removeExtrinsicsAddress:(NSString *)address network:(NSString *)network __attribute__((swift_name("removeExtrinsics(address:network:)")));
- (void)removeSignerInfoAddress:(NSString *)address network:(NSString *)network __attribute__((swift_name("removeSignerInfo(address:network:)")));
- (XNetworking_fearlesswalletQuery<XNetworking_fearlesswalletExtrinsics *> *)selectExtrinsicHash:(NSString *)hash address:(NSString *)address network:(NSString *)network __attribute__((swift_name("selectExtrinsic(hash:address:network:)")));
- (XNetworking_fearlesswalletQuery<id> *)selectExtrinsicHash:(NSString *)hash address:(NSString *)address network:(NSString *)network mapper:(id (^)(NSString *, NSString *, NSString * _Nullable, NSString *, NSString *, NSString *, XNetworking_fearlesswalletLong *, XNetworking_fearlesswalletBoolean *, XNetworking_fearlesswalletBoolean *, NSString * _Nullable, NSString *))mapper __attribute__((swift_name("selectExtrinsic(hash:address:network:mapper:)")));
- (XNetworking_fearlesswalletQuery<XNetworking_fearlesswalletExtrinsicParam *> *)selectExtrinsicParamsExtrinsicHash:(NSString *)extrinsicHash __attribute__((swift_name("selectExtrinsicParams(extrinsicHash:)")));
- (XNetworking_fearlesswalletQuery<id> *)selectExtrinsicParamsExtrinsicHash:(NSString *)extrinsicHash mapper:(id (^)(NSString *, NSString *, NSString *))mapper __attribute__((swift_name("selectExtrinsicParams(extrinsicHash:mapper:)")));
- (XNetworking_fearlesswalletQuery<XNetworking_fearlesswalletExtrinsics *> *)selectExtrinsicsNestedParentHash:(NSString * _Nullable)parentHash __attribute__((swift_name("selectExtrinsicsNested(parentHash:)")));
- (XNetworking_fearlesswalletQuery<id> *)selectExtrinsicsNestedParentHash:(NSString * _Nullable)parentHash mapper:(id (^)(NSString *, NSString *, NSString * _Nullable, NSString *, NSString *, NSString *, XNetworking_fearlesswalletLong *, XNetworking_fearlesswalletBoolean *, XNetworking_fearlesswalletBoolean *, NSString * _Nullable, NSString *))mapper __attribute__((swift_name("selectExtrinsicsNested(parentHash:mapper:)")));
- (XNetworking_fearlesswalletQuery<XNetworking_fearlesswalletExtrinsics *> *)selectExtrinsicsPagedAddress:(NSString *)address network:(NSString *)network limit:(int64_t)limit offset:(int64_t)offset __attribute__((swift_name("selectExtrinsicsPaged(address:network:limit:offset:)")));
- (XNetworking_fearlesswalletQuery<id> *)selectExtrinsicsPagedAddress:(NSString *)address network:(NSString *)network limit:(int64_t)limit offset:(int64_t)offset mapper:(id (^)(NSString *, NSString *, NSString * _Nullable, NSString *, NSString *, NSString *, XNetworking_fearlesswalletLong *, XNetworking_fearlesswalletBoolean *, XNetworking_fearlesswalletBoolean *, NSString * _Nullable, NSString *))mapper __attribute__((swift_name("selectExtrinsicsPaged(address:network:limit:offset:mapper:)")));
- (XNetworking_fearlesswalletQuery<XNetworking_fearlesswalletSignerInfo *> *)selectSignerInfoAddress:(NSString *)address network:(NSString *)network __attribute__((swift_name("selectSignerInfo(address:network:)")));
- (XNetworking_fearlesswalletQuery<id> *)selectSignerInfoAddress:(NSString *)address network:(NSString *)network mapper:(id (^)(NSString *, XNetworking_fearlesswalletLong *, XNetworking_fearlesswalletLong *, NSString * _Nullable, XNetworking_fearlesswalletBoolean *, NSString *))mapper __attribute__((swift_name("selectSignerInfo(address:network:mapper:)")));
- (XNetworking_fearlesswalletQuery<NSString *> *)selectTransfersPeersNetwork:(NSString *)network query:(NSString *)query __attribute__((swift_name("selectTransfersPeers(network:query:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BlockExplorerGraphQlRequest")))
@interface XNetworking_fearlesswalletBlockExplorerGraphQlRequest : XNetworking_fearlesswalletBase
- (instancetype)initWithQuery:(NSString *)query variables:(NSString * _Nullable)variables __attribute__((swift_name("init(query:variables:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletBlockExplorerGraphQlRequestCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletBlockExplorerGraphQlRequest *)doCopyQuery:(NSString *)query variables:(NSString * _Nullable)variables __attribute__((swift_name("doCopy(query:variables:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *query __attribute__((swift_name("query")));
@property (readonly) NSString * _Nullable variables __attribute__((swift_name("variables")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BlockExplorerGraphQlRequest.Companion")))
@interface XNetworking_fearlesswalletBlockExplorerGraphQlRequestCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletBlockExplorerGraphQlRequestCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponsePageInfo")))
@interface XNetworking_fearlesswalletResponsePageInfo : XNetworking_fearlesswalletBase
- (instancetype)initWithHasNextPage:(BOOL)hasNextPage endCursor:(NSString * _Nullable)endCursor __attribute__((swift_name("init(hasNextPage:endCursor:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletResponsePageInfoCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletResponsePageInfo *)doCopyHasNextPage:(BOOL)hasNextPage endCursor:(NSString * _Nullable)endCursor __attribute__((swift_name("doCopy(hasNextPage:endCursor:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable endCursor __attribute__((swift_name("endCursor")));
@property (readonly) BOOL hasNextPage __attribute__((swift_name("hasNextPage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponsePageInfo.Companion")))
@interface XNetworking_fearlesswalletResponsePageInfoCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletResponsePageInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Utils")))
@interface XNetworking_fearlesswalletUtils : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)utils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletUtils *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletDouble * _Nullable)toDoubleNan:(NSString *)receiver __attribute__((swift_name("toDoubleNan(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cryp")))
@interface XNetworking_fearlesswalletCryp : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletFlow>)doFlow __attribute__((swift_name("doFlow()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpEngineFactory")))
@interface XNetworking_fearlesswalletHttpEngineFactory : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletHttpClientEngineFactory>)createEngine __attribute__((swift_name("createEngine()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkClientConfig")))
@interface XNetworking_fearlesswalletNetworkClientConfig : XNetworking_fearlesswalletBase
- (instancetype)initWithLogging:(BOOL)logging requestTimeoutMillis:(int64_t)requestTimeoutMillis connectTimeoutMillis:(int64_t)connectTimeoutMillis socketTimeoutMillis:(int64_t)socketTimeoutMillis json:(XNetworking_fearlesswalletJson *)json webSocketClientConfig:(XNetworking_fearlesswalletWebSocketClientConfig * _Nullable)webSocketClientConfig __attribute__((swift_name("init(logging:requestTimeoutMillis:connectTimeoutMillis:socketTimeoutMillis:json:webSocketClientConfig:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletNetworkClientConfig *)doCopyLogging:(BOOL)logging requestTimeoutMillis:(int64_t)requestTimeoutMillis connectTimeoutMillis:(int64_t)connectTimeoutMillis socketTimeoutMillis:(int64_t)socketTimeoutMillis json:(XNetworking_fearlesswalletJson *)json webSocketClientConfig:(XNetworking_fearlesswalletWebSocketClientConfig * _Nullable)webSocketClientConfig __attribute__((swift_name("doCopy(logging:requestTimeoutMillis:connectTimeoutMillis:socketTimeoutMillis:json:webSocketClientConfig:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t connectTimeoutMillis __attribute__((swift_name("connectTimeoutMillis")));
@property (readonly) XNetworking_fearlesswalletJson *json __attribute__((swift_name("json")));
@property (readonly) BOOL logging __attribute__((swift_name("logging")));
@property (readonly) int64_t requestTimeoutMillis __attribute__((swift_name("requestTimeoutMillis")));
@property (readonly) int64_t socketTimeoutMillis __attribute__((swift_name("socketTimeoutMillis")));
@property (readonly) XNetworking_fearlesswalletWebSocketClientConfig * _Nullable webSocketClientConfig __attribute__((swift_name("webSocketClientConfig")));
@end

__attribute__((swift_name("SoramitsuHttpClientProvider")))
@protocol XNetworking_fearlesswalletSoramitsuHttpClientProvider
@required
- (XNetworking_fearlesswalletHttpClient *)provideConfig:(XNetworking_fearlesswalletNetworkClientConfig *)config __attribute__((swift_name("provide(config:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SoramitsuHttpClientProviderImpl")))
@interface XNetworking_fearlesswalletSoramitsuHttpClientProviderImpl : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSoramitsuHttpClientProvider>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletHttpClient *)provideConfig:(XNetworking_fearlesswalletNetworkClientConfig *)config __attribute__((swift_name("provide(config:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SoramitsuNetworkClient")))
@interface XNetworking_fearlesswalletSoramitsuNetworkClient : XNetworking_fearlesswalletBase
- (instancetype)initWithTimeout:(int64_t)timeout logging:(BOOL)logging provider:(id<XNetworking_fearlesswalletSoramitsuHttpClientProvider>)provider __attribute__((swift_name("init(timeout:logging:provider:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of SoramitsuNetworkException, CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createJsonRequestPath:(NSString *)path methodType:(XNetworking_fearlesswalletHttpMethod *)methodType body:(id)body headers:(NSArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *> * _Nullable)headers completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createJsonRequest(path:methodType:body:headers:completionHandler:)")));

/**
 * @note This method converts instances of SoramitsuNetworkException, CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createRequestPath:(NSString *)path methodType:(XNetworking_fearlesswalletHttpMethod *)methodType body:(id)body contentType:(XNetworking_fearlesswalletContentType * _Nullable)contentType headersList:(NSArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *> * _Nullable)headersList completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createRequest(path:methodType:body:contentType:headersList:completionHandler:)")));

/**
 * @note This method converts instances of SoramitsuNetworkException, CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUrl:(NSString *)url completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(url:completionHandler:)")));

/**
 * @note This method converts instances of SoramitsuNetworkException, CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getJsonRequestBearerToken:(NSString * _Nullable)bearerToken header:(NSString * _Nullable)header url:(NSString *)url completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getJsonRequest(bearerToken:header:url:completionHandler:)")));

/**
 * @note This method converts instances of SoramitsuNetworkException, CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postJsonRequestBearerToken:(NSString * _Nullable)bearerToken header:(NSString * _Nullable)header url:(NSString *)url body:(id)body completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("postJsonRequest(bearerToken:header:url:body:completionHandler:)")));

/**
 * @note This method converts instances of SoramitsuNetworkException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (id _Nullable)wrapInExceptionHandlerAndReturnError:(NSError * _Nullable * _Nullable)error block:(id (^)(void))block __attribute__((swift_name("wrapInExceptionHandler(block:)")));
@property (readonly) XNetworking_fearlesswalletHttpClient *httpClient __attribute__((swift_name("httpClient")));
@property (readonly) XNetworking_fearlesswalletJson *json __attribute__((swift_name("json")));
@end

__attribute__((swift_name("KotlinThrowable")))
@interface XNetworking_fearlesswalletKotlinThrowable : XNetworking_fearlesswalletBase
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));

/**
 * @note annotations
 *   kotlin.experimental.ExperimentalNativeApi
*/
- (XNetworking_fearlesswalletKotlinArray<NSString *> *)getStackTrace __attribute__((swift_name("getStackTrace()")));
- (void)printStackTrace __attribute__((swift_name("printStackTrace()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
- (NSError *)asError __attribute__((swift_name("asError()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SoramitsuNetworkException")))
@interface XNetworking_fearlesswalletSoramitsuNetworkException : XNetworking_fearlesswalletKotlinThrowable
- (instancetype)initWithM:(NSString *)m c:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)c reason:(NSString *)reason __attribute__((swift_name("init(m:c:reason:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *m __attribute__((swift_name("m")));
@property (readonly) NSString *reason __attribute__((swift_name("reason")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketClientConfig")))
@interface XNetworking_fearlesswalletWebSocketClientConfig : XNetworking_fearlesswalletBase
- (instancetype)initWithPingInterval:(int64_t)pingInterval maxFrameSize:(int64_t)maxFrameSize __attribute__((swift_name("init(pingInterval:maxFrameSize:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletWebSocketClientConfig *)doCopyPingInterval:(int64_t)pingInterval maxFrameSize:(int64_t)maxFrameSize __attribute__((swift_name("doCopy(pingInterval:maxFrameSize:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property (readonly) int64_t pingInterval __attribute__((swift_name("pingInterval")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HistoryDatabaseProvider")))
@interface XNetworking_fearlesswalletHistoryDatabaseProvider : XNetworking_fearlesswalletBase
- (instancetype)initWithDatabaseDriverFactory:(XNetworking_fearlesswalletDatabaseDriverFactory *)databaseDriverFactory __attribute__((swift_name("init(databaseDriverFactory:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HistoryMapper")))
@interface XNetworking_fearlesswalletHistoryMapper : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)historyMapper __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHistoryMapper *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletTxHistoryItemNested *)mapItemNestedExtrinsic:(XNetworking_fearlesswalletExtrinsics *)extrinsic params:(NSArray<XNetworking_fearlesswalletExtrinsicParam *> *)params __attribute__((swift_name("mapItemNested(extrinsic:params:)")));
- (XNetworking_fearlesswalletTxHistoryItem *)mapItemsExtrinsic:(XNetworking_fearlesswalletExtrinsics *)extrinsic params:(NSArray<XNetworking_fearlesswalletTxHistoryItemNested *> *)params __attribute__((swift_name("mapItems(extrinsic:params:)")));
- (XNetworking_fearlesswalletTxHistoryItem *)mapParamsExtrinsic:(XNetworking_fearlesswalletExtrinsics *)extrinsic params:(NSArray<XNetworking_fearlesswalletExtrinsicParam *> *)params __attribute__((swift_name("mapParams(extrinsic:params:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TxHistoryInfo")))
@interface XNetworking_fearlesswalletTxHistoryInfo : XNetworking_fearlesswalletBase
- (instancetype)initWithEndCursor:(NSString * _Nullable)endCursor endReached:(BOOL)endReached items:(NSArray<XNetworking_fearlesswalletTxHistoryItem *> *)items __attribute__((swift_name("init(endCursor:endReached:items:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletTxHistoryInfo *)doCopyEndCursor:(NSString * _Nullable)endCursor endReached:(BOOL)endReached items:(NSArray<XNetworking_fearlesswalletTxHistoryItem *> *)items __attribute__((swift_name("doCopy(endCursor:endReached:items:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable endCursor __attribute__((swift_name("endCursor")));
@property (readonly) BOOL endReached __attribute__((swift_name("endReached")));
@property (readonly) NSArray<XNetworking_fearlesswalletTxHistoryItem *> *items __attribute__((swift_name("items")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TxHistoryItem")))
@interface XNetworking_fearlesswalletTxHistoryItem : XNetworking_fearlesswalletBase
- (instancetype)initWithId:(NSString *)id blockHash:(NSString *)blockHash module:(NSString *)module method:(NSString *)method timestamp:(NSString *)timestamp networkFee:(NSString *)networkFee success:(BOOL)success data:(NSArray<XNetworking_fearlesswalletTxHistoryItemParam *> * _Nullable)data nestedData:(NSArray<XNetworking_fearlesswalletTxHistoryItemNested *> * _Nullable)nestedData __attribute__((swift_name("init(id:blockHash:module:method:timestamp:networkFee:success:data:nestedData:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletTxHistoryItem *)doCopyId:(NSString *)id blockHash:(NSString *)blockHash module:(NSString *)module method:(NSString *)method timestamp:(NSString *)timestamp networkFee:(NSString *)networkFee success:(BOOL)success data:(NSArray<XNetworking_fearlesswalletTxHistoryItemParam *> * _Nullable)data nestedData:(NSArray<XNetworking_fearlesswalletTxHistoryItemNested *> * _Nullable)nestedData __attribute__((swift_name("doCopy(id:blockHash:module:method:timestamp:networkFee:success:data:nestedData:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *blockHash __attribute__((swift_name("blockHash")));
@property (readonly) NSArray<XNetworking_fearlesswalletTxHistoryItemParam *> * _Nullable data __attribute__((swift_name("data")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *method __attribute__((swift_name("method")));
@property (readonly) NSString *module __attribute__((swift_name("module")));
@property (readonly) NSArray<XNetworking_fearlesswalletTxHistoryItemNested *> * _Nullable nestedData __attribute__((swift_name("nestedData")));
@property (readonly) NSString *networkFee __attribute__((swift_name("networkFee")));
@property (readonly) BOOL success __attribute__((swift_name("success")));
@property (readonly) NSString *timestamp __attribute__((swift_name("timestamp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TxHistoryItemNested")))
@interface XNetworking_fearlesswalletTxHistoryItemNested : XNetworking_fearlesswalletBase
- (instancetype)initWithModule:(NSString *)module method:(NSString *)method hash:(NSString *)hash data:(NSArray<XNetworking_fearlesswalletTxHistoryItemParam *> *)data __attribute__((swift_name("init(module:method:hash:data:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletTxHistoryItemNested *)doCopyModule:(NSString *)module method:(NSString *)method hash:(NSString *)hash data:(NSArray<XNetworking_fearlesswalletTxHistoryItemParam *> *)data __attribute__((swift_name("doCopy(module:method:hash:data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<XNetworking_fearlesswalletTxHistoryItemParam *> *data __attribute__((swift_name("data")));
@property (readonly, getter=hash_) NSString *hash __attribute__((swift_name("hash")));
@property (readonly) NSString *method __attribute__((swift_name("method")));
@property (readonly) NSString *module __attribute__((swift_name("module")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TxHistoryItemParam")))
@interface XNetworking_fearlesswalletTxHistoryItemParam : XNetworking_fearlesswalletBase
- (instancetype)initWithParamName:(NSString *)paramName paramValue:(NSString *)paramValue __attribute__((swift_name("init(paramName:paramValue:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletTxHistoryItemParam *)doCopyParamName:(NSString *)paramName paramValue:(NSString *)paramValue __attribute__((swift_name("doCopy(paramName:paramValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *paramName __attribute__((swift_name("paramName")));
@property (readonly) NSString *paramValue __attribute__((swift_name("paramValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TxHistoryResult")))
@interface XNetworking_fearlesswalletTxHistoryResult<R> : XNetworking_fearlesswalletBase
- (instancetype)initWithEndCursor:(NSString * _Nullable)endCursor endReached:(BOOL)endReached page:(int64_t)page items:(NSArray<id> *)items errorMessage:(NSString * _Nullable)errorMessage __attribute__((swift_name("init(endCursor:endReached:page:items:errorMessage:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString * _Nullable endCursor __attribute__((swift_name("endCursor")));
@property (readonly) BOOL endReached __attribute__((swift_name("endReached")));
@property (readonly) NSString * _Nullable errorMessage __attribute__((swift_name("errorMessage")));
@property (readonly) NSArray<id> *items __attribute__((swift_name("items")));
@property (readonly) int64_t page __attribute__((swift_name("page")));
@end

__attribute__((swift_name("TxHistoryClient")))
@interface XNetworking_fearlesswalletTxHistoryClient<T, R> : XNetworking_fearlesswalletBase
- (instancetype)initWithPageSize:(int32_t)pageSize historyInfoToResult:(R _Nullable (^)(XNetworking_fearlesswalletTxHistoryItem *))historyInfoToResult historyDatabaseProvider:(XNetworking_fearlesswalletHistoryDatabaseProvider *)historyDatabaseProvider __attribute__((swift_name("init(pageSize:historyInfoToResult:historyDatabaseProvider:)"))) __attribute__((objc_designated_initializer));
- (void)clearAllData __attribute__((swift_name("clearAllData()")));
- (void)clearDataAddress:(NSString *)address networkName:(NSString *)networkName __attribute__((swift_name("clearData(address:networkName:)")));
- (XNetworking_fearlesswalletTxHistoryInfo *)getTransactionCachedAddress:(NSString *)address networkName:(NSString *)networkName txHash:(NSString *)txHash __attribute__((swift_name("getTransactionCached(address:networkName:txHash:)")));
- (NSArray<id> *)getTransactionHistoryCachedAddress:(NSString *)address networkName:(NSString *)networkName count:(int32_t)count filter:(XNetworking_fearlesswalletBoolean *(^ _Nullable)(R _Nullable))filter __attribute__((swift_name("getTransactionHistoryCached(address:networkName:count:filter:)")));

/**
 * @note This method converts instances of CancellationException, IllegalArgumentException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTransactionHistoryPagedAddress:(NSString *)address networkName:(NSString *)networkName page:(int64_t)page url:(NSString *)url filter:(XNetworking_fearlesswalletBoolean *(^ _Nullable)(R _Nullable))filter completionHandler:(void (^)(XNetworking_fearlesswalletTxHistoryResult<R> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTransactionHistoryPaged(address:networkName:page:url:filter:completionHandler:)")));
- (NSArray<NSString *> *)getTransactionPeersQuery:(NSString *)query networkName:(NSString *)networkName __attribute__((swift_name("getTransactionPeers(query:networkName:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)requestCursor:(NSString * _Nullable)cursor address:(NSString *)address url:(NSString *)url completionHandler:(void (^)(XNetworking_fearlesswalletTxHistoryInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("request(cursor:address:url:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TxHistoryClientFactory")))
@interface XNetworking_fearlesswalletTxHistoryClientFactory<T, R> : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletSubQueryClient<T, R> *)createSubQuerySoramitsuNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)soramitsuNetworkClient baseUrl:(NSString *)baseUrl pageSize:(int32_t)pageSize deserializationStrategy:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializationStrategy jsonToHistoryInfo:(XNetworking_fearlesswalletTxHistoryInfo *(^)(T _Nullable))jsonToHistoryInfo historyIntoToResult:(R _Nullable (^)(XNetworking_fearlesswalletTxHistoryItem *))historyIntoToResult historyRequest:(NSString *)historyRequest __attribute__((swift_name("createSubQuery(soramitsuNetworkClient:baseUrl:pageSize:deserializationStrategy:jsonToHistoryInfo:historyIntoToResult:historyRequest:)")));
- (XNetworking_fearlesswalletSubSquidClient<T, R> *)createSubSquidSoramitsuNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)soramitsuNetworkClient baseUrl:(NSString *)baseUrl pageSize:(int32_t)pageSize deserializationStrategy:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializationStrategy jsonToHistoryInfo:(XNetworking_fearlesswalletTxHistoryInfo *(^)(T _Nullable))jsonToHistoryInfo historyIntoToResult:(R _Nullable (^)(XNetworking_fearlesswalletTxHistoryItem *))historyIntoToResult historyRequest:(NSString *)historyRequest __attribute__((swift_name("createSubSquid(soramitsuNetworkClient:baseUrl:pageSize:deserializationStrategy:jsonToHistoryInfo:historyIntoToResult:historyRequest:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SubQueryClient")))
@interface XNetworking_fearlesswalletSubQueryClient<T, R> : XNetworking_fearlesswalletTxHistoryClient<T, R>
- (instancetype)initWithNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)networkClient pageSize:(int32_t)pageSize deserializationStrategy:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializationStrategy jsonToHistoryInfo:(XNetworking_fearlesswalletTxHistoryInfo *(^)(T _Nullable))jsonToHistoryInfo historyInfoToResult:(R _Nullable (^)(XNetworking_fearlesswalletTxHistoryItem *))historyInfoToResult historyRequest:(NSString *)historyRequest historyDatabaseProvider:(XNetworking_fearlesswalletHistoryDatabaseProvider *)historyDatabaseProvider __attribute__((swift_name("init(networkClient:pageSize:deserializationStrategy:jsonToHistoryInfo:historyInfoToResult:historyRequest:historyDatabaseProvider:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPageSize:(int32_t)pageSize historyInfoToResult:(id _Nullable (^)(XNetworking_fearlesswalletTxHistoryItem *))historyInfoToResult historyDatabaseProvider:(XNetworking_fearlesswalletHistoryDatabaseProvider *)historyDatabaseProvider __attribute__((swift_name("init(pageSize:historyInfoToResult:historyDatabaseProvider:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)requestCursor:(NSString * _Nullable)cursor address:(NSString *)address url:(NSString *)url completionHandler:(void (^)(XNetworking_fearlesswalletTxHistoryInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("request(cursor:address:url:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SubSquidClient")))
@interface XNetworking_fearlesswalletSubSquidClient<T, R> : XNetworking_fearlesswalletTxHistoryClient<T, R>
- (instancetype)initWithNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)networkClient pageSize:(int32_t)pageSize deserializationStrategy:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializationStrategy jsonToHistoryInfo:(XNetworking_fearlesswalletTxHistoryInfo *(^)(T _Nullable))jsonToHistoryInfo historyInfoToResult:(R _Nullable (^)(XNetworking_fearlesswalletTxHistoryItem *))historyInfoToResult historyRequest:(NSString *)historyRequest historyDatabaseProvider:(XNetworking_fearlesswalletHistoryDatabaseProvider *)historyDatabaseProvider __attribute__((swift_name("init(networkClient:pageSize:deserializationStrategy:jsonToHistoryInfo:historyInfoToResult:historyRequest:historyDatabaseProvider:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPageSize:(int32_t)pageSize historyInfoToResult:(id _Nullable (^)(XNetworking_fearlesswalletTxHistoryItem *))historyInfoToResult historyDatabaseProvider:(XNetworking_fearlesswalletHistoryDatabaseProvider *)historyDatabaseProvider __attribute__((swift_name("init(pageSize:historyInfoToResult:historyDatabaseProvider:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletSubSquidClientCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)requestCursor:(NSString * _Nullable)cursor address:(NSString *)address url:(NSString *)url completionHandler:(void (^)(XNetworking_fearlesswalletTxHistoryInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("request(cursor:address:url:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SubSquidClientCompanion")))
@interface XNetworking_fearlesswalletSubSquidClientCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSubSquidClientCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseDriverFactory")))
@interface XNetworking_fearlesswalletDatabaseDriverFactory : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletSqlDriver>)createDriver __attribute__((swift_name("createDriver()")));
@end

__attribute__((swift_name("KotlinxSerializationExtensionProvider")))
@protocol XNetworking_fearlesswalletKotlinxSerializationExtensionProvider
@required
- (id<XNetworking_fearlesswalletKotlinxSerializationExtension> _Nullable)extensionFormat:(id<XNetworking_fearlesswalletSerialFormat>)format __attribute__((swift_name("extension(format:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinxSerializationJsonExtensionProvider")))
@interface XNetworking_fearlesswalletKotlinxSerializationJsonExtensionProvider : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinxSerializationExtensionProvider>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletKotlinxSerializationExtension> _Nullable)extensionFormat:(id<XNetworking_fearlesswalletSerialFormat>)format __attribute__((swift_name("extension(format:)")));
@end

__attribute__((swift_name("KotlinException")))
@interface XNetworking_fearlesswalletKotlinException : XNetworking_fearlesswalletKotlinThrowable
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentConverterException")))
@interface XNetworking_fearlesswalletContentConverterException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentNegotiation")))
@interface XNetworking_fearlesswalletContentNegotiation : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletContentNegotiationPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((swift_name("Configuration")))
@protocol XNetworking_fearlesswalletConfiguration
@required
- (void)registerContentType:(XNetworking_fearlesswalletContentType *)contentType converter:(id<XNetworking_fearlesswalletContentConverter>)converter configuration:(void (^)(id<XNetworking_fearlesswalletContentConverter>))configuration __attribute__((swift_name("register(contentType:converter:configuration:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentNegotiation.Config")))
@interface XNetworking_fearlesswalletContentNegotiationConfig : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletConfiguration>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)clearIgnoredTypes __attribute__((swift_name("clearIgnoredTypes()")));
- (void)ignoreType __attribute__((swift_name("ignoreType()")));
- (void)ignoreTypeType:(id<XNetworking_fearlesswalletKotlinKClass>)type __attribute__((swift_name("ignoreType(type:)")));
- (void)registerContentType:(XNetworking_fearlesswalletContentType *)contentType converter:(id<XNetworking_fearlesswalletContentConverter>)converter configuration:(void (^)(id<XNetworking_fearlesswalletContentConverter>))configuration __attribute__((swift_name("register(contentType:converter:configuration:)")));
- (void)registerContentTypeToSend:(XNetworking_fearlesswalletContentType *)contentTypeToSend converter:(id<XNetworking_fearlesswalletContentConverter>)converter contentTypeMatcher:(id<XNetworking_fearlesswalletContentTypeMatcher>)contentTypeMatcher configuration:(void (^)(id<XNetworking_fearlesswalletContentConverter>))configuration __attribute__((swift_name("register(contentTypeToSend:converter:contentTypeMatcher:configuration:)")));
- (void)removeIgnoredType __attribute__((swift_name("removeIgnoredType()")));
- (void)removeIgnoredTypeType:(id<XNetworking_fearlesswalletKotlinKClass>)type __attribute__((swift_name("removeIgnoredType(type:)")));
@end

__attribute__((swift_name("HttpClientPlugin")))
@protocol XNetworking_fearlesswalletHttpClientPlugin
@required
- (void)installPlugin:(id)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (id)prepareBlock:(void (^)(id))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<id> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentNegotiation.Plugin")))
@interface XNetworking_fearlesswalletContentNegotiationPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentNegotiationPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletContentNegotiation *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletContentNegotiation *)prepareBlock:(void (^)(XNetworking_fearlesswalletContentNegotiationConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletContentNegotiation *> *key __attribute__((swift_name("key")));
@end

__attribute__((swift_name("ContentTypeMatcher")))
@protocol XNetworking_fearlesswalletContentTypeMatcher
@required
- (BOOL)containsContentType:(XNetworking_fearlesswalletContentType *)contentType __attribute__((swift_name("contains(contentType:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonContentTypeMatcher")))
@interface XNetworking_fearlesswalletJsonContentTypeMatcher : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletContentTypeMatcher>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)jsonContentTypeMatcher __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJsonContentTypeMatcher *shared __attribute__((swift_name("shared")));
- (BOOL)containsContentType:(XNetworking_fearlesswalletContentType *)contentType __attribute__((swift_name("contains(contentType:)")));
@end

__attribute__((swift_name("KotlinComparable")))
@protocol XNetworking_fearlesswalletKotlinComparable
@required
- (int32_t)compareToOther:(id _Nullable)other __attribute__((swift_name("compareTo(other:)")));
@end

__attribute__((swift_name("KotlinEnum")))
@interface XNetworking_fearlesswalletKotlinEnum<E> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinComparable>
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletKotlinEnumCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(E)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t ordinal __attribute__((swift_name("ordinal")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LogLevel")))
@interface XNetworking_fearlesswalletLogLevel : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletLogLevel *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletLogLevel *all __attribute__((swift_name("all")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel *headers __attribute__((swift_name("headers")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel *body __attribute__((swift_name("body")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel *info __attribute__((swift_name("info")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel *none __attribute__((swift_name("none")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletLogLevel *> *)values __attribute__((swift_name("values()")));
@property (readonly) BOOL body __attribute__((swift_name("body")));
@property (readonly) BOOL headers __attribute__((swift_name("headers")));
@property (readonly) BOOL info __attribute__((swift_name("info")));
@end

__attribute__((swift_name("Logger")))
@protocol XNetworking_fearlesswalletLogger
@required
- (void)logMessage:(NSString *)message __attribute__((swift_name("log(message:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoggerCompanion")))
@interface XNetworking_fearlesswalletLoggerCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletLoggerCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Logging")))
@interface XNetworking_fearlesswalletLogging : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletLoggingCompanion *companion __attribute__((swift_name("companion")));
@property NSArray<XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletHttpRequestBuilder *)> *filters __attribute__((swift_name("filters")));
@property XNetworking_fearlesswalletLogLevel *level __attribute__((swift_name("level")));
@property (readonly) id<XNetworking_fearlesswalletLogger> logger __attribute__((swift_name("logger")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Logging.Companion")))
@interface XNetworking_fearlesswalletLoggingCompanion : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletLoggingCompanion *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletLogging *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletLogging *)prepareBlock:(void (^)(XNetworking_fearlesswalletLoggingConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletLogging *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Logging.Config")))
@interface XNetworking_fearlesswalletLoggingConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)filterPredicate:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletHttpRequestBuilder *))predicate __attribute__((swift_name("filter(predicate:)")));
- (void)sanitizeHeaderPlaceholder:(NSString *)placeholder predicate:(XNetworking_fearlesswalletBoolean *(^)(NSString *))predicate __attribute__((swift_name("sanitizeHeader(placeholder:predicate:)")));
@property XNetworking_fearlesswalletLogLevel *level __attribute__((swift_name("level")));
@property id<XNetworking_fearlesswalletLogger> logger __attribute__((swift_name("logger")));
@end

__attribute__((swift_name("HttpClientEngineFactory")))
@protocol XNetworking_fearlesswalletHttpClientEngineFactory
@required
- (id<XNetworking_fearlesswalletHttpClientEngine>)createBlock:(void (^)(XNetworking_fearlesswalletHttpClientEngineConfig *))block __attribute__((swift_name("create(block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Darwin")))
@interface XNetworking_fearlesswalletDarwin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientEngineFactory>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)darwin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletDarwin *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletHttpClientEngine>)createBlock:(void (^)(XNetworking_fearlesswalletDarwinClientEngineConfig *))block __attribute__((swift_name("create(block:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("HttpClientEngineConfig")))
@interface XNetworking_fearlesswalletHttpClientEngineConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property BOOL pipelining __attribute__((swift_name("pipelining")));
@property XNetworking_fearlesswalletProxyConfig * _Nullable proxy __attribute__((swift_name("proxy")));
@property int32_t threadsCount __attribute__((swift_name("threadsCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DarwinClientEngineConfig")))
@interface XNetworking_fearlesswalletDarwinClientEngineConfig : XNetworking_fearlesswalletHttpClientEngineConfig
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)configureRequestBlock:(void (^)(NSMutableURLRequest *))block __attribute__((swift_name("configureRequest(block:)")));
- (void)configureSessionBlock:(void (^)(NSURLSessionConfiguration *))block __attribute__((swift_name("configureSession(block:)")));
- (void)handleChallengeBlock:(void (^)(NSURLSession *, NSURLSessionTask *, NSURLAuthenticationChallenge *, XNetworking_fearlesswalletKotlinUnit *(^)(XNetworking_fearlesswalletLong *, NSURLCredential * _Nullable)))block __attribute__((swift_name("handleChallenge(block:)")));
- (void)usePreconfiguredSessionSession:(NSURLSession *)session delegate:(NSObject *)delegate __attribute__((swift_name("usePreconfiguredSession(session:delegate:)")));
- (void)usePreconfiguredSessionSession:(NSURLSession * _Nullable)session __attribute__((swift_name("usePreconfiguredSession(session:)"))) __attribute__((deprecated("Please use method with delegate parameter")));
@property (readonly) void (^ _Nullable challengeHandler)(NSURLSession *, NSURLSessionTask *, NSURLAuthenticationChallenge *, XNetworking_fearlesswalletKotlinUnit *(^)(XNetworking_fearlesswalletLong *, NSURLCredential * _Nullable)) __attribute__((swift_name("challengeHandler")));
@property (readonly) NSURLSession * _Nullable preconfiguredSession __attribute__((swift_name("preconfiguredSession")));
@property void (^requestConfig)(NSMutableURLRequest *) __attribute__((swift_name("requestConfig")));
@property void (^sessionConfig)(NSURLSessionConfiguration *) __attribute__((swift_name("sessionConfig")));
@end

__attribute__((swift_name("IOException")))
@interface XNetworking_fearlesswalletIOException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DarwinHttpRequestException")))
@interface XNetworking_fearlesswalletDarwinHttpRequestException : XNetworking_fearlesswalletIOException
- (instancetype)initWithOrigin:(NSError *)origin __attribute__((swift_name("init(origin:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSError *origin __attribute__((swift_name("origin")));
@end

__attribute__((unavailable("Kotlin subclass of Objective-C class can't be imported")))
__attribute__((swift_name("KtorNSURLSessionDelegate")))
@interface XNetworking_fearlesswalletKtorNSURLSessionDelegate : NSObject
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CertificatePinner")))
@interface XNetworking_fearlesswalletCertificatePinner : NSObject
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PinnedCertificate")))
@interface XNetworking_fearlesswalletPinnedCertificate : XNetworking_fearlesswalletBase
- (instancetype)initWithPattern:(NSString *)pattern hashAlgorithm:(NSString *)hashAlgorithm hash:(NSString *)hash __attribute__((swift_name("init(pattern:hashAlgorithm:hash:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletPinnedCertificateCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletPinnedCertificate *)doCopyPattern:(NSString *)pattern hashAlgorithm:(NSString *)hashAlgorithm hash:(NSString *)hash __attribute__((swift_name("doCopy(pattern:hashAlgorithm:hash:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly, getter=hash_) NSString *hash __attribute__((swift_name("hash")));
@property (readonly) NSString *hashAlgorithm __attribute__((swift_name("hashAlgorithm")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PinnedCertificate.Companion")))
@interface XNetworking_fearlesswalletPinnedCertificateCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPinnedCertificateCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletPinnedCertificate *)doNewPattern:(NSString *)pattern pin:(NSString *)pin __attribute__((swift_name("doNew(pattern:pin:)")));
@end

__attribute__((swift_name("CoroutineScope")))
@protocol XNetworking_fearlesswalletCoroutineScope
@required
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((swift_name("Closeable")))
@protocol XNetworking_fearlesswalletCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClient")))
@interface XNetworking_fearlesswalletHttpClient : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCoroutineScope, XNetworking_fearlesswalletCloseable>
- (instancetype)initWithEngine:(id<XNetworking_fearlesswalletHttpClientEngine>)engine userConfig:(XNetworking_fearlesswalletHttpClientConfig<XNetworking_fearlesswalletHttpClientEngineConfig *> *)userConfig __attribute__((swift_name("init(engine:userConfig:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (XNetworking_fearlesswalletHttpClient *)configBlock:(void (^)(XNetworking_fearlesswalletHttpClientConfig<id> *))block __attribute__((swift_name("config(block:)")));
- (BOOL)isSupportedCapability:(id<XNetworking_fearlesswalletHttpClientEngineCapability>)capability __attribute__((swift_name("isSupported(capability:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<XNetworking_fearlesswalletHttpClientEngine> engine __attribute__((swift_name("engine")));
@property (readonly) XNetworking_fearlesswalletHttpClientEngineConfig *engineConfig __attribute__((swift_name("engineConfig")));
@property (readonly) XNetworking_fearlesswalletEvents *monitor __attribute__((swift_name("monitor")));
@property (readonly) XNetworking_fearlesswalletHttpReceivePipeline *receivePipeline __attribute__((swift_name("receivePipeline")));
@property (readonly) XNetworking_fearlesswalletHttpRequestPipeline *requestPipeline __attribute__((swift_name("requestPipeline")));
@property (readonly) XNetworking_fearlesswalletHttpResponsePipeline *responsePipeline __attribute__((swift_name("responsePipeline")));
@property (readonly) XNetworking_fearlesswalletHttpSendPipeline *sendPipeline __attribute__((swift_name("sendPipeline")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientConfig")))
@interface XNetworking_fearlesswalletHttpClientConfig<T> : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletHttpClientConfig<T> *)clone __attribute__((swift_name("clone()")));
- (void)engineBlock:(void (^)(T))block __attribute__((swift_name("engine(block:)")));
- (void)installClient:(XNetworking_fearlesswalletHttpClient *)client __attribute__((swift_name("install(client:)")));
- (void)installPlugin:(id<XNetworking_fearlesswalletHttpClientPlugin>)plugin configure:(void (^)(id))configure __attribute__((swift_name("install(plugin:configure:)")));
- (void)installKey:(NSString *)key block:(void (^)(XNetworking_fearlesswalletHttpClient *))block __attribute__((swift_name("install(key:block:)")));
- (void)plusAssignOther:(XNetworking_fearlesswalletHttpClientConfig<T> *)other __attribute__((swift_name("plusAssign(other:)")));
@property BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess")));
@property BOOL followRedirects __attribute__((swift_name("followRedirects")));
@property BOOL useDefaultTransformers __attribute__((swift_name("useDefaultTransformers")));
@end

__attribute__((swift_name("KotlinRuntimeException")))
@interface XNetworking_fearlesswalletKotlinRuntimeException : XNetworking_fearlesswalletKotlinException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("KotlinIllegalStateException")))
@interface XNetworking_fearlesswalletKotlinIllegalStateException : XNetworking_fearlesswalletKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DoubleReceiveException")))
@interface XNetworking_fearlesswalletDoubleReceiveException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithCall:(XNetworking_fearlesswalletHttpClientCall *)call __attribute__((swift_name("init(call:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((swift_name("HttpClientCall")))
@interface XNetworking_fearlesswalletHttpClientCall : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCoroutineScope>
- (instancetype)initWithClient:(XNetworking_fearlesswalletHttpClient *)client requestData:(XNetworking_fearlesswalletHttpRequestData *)requestData responseData:(XNetworking_fearlesswalletHttpResponseData *)responseData __attribute__((swift_name("init(client:requestData:responseData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithClient:(XNetworking_fearlesswalletHttpClient *)client __attribute__((swift_name("init(client:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpClientCallCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyInfo:(XNetworking_fearlesswalletTypeInfo *)info completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("body(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyNullableInfo:(XNetworking_fearlesswalletTypeInfo *)info completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("bodyNullable(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)getResponseContentWithCompletionHandler:(void (^)(id<XNetworking_fearlesswalletByteReadChannel> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getResponseContent(completionHandler:)")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) BOOL allowDoubleReceive __attribute__((swift_name("allowDoubleReceive")));
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) XNetworking_fearlesswalletHttpClient *client __attribute__((swift_name("client")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property id<XNetworking_fearlesswalletHttpRequest> request __attribute__((swift_name("request")));
@property XNetworking_fearlesswalletHttpResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientCall.Companion")))
@interface XNetworking_fearlesswalletHttpClientCallCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpClientCallCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<id> *CustomResponse __attribute__((swift_name("CustomResponse"))) __attribute__((unavailable("This is going to be removed. Please file a ticket with clarification why and what for do you need it.")));
@end

__attribute__((swift_name("KotlinUnsupportedOperationException")))
@interface XNetworking_fearlesswalletKotlinUnsupportedOperationException : XNetworking_fearlesswalletKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoTransformationFoundException")))
@interface XNetworking_fearlesswalletNoTransformationFoundException : XNetworking_fearlesswalletKotlinUnsupportedOperationException
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response from:(id<XNetworking_fearlesswalletKotlinKClass>)from to:(id<XNetworking_fearlesswalletKotlinKClass>)to __attribute__((swift_name("init(response:from:to:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReceivePipelineException")))
@interface XNetworking_fearlesswalletReceivePipelineException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithRequest:(XNetworking_fearlesswalletHttpClientCall *)request info:(XNetworking_fearlesswalletTypeInfo *)info cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("init(request:info:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable *cause __attribute__((swift_name("cause")));
@property (readonly) XNetworking_fearlesswalletTypeInfo *info __attribute__((swift_name("info")));
@property (readonly) XNetworking_fearlesswalletHttpClientCall *request __attribute__((swift_name("request")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsupportedContentTypeException")))
@interface XNetworking_fearlesswalletUnsupportedContentTypeException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithContent:(XNetworking_fearlesswalletOutgoingContent *)content __attribute__((swift_name("init(content:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("KotlinIllegalArgumentException")))
@interface XNetworking_fearlesswalletKotlinIllegalArgumentException : XNetworking_fearlesswalletKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsupportedUpgradeProtocolException")))
@interface XNetworking_fearlesswalletUnsupportedUpgradeProtocolException : XNetworking_fearlesswalletKotlinIllegalArgumentException
- (instancetype)initWithUrl:(XNetworking_fearlesswalletUrl *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl")))
@interface XNetworking_fearlesswalletCacheControl : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cacheControl __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCacheControl *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *MAX_AGE __attribute__((swift_name("MAX_AGE")));
@property (readonly) NSString *MAX_STALE __attribute__((swift_name("MAX_STALE")));
@property (readonly) NSString *MIN_FRESH __attribute__((swift_name("MIN_FRESH")));
@property (readonly) NSString *MUST_REVALIDATE __attribute__((swift_name("MUST_REVALIDATE")));
@property (readonly) NSString *NO_CACHE __attribute__((swift_name("NO_CACHE")));
@property (readonly) NSString *NO_STORE __attribute__((swift_name("NO_STORE")));
@property (readonly) NSString *NO_TRANSFORM __attribute__((swift_name("NO_TRANSFORM")));
@property (readonly) NSString *ONLY_IF_CACHED __attribute__((swift_name("ONLY_IF_CACHED")));
@property (readonly) NSString *PRIVATE __attribute__((swift_name("PRIVATE")));
@property (readonly) NSString *PROXY_REVALIDATE __attribute__((swift_name("PROXY_REVALIDATE")));
@property (readonly) NSString *PUBLIC __attribute__((swift_name("PUBLIC")));
@property (readonly) NSString *S_MAX_AGE __attribute__((swift_name("S_MAX_AGE")));
@end

__attribute__((swift_name("OutgoingContent")))
@interface XNetworking_fearlesswalletOutgoingContent : XNetworking_fearlesswalletBase
- (id _Nullable)getPropertyKey:(XNetworking_fearlesswalletAttributeKey<id> *)key __attribute__((swift_name("getProperty(key:)")));
- (void)setPropertyKey:(XNetworking_fearlesswalletAttributeKey<id> *)key value:(id _Nullable)value __attribute__((swift_name("setProperty(key:value:)")));
- (id<XNetworking_fearlesswalletHeaders> _Nullable)trailers __attribute__((swift_name("trailers()")));
@property (readonly) XNetworking_fearlesswalletLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) XNetworking_fearlesswalletContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((swift_name("OutgoingContent.NoContent")))
@interface XNetworking_fearlesswalletOutgoingContentNoContent : XNetworking_fearlesswalletOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyContent")))
@interface XNetworking_fearlesswalletEmptyContent : XNetworking_fearlesswalletOutgoingContentNoContent
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)emptyContent __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletEmptyContent *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletLong *contentLength __attribute__((swift_name("contentLength")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponseReceiveFail")))
@interface XNetworking_fearlesswalletHttpResponseReceiveFail : XNetworking_fearlesswalletBase
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("init(response:cause:)"))) __attribute__((objc_designated_initializer));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable *cause __attribute__((swift_name("cause")));
@property (readonly) XNetworking_fearlesswalletHttpResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConnectTimeoutException")))
@interface XNetworking_fearlesswalletConnectTimeoutException : XNetworking_fearlesswalletIOException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SocketTimeoutException")))
@interface XNetworking_fearlesswalletSocketTimeoutException : XNetworking_fearlesswalletIOException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("ClientUpgradeContent")))
@interface XNetworking_fearlesswalletClientUpgradeContent : XNetworking_fearlesswalletOutgoingContentNoContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)pipeToOutput:(id<XNetworking_fearlesswalletByteWriteChannel>)output completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("pipeTo(output:completionHandler:)")));
- (void)verifyHeaders:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("verify(headers:)")));
@property (readonly) id<XNetworking_fearlesswalletByteWriteChannel> output __attribute__((swift_name("output")));
@end

__attribute__((swift_name("HttpMessage")))
@protocol XNetworking_fearlesswalletHttpMessage
@required
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers_ __attribute__((swift_name("headers_")));
@end

__attribute__((swift_name("HttpRequest")))
@protocol XNetworking_fearlesswalletHttpRequest <XNetworking_fearlesswalletHttpMessage, XNetworking_fearlesswalletCoroutineScope>
@required
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) XNetworking_fearlesswalletHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) XNetworking_fearlesswalletOutgoingContent *content __attribute__((swift_name("content")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) XNetworking_fearlesswalletUrl *url __attribute__((swift_name("url")));
@end

__attribute__((swift_name("DefaultHttpRequest")))
@interface XNetworking_fearlesswalletDefaultHttpRequest : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpRequest>
- (instancetype)initWithCall:(XNetworking_fearlesswalletHttpClientCall *)call data:(XNetworking_fearlesswalletHttpRequestData *)data __attribute__((swift_name("init(call:data:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) XNetworking_fearlesswalletHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) XNetworking_fearlesswalletOutgoingContent *content __attribute__((swift_name("content")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers_ __attribute__((swift_name("headers_")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) XNetworking_fearlesswalletUrl *url __attribute__((swift_name("url")));
@end

__attribute__((swift_name("HttpMessageBuilder")))
@protocol XNetworking_fearlesswalletHttpMessageBuilder
@required
@property (readonly) XNetworking_fearlesswalletHeadersBuilder *headers_ __attribute__((swift_name("headers_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestBuilder")))
@interface XNetworking_fearlesswalletHttpRequestBuilder : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpMessageBuilder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpRequestBuilderCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletHttpRequestData *)build __attribute__((swift_name("build()")));
- (id _Nullable)getCapabilityOrNullKey:(id<XNetworking_fearlesswalletHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (void)setAttributesBlock:(void (^)(id<XNetworking_fearlesswalletAttributes>))block __attribute__((swift_name("setAttributes(block:)")));
- (void)setCapabilityKey:(id<XNetworking_fearlesswalletHttpClientEngineCapability>)key capability:(id)capability __attribute__((swift_name("setCapability(key:capability:)")));
- (XNetworking_fearlesswalletHttpRequestBuilder *)takeFromBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder __attribute__((swift_name("takeFrom(builder:)")));
- (XNetworking_fearlesswalletHttpRequestBuilder *)takeFromWithExecutionContextBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder __attribute__((swift_name("takeFromWithExecutionContext(builder:)")));
- (void)urlBlock:(void (^)(XNetworking_fearlesswalletURLBuilder *, XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("url(block:)")));
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property id body __attribute__((swift_name("body")));
@property XNetworking_fearlesswalletTypeInfo * _Nullable bodyType __attribute__((swift_name("bodyType")));
@property (readonly) id<XNetworking_fearlesswalletJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) XNetworking_fearlesswalletHeadersBuilder *headers_ __attribute__((swift_name("headers_")));
@property XNetworking_fearlesswalletHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) XNetworking_fearlesswalletURLBuilder *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestBuilder.Companion")))
@interface XNetworking_fearlesswalletHttpRequestBuilderCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpRequestBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestData")))
@interface XNetworking_fearlesswalletHttpRequestData : XNetworking_fearlesswalletBase
- (instancetype)initWithUrl:(XNetworking_fearlesswalletUrl *)url method:(XNetworking_fearlesswalletHttpMethod *)method headers:(id<XNetworking_fearlesswalletHeaders>)headers body:(XNetworking_fearlesswalletOutgoingContent *)body executionContext:(id<XNetworking_fearlesswalletJob>)executionContext attributes:(id<XNetworking_fearlesswalletAttributes>)attributes __attribute__((swift_name("init(url:method:headers:body:executionContext:attributes:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)getCapabilityOrNullKey:(id<XNetworking_fearlesswalletHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) XNetworking_fearlesswalletOutgoingContent *body __attribute__((swift_name("body")));
@property (readonly) id<XNetworking_fearlesswalletJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) XNetworking_fearlesswalletUrl *url __attribute__((swift_name("url")));
@end

__attribute__((swift_name("Pipeline")))
@interface XNetworking_fearlesswalletPipeline<TSubject, TContext> : XNetworking_fearlesswalletBase
- (instancetype)initWithPhase:(XNetworking_fearlesswalletPipelinePhase *)phase interceptors:(NSArray<id<XNetworking_fearlesswalletKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer));
- (void)addPhasePhase:(XNetworking_fearlesswalletPipelinePhase *)phase __attribute__((swift_name("addPhase(phase:)")));
- (void)afterIntercepted __attribute__((swift_name("afterIntercepted()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeContext:(TContext)context subject:(TSubject)subject completionHandler:(void (^)(TSubject _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(context:subject:completionHandler:)")));
- (void)insertPhaseAfterReference:(XNetworking_fearlesswalletPipelinePhase *)reference phase:(XNetworking_fearlesswalletPipelinePhase *)phase __attribute__((swift_name("insertPhaseAfter(reference:phase:)")));
- (void)insertPhaseBeforeReference:(XNetworking_fearlesswalletPipelinePhase *)reference phase:(XNetworking_fearlesswalletPipelinePhase *)phase __attribute__((swift_name("insertPhaseBefore(reference:phase:)")));
- (void)interceptPhase:(XNetworking_fearlesswalletPipelinePhase *)phase block:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(phase:block:)")));
- (NSArray<id<XNetworking_fearlesswalletKotlinSuspendFunction2>> *)interceptorsForPhasePhase:(XNetworking_fearlesswalletPipelinePhase *)phase __attribute__((swift_name("interceptorsForPhase(phase:)")));
- (void)mergeFrom:(XNetworking_fearlesswalletPipeline<TSubject, TContext> *)from __attribute__((swift_name("merge(from:)")));
- (void)mergePhasesFrom:(XNetworking_fearlesswalletPipeline<TSubject, TContext> *)from __attribute__((swift_name("mergePhases(from:)")));
- (void)resetFromFrom:(XNetworking_fearlesswalletPipeline<TSubject, TContext> *)from __attribute__((swift_name("resetFrom(from:)")));
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) NSArray<XNetworking_fearlesswalletPipelinePhase *> *items __attribute__((swift_name("items")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestPipeline")))
@interface XNetworking_fearlesswalletHttpRequestPipeline : XNetworking_fearlesswalletPipeline<id, XNetworking_fearlesswalletHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(XNetworking_fearlesswalletPipelinePhase *)phase interceptors:(NSArray<id<XNetworking_fearlesswalletKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpRequestPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestPipeline.Phases")))
@interface XNetworking_fearlesswalletHttpRequestPipelinePhases : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpRequestPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Render __attribute__((swift_name("Render")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Send __attribute__((swift_name("Send")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponseData")))
@interface XNetworking_fearlesswalletHttpResponseData : XNetworking_fearlesswalletBase
- (instancetype)initWithStatusCode:(XNetworking_fearlesswalletHttpStatusCode *)statusCode requestTime:(XNetworking_fearlesswalletGMTDate *)requestTime headers:(id<XNetworking_fearlesswalletHeaders>)headers version:(XNetworking_fearlesswalletHttpProtocolVersion *)version body:(id)body callContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)callContext __attribute__((swift_name("init(statusCode:requestTime:headers:version:body:callContext:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id body __attribute__((swift_name("body")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> callContext __attribute__((swift_name("callContext")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) XNetworking_fearlesswalletGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) XNetworking_fearlesswalletGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *statusCode __attribute__((swift_name("statusCode")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSendPipeline")))
@interface XNetworking_fearlesswalletHttpSendPipeline : XNetworking_fearlesswalletPipeline<id, XNetworking_fearlesswalletHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(XNetworking_fearlesswalletPipelinePhase *)phase interceptors:(NSArray<id<XNetworking_fearlesswalletKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpSendPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSendPipeline.Phases")))
@interface XNetworking_fearlesswalletHttpSendPipelinePhases : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpSendPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Engine __attribute__((swift_name("Engine")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Monitoring __attribute__((swift_name("Monitoring")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *State __attribute__((swift_name("State")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelProvider")))
@interface XNetworking_fearlesswalletChannelProvider : XNetworking_fearlesswalletBase
- (instancetype)initWithSize:(XNetworking_fearlesswalletLong * _Nullable)size block:(id<XNetworking_fearlesswalletByteReadChannel> (^)(void))block __attribute__((swift_name("init(size:block:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<XNetworking_fearlesswalletByteReadChannel> (^block)(void) __attribute__((swift_name("block")));
@property (readonly) XNetworking_fearlesswalletLong * _Nullable size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormBuilder")))
@interface XNetworking_fearlesswalletFormBuilder : XNetworking_fearlesswalletBase
- (void)appendPart:(XNetworking_fearlesswalletFormPart<id> *)part __attribute__((swift_name("append(part:)")));
- (void)appendKey:(NSString *)key value:(id)value headers:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers:)")));
- (void)appendKey:(NSString *)key value:(XNetworking_fearlesswalletChannelProvider *)value headers_:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers_:)")));
- (void)appendKey:(NSString *)key value:(XNetworking_fearlesswalletInputProvider *)value headers__:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers__:)")));
- (void)appendKey:(NSString *)key value:(XNetworking_fearlesswalletByteReadPacket *)value headers___:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers___:)")));
- (void)appendKey:(NSString *)key values:(XNetworking_fearlesswalletKotlinArray<NSString *> *)values headers:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:values:headers:)")));
- (void)appendKey:(NSString *)key value:(BOOL)value headers____:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers____:)")));
- (void)appendKey:(NSString *)key value:(XNetworking_fearlesswalletKotlinByteArray *)value headers_____:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers_____:)")));
- (void)appendKey:(NSString *)key value:(id)value headers______:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers______:)")));
- (void)appendKey:(NSString *)key value:(NSString *)value headers_______:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:value:headers_______:)")));
- (void)appendKey:(NSString *)key values:(id)values headers_:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("append(key:values:headers_:)")));
- (void)appendInputKey:(NSString *)key headers:(id<XNetworking_fearlesswalletHeaders>)headers size:(XNetworking_fearlesswalletLong * _Nullable)size block:(XNetworking_fearlesswalletInput *(^)(void))block __attribute__((swift_name("appendInput(key:headers:size:block:)")));
@end

__attribute__((swift_name("OutgoingContent.ByteArrayContent")))
@interface XNetworking_fearlesswalletOutgoingContentByteArrayContent : XNetworking_fearlesswalletOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormDataContent")))
@interface XNetworking_fearlesswalletFormDataContent : XNetworking_fearlesswalletOutgoingContentByteArrayContent
- (instancetype)initWithFormData:(id<XNetworking_fearlesswalletParameters>)formData __attribute__((swift_name("init(formData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
@property (readonly) XNetworking_fearlesswalletLong *contentLength __attribute__((swift_name("contentLength")));
@property (readonly) XNetworking_fearlesswalletContentType *contentType __attribute__((swift_name("contentType")));
@property (readonly) id<XNetworking_fearlesswalletParameters> formData __attribute__((swift_name("formData")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormPart")))
@interface XNetworking_fearlesswalletFormPart<T> : XNetworking_fearlesswalletBase
- (instancetype)initWithKey:(NSString *)key value:(T)value headers:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("init(key:value:headers:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletFormPart<T> *)doCopyKey:(NSString *)key value:(T)value headers:(id<XNetworking_fearlesswalletHeaders>)headers __attribute__((swift_name("doCopy(key:value:headers:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) NSString *key __attribute__((swift_name("key")));
@property (readonly) T value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InputProvider")))
@interface XNetworking_fearlesswalletInputProvider : XNetworking_fearlesswalletBase
- (instancetype)initWithSize:(XNetworking_fearlesswalletLong * _Nullable)size block:(XNetworking_fearlesswalletInput *(^)(void))block __attribute__((swift_name("init(size:block:)"))) __attribute__((objc_designated_initializer));
@property (readonly) XNetworking_fearlesswalletInput *(^block)(void) __attribute__((swift_name("block")));
@property (readonly) XNetworking_fearlesswalletLong * _Nullable size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("OutgoingContent.WriteChannelContent")))
@interface XNetworking_fearlesswalletOutgoingContentWriteChannelContent : XNetworking_fearlesswalletOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeToChannel:(id<XNetworking_fearlesswalletByteWriteChannel>)channel completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeTo(channel:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiPartFormDataContent")))
@interface XNetworking_fearlesswalletMultiPartFormDataContent : XNetworking_fearlesswalletOutgoingContentWriteChannelContent
- (instancetype)initWithParts:(NSArray<XNetworking_fearlesswalletPartData *> *)parts boundary:(NSString *)boundary contentType:(XNetworking_fearlesswalletContentType *)contentType __attribute__((swift_name("init(parts:boundary:contentType:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeToChannel:(id<XNetworking_fearlesswalletByteWriteChannel>)channel completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeTo(channel:completionHandler:)")));
@property (readonly) NSString *boundary __attribute__((swift_name("boundary")));
@property (readonly) XNetworking_fearlesswalletLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) XNetworking_fearlesswalletContentType *contentType __attribute__((swift_name("contentType")));
@end

__attribute__((swift_name("HttpResponse")))
@interface XNetworking_fearlesswalletHttpResponse : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpMessage, XNetworking_fearlesswalletCoroutineScope>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<XNetworking_fearlesswalletByteReadChannel> content __attribute__((swift_name("content")));
@property (readonly) XNetworking_fearlesswalletGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) XNetworking_fearlesswalletGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *status __attribute__((swift_name("status")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultHttpResponse")))
@interface XNetworking_fearlesswalletDefaultHttpResponse : XNetworking_fearlesswalletHttpResponse
- (instancetype)initWithCall:(XNetworking_fearlesswalletHttpClientCall *)call responseData:(XNetworking_fearlesswalletHttpResponseData *)responseData __attribute__((swift_name("init(call:responseData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@property (readonly) XNetworking_fearlesswalletHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<XNetworking_fearlesswalletByteReadChannel> content __attribute__((swift_name("content")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers_ __attribute__((swift_name("headers_")));
@property (readonly) XNetworking_fearlesswalletGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) XNetworking_fearlesswalletGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *status __attribute__((swift_name("status")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpReceivePipeline")))
@interface XNetworking_fearlesswalletHttpReceivePipeline : XNetworking_fearlesswalletPipeline<XNetworking_fearlesswalletHttpResponse *, XNetworking_fearlesswalletKotlinUnit *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(XNetworking_fearlesswalletPipelinePhase *)phase interceptors:(NSArray<id<XNetworking_fearlesswalletKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpReceivePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpReceivePipeline.Phases")))
@interface XNetworking_fearlesswalletHttpReceivePipelinePhases : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpReceivePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *State __attribute__((swift_name("State")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponseContainer")))
@interface XNetworking_fearlesswalletHttpResponseContainer : XNetworking_fearlesswalletBase
- (instancetype)initWithExpectedType:(XNetworking_fearlesswalletTypeInfo *)expectedType response:(id)response __attribute__((swift_name("init(expectedType:response:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletHttpResponseContainer *)doCopyExpectedType:(XNetworking_fearlesswalletTypeInfo *)expectedType response:(id)response __attribute__((swift_name("doCopy(expectedType:response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletTypeInfo *expectedType __attribute__((swift_name("expectedType")));
@property (readonly) id response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponsePipeline")))
@interface XNetworking_fearlesswalletHttpResponsePipeline : XNetworking_fearlesswalletPipeline<XNetworking_fearlesswalletHttpResponseContainer *, XNetworking_fearlesswalletHttpClientCall *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(XNetworking_fearlesswalletPipelinePhase *)phase interceptors:(NSArray<id<XNetworking_fearlesswalletKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpResponsePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpResponsePipeline.Phases")))
@interface XNetworking_fearlesswalletHttpResponsePipelinePhases : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpResponsePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Parse __attribute__((swift_name("Parse")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) XNetworking_fearlesswalletPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpStatement")))
@interface XNetworking_fearlesswalletHttpStatement : XNetworking_fearlesswalletBase
- (instancetype)initWithBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder client:(XNetworking_fearlesswalletHttpClient *)client __attribute__((swift_name("init(builder:client:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("body(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("body(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeWithCompletionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(block:completionHandler:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClientEngineClosedException")))
@interface XNetworking_fearlesswalletClientEngineClosedException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@end

__attribute__((swift_name("HttpClientEngine")))
@protocol XNetworking_fearlesswalletHttpClientEngine <XNetworking_fearlesswalletCoroutineScope, XNetworking_fearlesswalletCloseable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeData:(XNetworking_fearlesswalletHttpRequestData *)data completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponseData * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(data:completionHandler:)")));
- (void)installClient:(XNetworking_fearlesswalletHttpClient *)client __attribute__((swift_name("install(client:)")));
@property (readonly) XNetworking_fearlesswalletHttpClientEngineConfig *config __attribute__((swift_name("config")));
@property (readonly) XNetworking_fearlesswalletCoroutineDispatcher *dispatcher __attribute__((swift_name("dispatcher")));
@property (readonly) NSSet<id<XNetworking_fearlesswalletHttpClientEngineCapability>> *supportedCapabilities __attribute__((swift_name("supportedCapabilities")));
@end

__attribute__((swift_name("HttpClientEngineBase")))
@interface XNetworking_fearlesswalletHttpClientEngineBase : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientEngine>
- (instancetype)initWithEngineName:(NSString *)engineName __attribute__((swift_name("init(engineName:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((swift_name("HttpClientEngineCapability")))
@protocol XNetworking_fearlesswalletHttpClientEngineCapability
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProxyBuilder")))
@interface XNetworking_fearlesswalletProxyBuilder : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)proxyBuilder __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletProxyBuilder *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletProxyConfig *)httpUrl:(XNetworking_fearlesswalletUrl *)url __attribute__((swift_name("http(url:)")));
- (XNetworking_fearlesswalletProxyConfig *)socksHost:(NSString *)host port:(int32_t)port __attribute__((swift_name("socks(host:port:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProxyConfig")))
@interface XNetworking_fearlesswalletProxyConfig : XNetworking_fearlesswalletBase
- (instancetype)initWithUrl:(XNetworking_fearlesswalletUrl *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletUrl *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProxyType")))
@interface XNetworking_fearlesswalletProxyType : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletProxyType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletProxyType *socks __attribute__((swift_name("socks")));
@property (class, readonly) XNetworking_fearlesswalletProxyType *http __attribute__((swift_name("http")));
@property (class, readonly) XNetworking_fearlesswalletProxyType *unknown __attribute__((swift_name("unknown")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletProxyType *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("KotlinIterable")))
@protocol XNetworking_fearlesswalletKotlinIterable
@required
- (id<XNetworking_fearlesswalletKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("engines")))
@interface XNetworking_fearlesswalletengines : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterable>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)engines __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletengines *shared __attribute__((swift_name("shared")));
- (void)appendItem:(id<XNetworking_fearlesswalletHttpClientEngineFactory>)item __attribute__((swift_name("append(item:)")));
- (id<XNetworking_fearlesswalletKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BodyProgress")))
@interface XNetworking_fearlesswalletBodyProgress : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletBodyProgressPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BodyProgress.Plugin")))
@interface XNetworking_fearlesswalletBodyProgressPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletBodyProgressPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletBodyProgress *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletBodyProgress *)prepareBlock:(void (^)(XNetworking_fearlesswalletKotlinUnit *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletBodyProgress *> *key __attribute__((swift_name("key")));
@end

__attribute__((swift_name("ResponseException")))
@interface XNetworking_fearlesswalletResponseException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) XNetworking_fearlesswalletHttpResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClientRequestException")))
@interface XNetworking_fearlesswalletClientRequestException : XNetworking_fearlesswalletResponseException
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataConversion")))
@interface XNetworking_fearlesswalletDataConversion : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)dataConversion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletDataConversion *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletDataConversion_ *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletDataConversion_ *)prepareBlock:(void (^)(XNetworking_fearlesswalletDataConversion_Configuration *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletDataConversion_ *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultRequest")))
@interface XNetworking_fearlesswalletDefaultRequest : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletDefaultRequestPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultRequest.DefaultRequestBuilder")))
@interface XNetworking_fearlesswalletDefaultRequestDefaultRequestBuilder : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpMessageBuilder>
- (void)setAttributesBlock:(void (^)(id<XNetworking_fearlesswalletAttributes>))block __attribute__((swift_name("setAttributes(block:)")));
- (void)urlBlock:(void (^)(XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("url(block:)")));
- (void)urlUrlString:(NSString *)urlString __attribute__((swift_name("url(urlString:)")));
- (void)urlScheme:(NSString * _Nullable)scheme host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path block:(void (^)(XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("url(scheme:host:port:path:block:)")));
@property (readonly) id<XNetworking_fearlesswalletAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) XNetworking_fearlesswalletHeadersBuilder *headers_ __attribute__((swift_name("headers_")));
@property NSString *host __attribute__((swift_name("host")));
@property int32_t port __attribute__((swift_name("port")));
@property (readonly) XNetworking_fearlesswalletURLBuilder *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultRequest.Plugin")))
@interface XNetworking_fearlesswalletDefaultRequestPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletDefaultRequestPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletDefaultRequest *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletDefaultRequest *)prepareBlock:(void (^)(XNetworking_fearlesswalletDefaultRequestDefaultRequestBuilder *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletDefaultRequest *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCallValidator")))
@interface XNetworking_fearlesswalletHttpCallValidator : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpCallValidatorCompanion *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCallValidator.Companion")))
@interface XNetworking_fearlesswalletHttpCallValidatorCompanion : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpCallValidatorCompanion *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpCallValidator *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpCallValidator *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpCallValidatorConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpCallValidator *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCallValidator.Config")))
@interface XNetworking_fearlesswalletHttpCallValidatorConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)handleResponseExceptionBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("handleResponseException(block:)"))) __attribute__((deprecated("Consider using `handleResponseExceptionWithRequest` instead")));
- (void)handleResponseExceptionWithRequestBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)block __attribute__((swift_name("handleResponseExceptionWithRequest(block:)")));
- (void)validateResponseBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("validateResponse(block:)")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess"))) __attribute__((deprecated("This property is ignored. Please use `expectSuccess` property in HttpClientConfig. This is going to become internal.")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpPlainText")))
@interface XNetworking_fearlesswalletHttpPlainText : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpPlainTextPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpPlainText.Config")))
@interface XNetworking_fearlesswalletHttpPlainTextConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)registerCharset:(XNetworking_fearlesswalletCharset *)charset quality:(XNetworking_fearlesswalletFloat * _Nullable)quality __attribute__((swift_name("register(charset:quality:)")));
@property XNetworking_fearlesswalletCharset *responseCharsetFallback __attribute__((swift_name("responseCharsetFallback")));
@property XNetworking_fearlesswalletCharset * _Nullable sendCharset __attribute__((swift_name("sendCharset")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpPlainText.Plugin")))
@interface XNetworking_fearlesswalletHttpPlainTextPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpPlainTextPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpPlainText *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpPlainText *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpPlainTextConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpPlainText *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRedirect")))
@interface XNetworking_fearlesswalletHttpRedirect : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpRedirectPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRedirect.Config")))
@interface XNetworking_fearlesswalletHttpRedirectConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property BOOL allowHttpsDowngrade __attribute__((swift_name("allowHttpsDowngrade")));
@property BOOL checkHttpMethod __attribute__((swift_name("checkHttpMethod")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRedirect.Plugin")))
@interface XNetworking_fearlesswalletHttpRedirectPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpRedirectPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpRedirect *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpRedirect *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpRedirectConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpResponse *> *HttpResponseRedirect __attribute__((swift_name("HttpResponseRedirect")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpRedirect *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestRetry")))
@interface XNetworking_fearlesswalletHttpRequestRetry : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpRequestRetryPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestRetry.Configuration")))
@interface XNetworking_fearlesswalletHttpRequestRetryConfiguration : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)constantDelayMillis:(int64_t)millis randomizationMs:(int64_t)randomizationMs respectRetryAfterHeader:(BOOL)respectRetryAfterHeader __attribute__((swift_name("constantDelay(millis:randomizationMs:respectRetryAfterHeader:)")));
- (void)delayBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("delay(block:)")));
- (void)delayMillisRespectRetryAfterHeader:(BOOL)respectRetryAfterHeader block:(XNetworking_fearlesswalletLong *(^)(XNetworking_fearlesswalletHttpRequestRetryDelayContext *, XNetworking_fearlesswalletInt *))block __attribute__((swift_name("delayMillis(respectRetryAfterHeader:block:)")));
- (void)exponentialDelayBase:(double)base maxDelayMs:(int64_t)maxDelayMs randomizationMs:(int64_t)randomizationMs respectRetryAfterHeader:(BOOL)respectRetryAfterHeader __attribute__((swift_name("exponentialDelay(base:maxDelayMs:randomizationMs:respectRetryAfterHeader:)")));
- (void)modifyRequestBlock:(void (^)(XNetworking_fearlesswalletHttpRequestRetryModifyRequestContext *, XNetworking_fearlesswalletHttpRequestBuilder *))block __attribute__((swift_name("modifyRequest(block:)")));
- (void)noRetry __attribute__((swift_name("noRetry()")));
- (void)retryIfMaxRetries:(int32_t)maxRetries block:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletHttpRequestRetryShouldRetryContext *, id<XNetworking_fearlesswalletHttpRequest>, XNetworking_fearlesswalletHttpResponse *))block __attribute__((swift_name("retryIf(maxRetries:block:)")));
- (void)retryOnExceptionMaxRetries:(int32_t)maxRetries retryOnTimeout:(BOOL)retryOnTimeout __attribute__((swift_name("retryOnException(maxRetries:retryOnTimeout:)")));
- (void)retryOnExceptionIfMaxRetries:(int32_t)maxRetries block:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletHttpRequestRetryShouldRetryContext *, XNetworking_fearlesswalletHttpRequestBuilder *, XNetworking_fearlesswalletKotlinThrowable *))block __attribute__((swift_name("retryOnExceptionIf(maxRetries:block:)")));
- (void)retryOnExceptionOrServerErrorsMaxRetries:(int32_t)maxRetries __attribute__((swift_name("retryOnExceptionOrServerErrors(maxRetries:)")));
- (void)retryOnServerErrorsMaxRetries:(int32_t)maxRetries __attribute__((swift_name("retryOnServerErrors(maxRetries:)")));
@property int32_t maxRetries __attribute__((swift_name("maxRetries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestRetry.DelayContext")))
@interface XNetworking_fearlesswalletHttpRequestRetryDelayContext : XNetworking_fearlesswalletBase
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) XNetworking_fearlesswalletHttpRequestBuilder *request __attribute__((swift_name("request")));
@property (readonly) XNetworking_fearlesswalletHttpResponse * _Nullable response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestRetry.ModifyRequestContext")))
@interface XNetworking_fearlesswalletHttpRequestRetryModifyRequestContext : XNetworking_fearlesswalletBase
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) XNetworking_fearlesswalletHttpRequestBuilder *request __attribute__((swift_name("request")));
@property (readonly) XNetworking_fearlesswalletHttpResponse * _Nullable response __attribute__((swift_name("response")));
@property (readonly) int32_t retryCount __attribute__((swift_name("retryCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestRetry.Plugin")))
@interface XNetworking_fearlesswalletHttpRequestRetryPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpRequestRetryPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpRequestRetry *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpRequestRetry *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpRequestRetryConfiguration *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpRequestRetryRetryEventData *> *HttpRequestRetryEvent __attribute__((swift_name("HttpRequestRetryEvent")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpRequestRetry *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestRetry.RetryEventData")))
@interface XNetworking_fearlesswalletHttpRequestRetryRetryEventData : XNetworking_fearlesswalletBase
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) XNetworking_fearlesswalletHttpRequestBuilder *request __attribute__((swift_name("request")));
@property (readonly) XNetworking_fearlesswalletHttpResponse * _Nullable response __attribute__((swift_name("response")));
@property (readonly) int32_t retryCount __attribute__((swift_name("retryCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestRetry.ShouldRetryContext")))
@interface XNetworking_fearlesswalletHttpRequestRetryShouldRetryContext : XNetworking_fearlesswalletBase
- (instancetype)initWithRetryCount:(int32_t)retryCount __attribute__((swift_name("init(retryCount:)"))) __attribute__((objc_designated_initializer));
@property (readonly) int32_t retryCount __attribute__((swift_name("retryCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestTimeoutException")))
@interface XNetworking_fearlesswalletHttpRequestTimeoutException : XNetworking_fearlesswalletIOException
- (instancetype)initWithRequest:(XNetworking_fearlesswalletHttpRequestBuilder *)request __attribute__((swift_name("init(request:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithRequest_:(XNetworking_fearlesswalletHttpRequestData *)request __attribute__((swift_name("init(request_:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUrl:(NSString *)url timeoutMillis:(XNetworking_fearlesswalletLong * _Nullable)timeoutMillis __attribute__((swift_name("init(url:timeoutMillis:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSend")))
@interface XNetworking_fearlesswalletHttpSend : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpSendPlugin *companion __attribute__((swift_name("companion")));
- (void)interceptBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(block:)")));
- (void)interceptBlock_:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)block __attribute__((swift_name("intercept(block_:)"))) __attribute__((unavailable("This interceptors do not allow to intercept first network call. Please use another overload and replace HttpClientCall parameter using `val call = execute(request)`")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSend.Config")))
@interface XNetworking_fearlesswalletHttpSendConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property int32_t maxSendCount __attribute__((swift_name("maxSendCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpSend.Plugin")))
@interface XNetworking_fearlesswalletHttpSendPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpSendPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpSend *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpSend *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpSendConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpSend *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout")))
@interface XNetworking_fearlesswalletHttpTimeout : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpTimeoutPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout.HttpTimeoutCapabilityConfiguration")))
@interface XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfiguration : XNetworking_fearlesswalletBase
- (instancetype)initWithRequestTimeoutMillis:(XNetworking_fearlesswalletLong * _Nullable)requestTimeoutMillis connectTimeoutMillis:(XNetworking_fearlesswalletLong * _Nullable)connectTimeoutMillis socketTimeoutMillis:(XNetworking_fearlesswalletLong * _Nullable)socketTimeoutMillis __attribute__((swift_name("init(requestTimeoutMillis:connectTimeoutMillis:socketTimeoutMillis:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
@property XNetworking_fearlesswalletLong * _Nullable connectTimeoutMillis __attribute__((swift_name("connectTimeoutMillis")));
@property XNetworking_fearlesswalletLong * _Nullable requestTimeoutMillis __attribute__((swift_name("requestTimeoutMillis")));
@property XNetworking_fearlesswalletLong * _Nullable socketTimeoutMillis __attribute__((swift_name("socketTimeoutMillis")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout.HttpTimeoutCapabilityConfigurationCompanion")))
@interface XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfigurationCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfiguration *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeout.Plugin")))
@interface XNetworking_fearlesswalletHttpTimeoutPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin, XNetworking_fearlesswalletHttpClientEngineCapability>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpTimeoutPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpTimeout *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpTimeout *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfiguration *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) int64_t INFINITE_TIMEOUT_MS __attribute__((swift_name("INFINITE_TIMEOUT_MS")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpTimeout *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RedirectResponseException")))
@interface XNetworking_fearlesswalletRedirectResponseException : XNetworking_fearlesswalletResponseException
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendCountExceedException")))
@interface XNetworking_fearlesswalletSendCountExceedException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("Sender")))
@protocol XNetworking_fearlesswalletSender
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeRequestBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)requestBuilder completionHandler:(void (^)(XNetworking_fearlesswalletHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(requestBuilder:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServerResponseException")))
@interface XNetworking_fearlesswalletServerResponseException : XNetworking_fearlesswalletResponseException
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("Please, provide response text in constructor")));
- (instancetype)initWithResponse:(XNetworking_fearlesswalletHttpResponse *)response cachedResponseText:(NSString *)cachedResponseText __attribute__((swift_name("init(response:cachedResponseText:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserAgent")))
@interface XNetworking_fearlesswalletUserAgent : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletUserAgentPlugin *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *agent __attribute__((swift_name("agent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserAgent.Config")))
@interface XNetworking_fearlesswalletUserAgentConfig : XNetworking_fearlesswalletBase
- (instancetype)initWithAgent:(NSString *)agent __attribute__((swift_name("init(agent:)"))) __attribute__((objc_designated_initializer));
@property NSString *agent __attribute__((swift_name("agent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserAgent.Plugin")))
@interface XNetworking_fearlesswalletUserAgentPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletUserAgentPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletUserAgent *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletUserAgent *)prepareBlock:(void (^)(XNetworking_fearlesswalletUserAgentConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletUserAgent *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCache")))
@interface XNetworking_fearlesswalletHttpCache : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpCacheCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) XNetworking_fearlesswalletHttpCacheStorage *privateStorage __attribute__((swift_name("privateStorage"))) __attribute__((deprecated("This will become internal")));
@property (readonly) XNetworking_fearlesswalletHttpCacheStorage *publicStorage __attribute__((swift_name("publicStorage"))) __attribute__((deprecated("This will become internal")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCache.Companion")))
@interface XNetworking_fearlesswalletHttpCacheCompanion : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpCacheCompanion *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpCache *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpCache *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpCacheConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpResponse *> *HttpResponseFromCache __attribute__((swift_name("HttpResponseFromCache")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpCache *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCache.Config")))
@interface XNetworking_fearlesswalletHttpCacheConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)privateStorageStorage:(id<XNetworking_fearlesswalletCacheStorage>)storage __attribute__((swift_name("privateStorage(storage:)")));
- (void)publicStorageStorage:(id<XNetworking_fearlesswalletCacheStorage>)storage __attribute__((swift_name("publicStorage(storage:)")));
@property BOOL isShared __attribute__((swift_name("isShared")));
@property XNetworking_fearlesswalletHttpCacheStorage *privateStorage __attribute__((swift_name("privateStorage"))) __attribute__((deprecated("This will become internal. Use setter method instead with new storage interface")));
@property XNetworking_fearlesswalletHttpCacheStorage *publicStorage __attribute__((swift_name("publicStorage"))) __attribute__((deprecated("This will become internal. Use setter method instead with new storage interface")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCacheEntry")))
@interface XNetworking_fearlesswalletHttpCacheEntry : XNetworking_fearlesswalletBase
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
@property (readonly) XNetworking_fearlesswalletKotlinByteArray *body __attribute__((swift_name("body")));
@property (readonly) XNetworking_fearlesswalletGMTDate *expires __attribute__((swift_name("expires")));
@property (readonly) XNetworking_fearlesswalletHttpResponse *response __attribute__((swift_name("response")));
@property (readonly) NSDictionary<NSString *, NSString *> *varyKeys __attribute__((swift_name("varyKeys")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvalidCacheStateException")))
@interface XNetworking_fearlesswalletInvalidCacheStateException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl __attribute__((swift_name("init(requestUrl:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("CacheStorage")))
@protocol XNetworking_fearlesswalletCacheStorage
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findUrl:(XNetworking_fearlesswalletUrl *)url varyKeys:(NSDictionary<NSString *, NSString *> *)varyKeys completionHandler:(void (^)(XNetworking_fearlesswalletCachedResponseData * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("find(url:varyKeys:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findAllUrl:(XNetworking_fearlesswalletUrl *)url completionHandler:(void (^)(NSSet<XNetworking_fearlesswalletCachedResponseData *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findAll(url:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)storeUrl:(XNetworking_fearlesswalletUrl *)url data:(XNetworking_fearlesswalletCachedResponseData *)data completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("store(url:data:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheStorageCompanion")))
@interface XNetworking_fearlesswalletCacheStorageCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCacheStorageCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) id<XNetworking_fearlesswalletCacheStorage> Disabled __attribute__((swift_name("Disabled")));
@property (readonly) id<XNetworking_fearlesswalletCacheStorage> (^Unlimited)(void) __attribute__((swift_name("Unlimited")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CachedResponseData")))
@interface XNetworking_fearlesswalletCachedResponseData : XNetworking_fearlesswalletBase
- (instancetype)initWithUrl:(XNetworking_fearlesswalletUrl *)url statusCode:(XNetworking_fearlesswalletHttpStatusCode *)statusCode requestTime:(XNetworking_fearlesswalletGMTDate *)requestTime responseTime:(XNetworking_fearlesswalletGMTDate *)responseTime version:(XNetworking_fearlesswalletHttpProtocolVersion *)version expires:(XNetworking_fearlesswalletGMTDate *)expires headers:(id<XNetworking_fearlesswalletHeaders>)headers varyKeys:(NSDictionary<NSString *, NSString *> *)varyKeys body:(XNetworking_fearlesswalletKotlinByteArray *)body __attribute__((swift_name("init(url:statusCode:requestTime:responseTime:version:expires:headers:varyKeys:body:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
@property (readonly) XNetworking_fearlesswalletKotlinByteArray *body __attribute__((swift_name("body")));
@property (readonly) XNetworking_fearlesswalletGMTDate *expires __attribute__((swift_name("expires")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) XNetworking_fearlesswalletGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) XNetworking_fearlesswalletGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *statusCode __attribute__((swift_name("statusCode")));
@property (readonly) XNetworking_fearlesswalletUrl *url __attribute__((swift_name("url")));
@property (readonly) NSDictionary<NSString *, NSString *> *varyKeys __attribute__((swift_name("varyKeys")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((swift_name("HttpCacheStorage")))
@interface XNetworking_fearlesswalletHttpCacheStorage : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Use new [CacheStorage] instead.")));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpCacheStorageCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletHttpCacheEntry * _Nullable)findUrl:(XNetworking_fearlesswalletUrl *)url varyKeys:(NSDictionary<NSString *, NSString *> *)varyKeys __attribute__((swift_name("find(url:varyKeys:)")));
- (NSSet<XNetworking_fearlesswalletHttpCacheEntry *> *)findByUrlUrl:(XNetworking_fearlesswalletUrl *)url __attribute__((swift_name("findByUrl(url:)")));
- (void)storeUrl:(XNetworking_fearlesswalletUrl *)url value:(XNetworking_fearlesswalletHttpCacheEntry *)value __attribute__((swift_name("store(url:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCacheStorage.Companion")))
@interface XNetworking_fearlesswalletHttpCacheStorageCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpCacheStorageCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletHttpCacheStorage *Disabled __attribute__((swift_name("Disabled")));
@property (readonly) XNetworking_fearlesswalletHttpCacheStorage *(^Unlimited)(void) __attribute__((swift_name("Unlimited")));
@end

__attribute__((swift_name("WebSocketSession")))
@protocol XNetworking_fearlesswalletWebSocketSession <XNetworking_fearlesswalletCoroutineScope>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)flushWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("flush(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFrame:(XNetworking_fearlesswalletFrame *)frame completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("send(frame:completionHandler:)")));
- (void)terminate __attribute__((swift_name("terminate()"))) __attribute__((deprecated("Use cancel() instead.")));
@property (readonly) NSArray<id<XNetworking_fearlesswalletWebSocketExtension>> *extensions __attribute__((swift_name("extensions")));
@property (readonly) id<XNetworking_fearlesswalletReceiveChannel> incoming __attribute__((swift_name("incoming")));
@property BOOL masking __attribute__((swift_name("masking")));
@property int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property (readonly) id<XNetworking_fearlesswalletSendChannel> outgoing __attribute__((swift_name("outgoing")));
@end

__attribute__((swift_name("ClientWebSocketSession")))
@protocol XNetworking_fearlesswalletClientWebSocketSession <XNetworking_fearlesswalletWebSocketSession>
@required
@property (readonly) XNetworking_fearlesswalletHttpClientCall *call __attribute__((swift_name("call")));
@end

__attribute__((swift_name("DefaultWebSocketSession")))
@protocol XNetworking_fearlesswalletDefaultWebSocketSession <XNetworking_fearlesswalletWebSocketSession>
@required
- (void)startNegotiatedExtensions:(NSArray<id<XNetworking_fearlesswalletWebSocketExtension>> *)negotiatedExtensions __attribute__((swift_name("start(negotiatedExtensions:)")));
@property (readonly) id<XNetworking_fearlesswalletDeferred> closeReason __attribute__((swift_name("closeReason")));
@property int64_t pingIntervalMillis __attribute__((swift_name("pingIntervalMillis")));
@property int64_t timeoutMillis __attribute__((swift_name("timeoutMillis")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultClientWebSocketSession")))
@interface XNetworking_fearlesswalletDefaultClientWebSocketSession : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletClientWebSocketSession, XNetworking_fearlesswalletDefaultWebSocketSession>
- (instancetype)initWithCall:(XNetworking_fearlesswalletHttpClientCall *)call delegate:(id<XNetworking_fearlesswalletDefaultWebSocketSession>)delegate __attribute__((swift_name("init(call:delegate:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)flushWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("flush(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendFrame:(XNetworking_fearlesswalletFrame *)frame completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("send(frame:completionHandler:)")));
- (void)startNegotiatedExtensions:(NSArray<id<XNetworking_fearlesswalletWebSocketExtension>> *)negotiatedExtensions __attribute__((swift_name("start(negotiatedExtensions:)")));
- (void)terminate __attribute__((swift_name("terminate()"))) __attribute__((deprecated("Use cancel() instead.")));
@property (readonly) XNetworking_fearlesswalletHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<XNetworking_fearlesswalletDeferred> closeReason __attribute__((swift_name("closeReason")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) NSArray<id<XNetworking_fearlesswalletWebSocketExtension>> *extensions __attribute__((swift_name("extensions")));
@property (readonly) id<XNetworking_fearlesswalletReceiveChannel> incoming __attribute__((swift_name("incoming")));
@property BOOL masking __attribute__((swift_name("masking")));
@property int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property (readonly) id<XNetworking_fearlesswalletSendChannel> outgoing __attribute__((swift_name("outgoing")));
@property int64_t pingIntervalMillis __attribute__((swift_name("pingIntervalMillis")));
@property int64_t timeoutMillis __attribute__((swift_name("timeoutMillis")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketCapability")))
@interface XNetworking_fearlesswalletWebSocketCapability : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientEngineCapability>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)webSocketCapability __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletWebSocketCapability *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketException")))
@interface XNetworking_fearlesswalletWebSocketException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionsCapability")))
@interface XNetworking_fearlesswalletWebSocketExtensionsCapability : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientEngineCapability>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)webSocketExtensionsCapability __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletWebSocketExtensionsCapability *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSockets")))
@interface XNetworking_fearlesswalletWebSockets : XNetworking_fearlesswalletBase
- (instancetype)initWithPingInterval:(int64_t)pingInterval maxFrameSize:(int64_t)maxFrameSize __attribute__((swift_name("init(pingInterval:maxFrameSize:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletWebSocketsPlugin *companion __attribute__((swift_name("companion")));
@property (readonly) id<XNetworking_fearlesswalletWebsocketContentConverter> _Nullable contentConverter __attribute__((swift_name("contentConverter")));
@property (readonly) int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property (readonly) int64_t pingInterval __attribute__((swift_name("pingInterval")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSockets.Config")))
@interface XNetworking_fearlesswalletWebSocketsConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)extensionsBlock:(void (^)(XNetworking_fearlesswalletWebSocketExtensionsConfig *))block __attribute__((swift_name("extensions(block:)")));
@property id<XNetworking_fearlesswalletWebsocketContentConverter> _Nullable contentConverter __attribute__((swift_name("contentConverter")));
@property int64_t maxFrameSize __attribute__((swift_name("maxFrameSize")));
@property int64_t pingInterval __attribute__((swift_name("pingInterval")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSockets.Plugin")))
@interface XNetworking_fearlesswalletWebSocketsPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletWebSocketsPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletWebSockets *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletWebSockets *)prepareBlock:(void (^)(XNetworking_fearlesswalletWebSocketsConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletWebSockets *> *key __attribute__((swift_name("key")));
@end

__attribute__((swift_name("CookiesStorage")))
@protocol XNetworking_fearlesswalletCookiesStorage <XNetworking_fearlesswalletCloseable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCookieRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl cookie:(XNetworking_fearlesswalletCookie *)cookie completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(requestUrl:cookie:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl completionHandler:(void (^)(NSArray<XNetworking_fearlesswalletCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AcceptAllCookiesStorage")))
@interface XNetworking_fearlesswalletAcceptAllCookiesStorage : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCookiesStorage>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCookieRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl cookie:(XNetworking_fearlesswalletCookie *)cookie completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(requestUrl:cookie:completionHandler:)")));
- (void)close __attribute__((swift_name("close()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl completionHandler:(void (^)(NSArray<XNetworking_fearlesswalletCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConstantCookiesStorage")))
@interface XNetworking_fearlesswalletConstantCookiesStorage : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCookiesStorage>
- (instancetype)initWithCookies:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletCookie *> *)cookies __attribute__((swift_name("init(cookies:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCookieRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl cookie:(XNetworking_fearlesswalletCookie *)cookie completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(requestUrl:cookie:completionHandler:)")));
- (void)close __attribute__((swift_name("close()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl completionHandler:(void (^)(NSArray<XNetworking_fearlesswalletCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookies")))
@interface XNetworking_fearlesswalletHttpCookies : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCloseable>
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpCookiesCompanion *companion __attribute__((swift_name("companion")));
- (void)close __attribute__((swift_name("close()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRequestUrl:(XNetworking_fearlesswalletUrl *)requestUrl completionHandler:(void (^)(NSArray<XNetworking_fearlesswalletCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(requestUrl:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookies.Companion")))
@interface XNetworking_fearlesswalletHttpCookiesCompanion : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpCookiesCompanion *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletHttpCookies *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletHttpCookies *)prepareBlock:(void (^)(XNetworking_fearlesswalletHttpCookiesConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletHttpCookies *> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookies.Config")))
@interface XNetworking_fearlesswalletHttpCookiesConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)defaultBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("default(block:)")));
@property id<XNetworking_fearlesswalletCookiesStorage> storage __attribute__((swift_name("storage")));
@end

__attribute__((swift_name("ClientHook")))
@protocol XNetworking_fearlesswalletClientHook
@required
- (void)installClient:(XNetworking_fearlesswalletHttpClient *)client handler:(id _Nullable)handler __attribute__((swift_name("install(client:handler:)")));
@end

__attribute__((swift_name("ClientPlugin")))
@protocol XNetworking_fearlesswalletClientPlugin <XNetworking_fearlesswalletHttpClientPlugin>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClientPluginBuilder")))
@interface XNetworking_fearlesswalletClientPluginBuilder<PluginConfig> : XNetworking_fearlesswalletBase
- (void)onHook:(id<XNetworking_fearlesswalletClientHook>)hook handler:(id _Nullable)handler __attribute__((swift_name("on(hook:handler:)")));
- (void)onCloseBlock:(void (^)(void))block __attribute__((swift_name("onClose(block:)")));
- (void)onRequestBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)block __attribute__((swift_name("onRequest(block:)")));
- (void)onResponseBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)block __attribute__((swift_name("onResponse(block:)")));
- (void)transformRequestBodyBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction4>)block __attribute__((swift_name("transformRequestBody(block:)")));
- (void)transformResponseBodyBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction4>)block __attribute__((swift_name("transformResponseBody(block:)")));
@property (readonly) XNetworking_fearlesswalletHttpClient *client __attribute__((swift_name("client")));
@property (readonly) PluginConfig pluginConfig __attribute__((swift_name("pluginConfig")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClientPluginInstance")))
@interface XNetworking_fearlesswalletClientPluginInstance<PluginConfig> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCloseable>
- (void)close __attribute__((swift_name("close()")));
- (void)installScope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(scope:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MonitoringEvent")))
@interface XNetworking_fearlesswalletMonitoringEvent<Param, Event> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletClientHook>
- (instancetype)initWithEvent:(Event)event __attribute__((swift_name("init(event:)"))) __attribute__((objc_designated_initializer));
- (void)installClient:(XNetworking_fearlesswalletHttpClient *)client handler:(XNetworking_fearlesswalletKotlinUnit *(^)(Param))handler __attribute__((swift_name("install(client:handler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OnRequestContext")))
@interface XNetworking_fearlesswalletOnRequestContext : XNetworking_fearlesswalletBase
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OnResponseContext")))
@interface XNetworking_fearlesswalletOnResponseContext : XNetworking_fearlesswalletBase
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Send")))
@interface XNetworking_fearlesswalletSend : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletClientHook>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)send __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSend *shared __attribute__((swift_name("shared")));
- (void)installClient:(XNetworking_fearlesswalletHttpClient *)client handler:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)handler __attribute__((swift_name("install(client:handler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Send.Sender")))
@interface XNetworking_fearlesswalletSendSender : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)proceedRequestBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)requestBuilder completionHandler:(void (^)(XNetworking_fearlesswalletHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proceed(requestBuilder:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendingRequest")))
@interface XNetworking_fearlesswalletSendingRequest : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletClientHook>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)sendingRequest __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSendingRequest *shared __attribute__((swift_name("shared")));
- (void)installClient:(XNetworking_fearlesswalletHttpClient *)client handler:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)handler __attribute__((swift_name("install(client:handler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetupRequest")))
@interface XNetworking_fearlesswalletSetupRequest : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletClientHook>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)setupRequest __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSetupRequest *shared __attribute__((swift_name("shared")));
- (void)installClient:(XNetworking_fearlesswalletHttpClient *)client handler:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)handler __attribute__((swift_name("install(client:handler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TransformRequestBodyContext")))
@interface XNetworking_fearlesswalletTransformRequestBodyContext : XNetworking_fearlesswalletBase
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TransformResponseBodyContext")))
@interface XNetworking_fearlesswalletTransformResponseBodyContext : XNetworking_fearlesswalletBase
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseObserver")))
@interface XNetworking_fearlesswalletResponseObserver : XNetworking_fearlesswalletBase
- (instancetype)initWithResponseHandler:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)responseHandler filter:(XNetworking_fearlesswalletBoolean *(^ _Nullable)(XNetworking_fearlesswalletHttpClientCall *))filter __attribute__((swift_name("init(responseHandler:filter:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletResponseObserverPlugin *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseObserver.Config")))
@interface XNetworking_fearlesswalletResponseObserverConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)filterBlock:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletHttpClientCall *))block __attribute__((swift_name("filter(block:)")));
- (void)onResponseBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("onResponse(block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResponseObserver.Plugin")))
@interface XNetworking_fearlesswalletResponseObserverPlugin : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHttpClientPlugin>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)plugin __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletResponseObserverPlugin *shared __attribute__((swift_name("shared")));
- (void)installPlugin:(XNetworking_fearlesswalletResponseObserver *)plugin scope:(XNetworking_fearlesswalletHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (XNetworking_fearlesswalletResponseObserver *)prepareBlock:(void (^)(XNetworking_fearlesswalletResponseObserverConfig *))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletResponseObserver *> *key __attribute__((swift_name("key")));
@end

__attribute__((swift_name("EventDefinition")))
@interface XNetworking_fearlesswalletEventDefinition<T> : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Events")))
@interface XNetworking_fearlesswalletEvents : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)raiseDefinition:(XNetworking_fearlesswalletEventDefinition<id> *)definition value:(id _Nullable)value __attribute__((swift_name("raise(definition:value:)")));
- (id<XNetworking_fearlesswalletDisposableHandle>)subscribeDefinition:(XNetworking_fearlesswalletEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("subscribe(definition:handler:)")));
- (void)unsubscribeDefinition:(XNetworking_fearlesswalletEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("unsubscribe(definition:handler:)")));
@end

__attribute__((swift_name("ContentConverter")))
@protocol XNetworking_fearlesswalletContentConverter
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deserializeCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo content:(id<XNetworking_fearlesswalletByteReadChannel>)content completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("deserialize(charset:typeInfo:content:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeContentType:(XNetworking_fearlesswalletContentType *)contentType charset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id)value completionHandler:(void (^)(XNetworking_fearlesswalletOutgoingContent * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("serialize(contentType:charset:typeInfo:value:completionHandler:)"))) __attribute__((deprecated("Please override and use serializeNullable instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeNullableContentType:(XNetworking_fearlesswalletContentType *)contentType charset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id _Nullable)value completionHandler:(void (^)(XNetworking_fearlesswalletOutgoingContent * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("serializeNullable(contentType:charset:typeInfo:value:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinxSerializationConverter")))
@interface XNetworking_fearlesswalletKotlinxSerializationConverter : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletContentConverter>
- (instancetype)initWithFormat:(id<XNetworking_fearlesswalletSerialFormat>)format __attribute__((swift_name("init(format:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deserializeCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo content:(id<XNetworking_fearlesswalletByteReadChannel>)content completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("deserialize(charset:typeInfo:content:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeContentType:(XNetworking_fearlesswalletContentType *)contentType charset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id)value completionHandler:(void (^)(XNetworking_fearlesswalletOutgoingContent * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("serialize(contentType:charset:typeInfo:value:completionHandler:)"))) __attribute__((deprecated("Please override and use serializeNullable instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeNullableContentType:(XNetworking_fearlesswalletContentType *)contentType charset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id _Nullable)value completionHandler:(void (^)(XNetworking_fearlesswalletOutgoingContent * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("serializeNullable(contentType:charset:typeInfo:value:completionHandler:)")));
@end

__attribute__((swift_name("KotlinxSerializationExtension")))
@protocol XNetworking_fearlesswalletKotlinxSerializationExtension
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deserializeCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo content:(id<XNetworking_fearlesswalletByteReadChannel>)content completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("deserialize(charset:typeInfo:content:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeContentType:(XNetworking_fearlesswalletContentType *)contentType charset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id _Nullable)value completionHandler_:(void (^)(XNetworking_fearlesswalletOutgoingContent * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("serialize(contentType:charset:typeInfo:value:completionHandler_:)")));
@end

__attribute__((swift_name("WebsocketContentConverter")))
@protocol XNetworking_fearlesswalletWebsocketContentConverter
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deserializeCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo content:(XNetworking_fearlesswalletFrame *)content completionHandler_:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("deserialize(charset:typeInfo:content:completionHandler_:)")));
- (BOOL)isApplicableFrame:(XNetworking_fearlesswalletFrame *)frame __attribute__((swift_name("isApplicable(frame:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id)value completionHandler:(void (^)(XNetworking_fearlesswalletFrame * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("serialize(charset:typeInfo:value:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeNullableCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id _Nullable)value completionHandler:(void (^)(XNetworking_fearlesswalletFrame * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("serializeNullable(charset:typeInfo:value:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinxWebsocketSerializationConverter")))
@interface XNetworking_fearlesswalletKotlinxWebsocketSerializationConverter : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletWebsocketContentConverter>
- (instancetype)initWithFormat:(id<XNetworking_fearlesswalletSerialFormat>)format __attribute__((swift_name("init(format:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deserializeCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo content:(XNetworking_fearlesswalletFrame *)content completionHandler_:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("deserialize(charset:typeInfo:content:completionHandler_:)")));
- (BOOL)isApplicableFrame:(XNetworking_fearlesswalletFrame *)frame __attribute__((swift_name("isApplicable(frame:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)serializeNullableCharset:(XNetworking_fearlesswalletCharset *)charset typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo value:(id _Nullable)value completionHandler:(void (^)(XNetworking_fearlesswalletFrame * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("serializeNullable(charset:typeInfo:value:completionHandler:)")));
@end

__attribute__((swift_name("ContentConvertException")))
@interface XNetworking_fearlesswalletContentConvertException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonConvertException")))
@interface XNetworking_fearlesswalletJsonConvertException : XNetworking_fearlesswalletContentConvertException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("WebsocketContentConvertException")))
@interface XNetworking_fearlesswalletWebsocketContentConvertException : XNetworking_fearlesswalletContentConvertException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebsocketConverterNotFoundException")))
@interface XNetworking_fearlesswalletWebsocketConverterNotFoundException : XNetworking_fearlesswalletWebsocketContentConvertException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebsocketDeserializeException")))
@interface XNetworking_fearlesswalletWebsocketDeserializeException : XNetworking_fearlesswalletWebsocketContentConvertException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause frame:(XNetworking_fearlesswalletFrame *)frame __attribute__((swift_name("init(message:cause:frame:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) XNetworking_fearlesswalletFrame *frame __attribute__((swift_name("frame")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseReason")))
@interface XNetworking_fearlesswalletCloseReason : XNetworking_fearlesswalletBase
- (instancetype)initWithCode:(XNetworking_fearlesswalletCloseReasonCodes *)code message:(NSString *)message __attribute__((swift_name("init(code:message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCode:(int16_t)code message_:(NSString *)message __attribute__((swift_name("init(code:message_:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletCloseReason *)doCopyCode:(int16_t)code message:(NSString *)message __attribute__((swift_name("doCopy(code:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int16_t code __attribute__((swift_name("code")));
@property (readonly) XNetworking_fearlesswalletCloseReasonCodes * _Nullable knownReason __attribute__((swift_name("knownReason")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseReason.Codes")))
@interface XNetworking_fearlesswalletCloseReasonCodes : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletCloseReasonCodes *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletCloseReasonCodesCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *normal __attribute__((swift_name("normal")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *goingAway __attribute__((swift_name("goingAway")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *protocolError __attribute__((swift_name("protocolError")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *cannotAccept __attribute__((swift_name("cannotAccept")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *closedAbnormally __attribute__((swift_name("closedAbnormally")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *notConsistent __attribute__((swift_name("notConsistent")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *violatedPolicy __attribute__((swift_name("violatedPolicy")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *tooBig __attribute__((swift_name("tooBig")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *noExtension __attribute__((swift_name("noExtension")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *internalError __attribute__((swift_name("internalError")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *serviceRestart __attribute__((swift_name("serviceRestart")));
@property (class, readonly) XNetworking_fearlesswalletCloseReasonCodes *tryAgainLater __attribute__((swift_name("tryAgainLater")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletCloseReasonCodes *> *)values __attribute__((swift_name("values()")));
@property (readonly) int16_t code __attribute__((swift_name("code")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseReason.CodesCompanion")))
@interface XNetworking_fearlesswalletCloseReasonCodesCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCloseReasonCodesCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletCloseReasonCodes * _Nullable)byCodeCode:(int16_t)code __attribute__((swift_name("byCode(code:)")));
@property (readonly) XNetworking_fearlesswalletCloseReasonCodes *UNEXPECTED_CONDITION __attribute__((swift_name("UNEXPECTED_CONDITION"))) __attribute__((deprecated("Use INTERNAL_ERROR instead.")));
@end

__attribute__((swift_name("Frame")))
@interface XNetworking_fearlesswalletFrame : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFrameCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFrame *)doCopy __attribute__((swift_name("doCopy()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletKotlinByteArray *data __attribute__((swift_name("data")));
@property (readonly) id<XNetworking_fearlesswalletDisposableHandle> disposableHandle __attribute__((swift_name("disposableHandle")));
@property (readonly) BOOL fin __attribute__((swift_name("fin")));
@property (readonly) XNetworking_fearlesswalletFrameType *frameType __attribute__((swift_name("frameType")));
@property (readonly) BOOL rsv1 __attribute__((swift_name("rsv1")));
@property (readonly) BOOL rsv2 __attribute__((swift_name("rsv2")));
@property (readonly) BOOL rsv3 __attribute__((swift_name("rsv3")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Binary")))
@interface XNetworking_fearlesswalletFrameBinary : XNetworking_fearlesswalletFrame
- (instancetype)initWithFin:(BOOL)fin data:(XNetworking_fearlesswalletKotlinByteArray *)data __attribute__((swift_name("init(fin:data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin packet:(XNetworking_fearlesswalletByteReadPacket *)packet __attribute__((swift_name("init(fin:packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin data:(XNetworking_fearlesswalletKotlinByteArray *)data rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:data:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Close")))
@interface XNetworking_fearlesswalletFrameClose : XNetworking_fearlesswalletFrame
- (instancetype)initWithReason:(XNetworking_fearlesswalletCloseReason *)reason __attribute__((swift_name("init(reason:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPacket:(XNetworking_fearlesswalletByteReadPacket *)packet __attribute__((swift_name("init(packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithData:(XNetworking_fearlesswalletKotlinByteArray *)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Companion")))
@interface XNetworking_fearlesswalletFrameCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFrameCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletFrame *)byTypeFin:(BOOL)fin frameType:(XNetworking_fearlesswalletFrameType *)frameType data:(XNetworking_fearlesswalletKotlinByteArray *)data rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("byType(fin:frameType:data:rsv1:rsv2:rsv3:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Ping")))
@interface XNetworking_fearlesswalletFramePing : XNetworking_fearlesswalletFrame
- (instancetype)initWithPacket:(XNetworking_fearlesswalletByteReadPacket *)packet __attribute__((swift_name("init(packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(XNetworking_fearlesswalletKotlinByteArray *)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Pong")))
@interface XNetworking_fearlesswalletFramePong : XNetworking_fearlesswalletFrame
- (instancetype)initWithPacket:(XNetworking_fearlesswalletByteReadPacket *)packet __attribute__((swift_name("init(packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithData:(XNetworking_fearlesswalletKotlinByteArray *)data disposableHandle:(id<XNetworking_fearlesswalletDisposableHandle>)disposableHandle __attribute__((swift_name("init(data:disposableHandle:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Frame.Text")))
@interface XNetworking_fearlesswalletFrameText : XNetworking_fearlesswalletFrame
- (instancetype)initWithFin:(BOOL)fin data:(XNetworking_fearlesswalletKotlinByteArray *)data __attribute__((swift_name("init(fin:data:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithText:(NSString *)text __attribute__((swift_name("init(text:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin packet:(XNetworking_fearlesswalletByteReadPacket *)packet __attribute__((swift_name("init(fin:packet:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFin:(BOOL)fin data:(XNetworking_fearlesswalletKotlinByteArray *)data rsv1:(BOOL)rsv1 rsv2:(BOOL)rsv2 rsv3:(BOOL)rsv3 __attribute__((swift_name("init(fin:data:rsv1:rsv2:rsv3:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
__attribute__((swift_name("CopyableThrowable")))
@protocol XNetworking_fearlesswalletCopyableThrowable
@required
- (XNetworking_fearlesswalletKotlinThrowable * _Nullable)createCopy __attribute__((swift_name("createCopy()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FrameTooBigException")))
@interface XNetworking_fearlesswalletFrameTooBigException : XNetworking_fearlesswalletKotlinException <XNetworking_fearlesswalletCopyableThrowable>
- (instancetype)initWithFrameSize:(int64_t)frameSize __attribute__((swift_name("init(frameSize:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (XNetworking_fearlesswalletFrameTooBigException *)createCopy __attribute__((swift_name("createCopy()")));
@property (readonly) int64_t frameSize __attribute__((swift_name("frameSize")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FrameType")))
@interface XNetworking_fearlesswalletFrameType : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletFrameType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFrameTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) XNetworking_fearlesswalletFrameType *text __attribute__((swift_name("text")));
@property (class, readonly) XNetworking_fearlesswalletFrameType *binary __attribute__((swift_name("binary")));
@property (class, readonly) XNetworking_fearlesswalletFrameType *close __attribute__((swift_name("close")));
@property (class, readonly) XNetworking_fearlesswalletFrameType *ping __attribute__((swift_name("ping")));
@property (class, readonly) XNetworking_fearlesswalletFrameType *pong __attribute__((swift_name("pong")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletFrameType *> *)values __attribute__((swift_name("values()")));
@property (readonly) BOOL controlFrame __attribute__((swift_name("controlFrame")));
@property (readonly) int32_t opcode __attribute__((swift_name("opcode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FrameType.Companion")))
@interface XNetworking_fearlesswalletFrameTypeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFrameTypeCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletFrameType * _Nullable)getOpcode:(int32_t)opcode __attribute__((swift_name("get(opcode:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProtocolViolationException")))
@interface XNetworking_fearlesswalletProtocolViolationException : XNetworking_fearlesswalletKotlinException <XNetworking_fearlesswalletCopyableThrowable>
- (instancetype)initWithViolation:(NSString *)violation __attribute__((swift_name("init(violation:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (XNetworking_fearlesswalletProtocolViolationException *)createCopy __attribute__((swift_name("createCopy()")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) NSString *violation __attribute__((swift_name("violation")));
@end

__attribute__((swift_name("WebSocketExtension")))
@protocol XNetworking_fearlesswalletWebSocketExtension
@required
- (BOOL)clientNegotiationNegotiatedProtocols:(NSArray<XNetworking_fearlesswalletWebSocketExtensionHeader *> *)negotiatedProtocols __attribute__((swift_name("clientNegotiation(negotiatedProtocols:)")));
- (XNetworking_fearlesswalletFrame *)processIncomingFrameFrame:(XNetworking_fearlesswalletFrame *)frame __attribute__((swift_name("processIncomingFrame(frame:)")));
- (XNetworking_fearlesswalletFrame *)processOutgoingFrameFrame:(XNetworking_fearlesswalletFrame *)frame __attribute__((swift_name("processOutgoingFrame(frame:)")));
- (NSArray<XNetworking_fearlesswalletWebSocketExtensionHeader *> *)serverNegotiationRequestedProtocols:(NSArray<XNetworking_fearlesswalletWebSocketExtensionHeader *> *)requestedProtocols __attribute__((swift_name("serverNegotiation(requestedProtocols:)")));
@property (readonly) id<XNetworking_fearlesswalletWebSocketExtensionFactory> factory __attribute__((swift_name("factory")));
@property (readonly) NSArray<XNetworking_fearlesswalletWebSocketExtensionHeader *> *protocols __attribute__((swift_name("protocols")));
@end

__attribute__((swift_name("WebSocketExtensionFactory")))
@protocol XNetworking_fearlesswalletWebSocketExtensionFactory
@required
- (id<XNetworking_fearlesswalletWebSocketExtension>)installConfig:(void (^)(id))config __attribute__((swift_name("install(config:)")));
@property (readonly) XNetworking_fearlesswalletAttributeKey<id<XNetworking_fearlesswalletWebSocketExtension>> *key __attribute__((swift_name("key")));
@property (readonly) BOOL rsv1 __attribute__((swift_name("rsv1")));
@property (readonly) BOOL rsv2 __attribute__((swift_name("rsv2")));
@property (readonly) BOOL rsv3 __attribute__((swift_name("rsv3")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionHeader")))
@interface XNetworking_fearlesswalletWebSocketExtensionHeader : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString *)name parameters:(NSArray<NSString *> *)parameters __attribute__((swift_name("init(name:parameters:)"))) __attribute__((objc_designated_initializer));
- (id<XNetworking_fearlesswalletKotlinSequence>)parseParameters __attribute__((swift_name("parseParameters()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<NSString *> *parameters __attribute__((swift_name("parameters")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionsConfig")))
@interface XNetworking_fearlesswalletWebSocketExtensionsConfig : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSArray<id<XNetworking_fearlesswalletWebSocketExtension>> *)build __attribute__((swift_name("build()")));
- (void)installExtension:(id<XNetworking_fearlesswalletWebSocketExtensionFactory>)extension config:(void (^)(id))config __attribute__((swift_name("install(extension:config:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BadContentTypeFormatException")))
@interface XNetworking_fearlesswalletBadContentTypeFormatException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("CacheControl_")))
@interface XNetworking_fearlesswalletCacheControl_ : XNetworking_fearlesswalletBase
- (instancetype)initWithVisibility:(XNetworking_fearlesswalletCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer));
@property (readonly) XNetworking_fearlesswalletCacheControl_Visibility * _Nullable visibility __attribute__((swift_name("visibility")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.MaxAge")))
@interface XNetworking_fearlesswalletCacheControl_MaxAge : XNetworking_fearlesswalletCacheControl_
- (instancetype)initWithMaxAgeSeconds:(int32_t)maxAgeSeconds proxyMaxAgeSeconds:(XNetworking_fearlesswalletInt * _Nullable)proxyMaxAgeSeconds mustRevalidate:(BOOL)mustRevalidate proxyRevalidate:(BOOL)proxyRevalidate visibility:(XNetworking_fearlesswalletCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(maxAgeSeconds:proxyMaxAgeSeconds:mustRevalidate:proxyRevalidate:visibility:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithVisibility:(XNetworking_fearlesswalletCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t maxAgeSeconds __attribute__((swift_name("maxAgeSeconds")));
@property (readonly) BOOL mustRevalidate __attribute__((swift_name("mustRevalidate")));
@property (readonly) XNetworking_fearlesswalletInt * _Nullable proxyMaxAgeSeconds __attribute__((swift_name("proxyMaxAgeSeconds")));
@property (readonly) BOOL proxyRevalidate __attribute__((swift_name("proxyRevalidate")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.NoCache")))
@interface XNetworking_fearlesswalletCacheControl_NoCache : XNetworking_fearlesswalletCacheControl_
- (instancetype)initWithVisibility:(XNetworking_fearlesswalletCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.NoStore")))
@interface XNetworking_fearlesswalletCacheControl_NoStore : XNetworking_fearlesswalletCacheControl_
- (instancetype)initWithVisibility:(XNetworking_fearlesswalletCacheControl_Visibility * _Nullable)visibility __attribute__((swift_name("init(visibility:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CacheControl_.Visibility")))
@interface XNetworking_fearlesswalletCacheControl_Visibility : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletCacheControl_Visibility *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletCacheControl_Visibility *public_ __attribute__((swift_name("public_")));
@property (class, readonly) XNetworking_fearlesswalletCacheControl_Visibility *private_ __attribute__((swift_name("private_")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletCacheControl_Visibility *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("HeaderValueWithParameters")))
@interface XNetworking_fearlesswalletHeaderValueWithParameters : XNetworking_fearlesswalletBase
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHeaderValueWithParametersCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)parameterName:(NSString *)name __attribute__((swift_name("parameter(name:)")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) NSArray<XNetworking_fearlesswalletHeaderValueParam *> *parameters __attribute__((swift_name("parameters")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentDisposition")))
@interface XNetworking_fearlesswalletContentDisposition : XNetworking_fearlesswalletHeaderValueWithParameters
- (instancetype)initWithDisposition:(NSString *)disposition parameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)parameters __attribute__((swift_name("init(disposition:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletContentDispositionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (XNetworking_fearlesswalletContentDisposition *)withParameterKey:(NSString *)key value:(NSString *)value encodeValue:(BOOL)encodeValue __attribute__((swift_name("withParameter(key:value:encodeValue:)")));
- (XNetworking_fearlesswalletContentDisposition *)withParametersNewParameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)newParameters __attribute__((swift_name("withParameters(newParameters:)")));
@property (readonly) NSString *disposition __attribute__((swift_name("disposition")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentDisposition.Companion")))
@interface XNetworking_fearlesswalletContentDispositionCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentDispositionCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletContentDisposition *)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
@property (readonly) XNetworking_fearlesswalletContentDisposition *Attachment __attribute__((swift_name("Attachment")));
@property (readonly) XNetworking_fearlesswalletContentDisposition *File __attribute__((swift_name("File")));
@property (readonly) XNetworking_fearlesswalletContentDisposition *Inline __attribute__((swift_name("Inline")));
@property (readonly) XNetworking_fearlesswalletContentDisposition *Mixed __attribute__((swift_name("Mixed")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentDisposition.Parameters")))
@interface XNetworking_fearlesswalletContentDispositionParameters : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)parameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentDispositionParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *CreationDate __attribute__((swift_name("CreationDate")));
@property (readonly) NSString *FileName __attribute__((swift_name("FileName")));
@property (readonly) NSString *FileNameAsterisk __attribute__((swift_name("FileNameAsterisk")));
@property (readonly) NSString *Handling __attribute__((swift_name("Handling")));
@property (readonly) NSString *ModificationDate __attribute__((swift_name("ModificationDate")));
@property (readonly) NSString *Name __attribute__((swift_name("Name")));
@property (readonly) NSString *ReadDate __attribute__((swift_name("ReadDate")));
@property (readonly) NSString *Size __attribute__((swift_name("Size")));
@end

__attribute__((swift_name("ContentRange")))
@interface XNetworking_fearlesswalletContentRange : XNetworking_fearlesswalletBase
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRange.Bounded")))
@interface XNetworking_fearlesswalletContentRangeBounded : XNetworking_fearlesswalletContentRange
- (instancetype)initWithFrom:(int64_t)from to:(int64_t)to __attribute__((swift_name("init(from:to:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletContentRangeBounded *)doCopyFrom:(int64_t)from to:(int64_t)to __attribute__((swift_name("doCopy(from:to:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t from __attribute__((swift_name("from")));
@property (readonly) int64_t to __attribute__((swift_name("to")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRange.Suffix")))
@interface XNetworking_fearlesswalletContentRangeSuffix : XNetworking_fearlesswalletContentRange
- (instancetype)initWithLastCount:(int64_t)lastCount __attribute__((swift_name("init(lastCount:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletContentRangeSuffix *)doCopyLastCount:(int64_t)lastCount __attribute__((swift_name("doCopy(lastCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t lastCount __attribute__((swift_name("lastCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRange.TailFrom")))
@interface XNetworking_fearlesswalletContentRangeTailFrom : XNetworking_fearlesswalletContentRange
- (instancetype)initWithFrom:(int64_t)from __attribute__((swift_name("init(from:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletContentRangeTailFrom *)doCopyFrom:(int64_t)from __attribute__((swift_name("doCopy(from:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t from __attribute__((swift_name("from")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType")))
@interface XNetworking_fearlesswalletContentType : XNetworking_fearlesswalletHeaderValueWithParameters
- (instancetype)initWithContentType:(NSString *)contentType contentSubtype:(NSString *)contentSubtype parameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)parameters __attribute__((swift_name("init(contentType:contentSubtype:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletContentTypeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)matchPattern:(XNetworking_fearlesswalletContentType *)pattern __attribute__((swift_name("match(pattern:)")));
- (BOOL)matchPattern_:(NSString *)pattern __attribute__((swift_name("match(pattern_:)")));
- (XNetworking_fearlesswalletContentType *)withParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withParameter(name:value:)")));
- (XNetworking_fearlesswalletContentType *)withoutParameters __attribute__((swift_name("withoutParameters()")));
@property (readonly) NSString *contentSubtype __attribute__((swift_name("contentSubtype")));
@property (readonly) NSString *contentType __attribute__((swift_name("contentType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Application")))
@interface XNetworking_fearlesswalletContentTypeApplication : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)application __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeApplication *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *Atom __attribute__((swift_name("Atom")));
@property (readonly) XNetworking_fearlesswalletContentType *Cbor __attribute__((swift_name("Cbor")));
@property (readonly) XNetworking_fearlesswalletContentType *Docx __attribute__((swift_name("Docx")));
@property (readonly) XNetworking_fearlesswalletContentType *FormUrlEncoded __attribute__((swift_name("FormUrlEncoded")));
@property (readonly) XNetworking_fearlesswalletContentType *GZip __attribute__((swift_name("GZip")));
@property (readonly) XNetworking_fearlesswalletContentType *HalJson __attribute__((swift_name("HalJson")));
@property (readonly) XNetworking_fearlesswalletContentType *JavaScript __attribute__((swift_name("JavaScript")));
@property (readonly) XNetworking_fearlesswalletContentType *Json __attribute__((swift_name("Json")));
@property (readonly) XNetworking_fearlesswalletContentType *OctetStream __attribute__((swift_name("OctetStream")));
@property (readonly) XNetworking_fearlesswalletContentType *Pdf __attribute__((swift_name("Pdf")));
@property (readonly) XNetworking_fearlesswalletContentType *Pptx __attribute__((swift_name("Pptx")));
@property (readonly) XNetworking_fearlesswalletContentType *ProblemJson __attribute__((swift_name("ProblemJson")));
@property (readonly) XNetworking_fearlesswalletContentType *ProblemXml __attribute__((swift_name("ProblemXml")));
@property (readonly) XNetworking_fearlesswalletContentType *ProtoBuf __attribute__((swift_name("ProtoBuf")));
@property (readonly) XNetworking_fearlesswalletContentType *Rss __attribute__((swift_name("Rss")));
@property (readonly) XNetworking_fearlesswalletContentType *Wasm __attribute__((swift_name("Wasm")));
@property (readonly) XNetworking_fearlesswalletContentType *Xlsx __attribute__((swift_name("Xlsx")));
@property (readonly) XNetworking_fearlesswalletContentType *Xml __attribute__((swift_name("Xml")));
@property (readonly) XNetworking_fearlesswalletContentType *Xml_Dtd __attribute__((swift_name("Xml_Dtd")));
@property (readonly) XNetworking_fearlesswalletContentType *Zip __attribute__((swift_name("Zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Audio")))
@interface XNetworking_fearlesswalletContentTypeAudio : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)audio __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeAudio *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *MP4 __attribute__((swift_name("MP4")));
@property (readonly) XNetworking_fearlesswalletContentType *MPEG __attribute__((swift_name("MPEG")));
@property (readonly) XNetworking_fearlesswalletContentType *OGG __attribute__((swift_name("OGG")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Companion")))
@interface XNetworking_fearlesswalletContentTypeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletContentType *)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Font")))
@interface XNetworking_fearlesswalletContentTypeFont : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)font __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeFont *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *Collection __attribute__((swift_name("Collection")));
@property (readonly) XNetworking_fearlesswalletContentType *Otf __attribute__((swift_name("Otf")));
@property (readonly) XNetworking_fearlesswalletContentType *Sfnt __attribute__((swift_name("Sfnt")));
@property (readonly) XNetworking_fearlesswalletContentType *Ttf __attribute__((swift_name("Ttf")));
@property (readonly) XNetworking_fearlesswalletContentType *Woff __attribute__((swift_name("Woff")));
@property (readonly) XNetworking_fearlesswalletContentType *Woff2 __attribute__((swift_name("Woff2")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Image")))
@interface XNetworking_fearlesswalletContentTypeImage : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)image __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeImage *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *GIF __attribute__((swift_name("GIF")));
@property (readonly) XNetworking_fearlesswalletContentType *JPEG __attribute__((swift_name("JPEG")));
@property (readonly) XNetworking_fearlesswalletContentType *PNG __attribute__((swift_name("PNG")));
@property (readonly) XNetworking_fearlesswalletContentType *SVG __attribute__((swift_name("SVG")));
@property (readonly) XNetworking_fearlesswalletContentType *XIcon __attribute__((swift_name("XIcon")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Message")))
@interface XNetworking_fearlesswalletContentTypeMessage : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)message __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeMessage *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *Http __attribute__((swift_name("Http")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.MultiPart")))
@interface XNetworking_fearlesswalletContentTypeMultiPart : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)multiPart __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeMultiPart *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Alternative __attribute__((swift_name("Alternative")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *ByteRanges __attribute__((swift_name("ByteRanges")));
@property (readonly) XNetworking_fearlesswalletContentType *Encrypted __attribute__((swift_name("Encrypted")));
@property (readonly) XNetworking_fearlesswalletContentType *FormData __attribute__((swift_name("FormData")));
@property (readonly) XNetworking_fearlesswalletContentType *Mixed __attribute__((swift_name("Mixed")));
@property (readonly) XNetworking_fearlesswalletContentType *Related __attribute__((swift_name("Related")));
@property (readonly) XNetworking_fearlesswalletContentType *Signed __attribute__((swift_name("Signed")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Text")))
@interface XNetworking_fearlesswalletContentTypeText : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)text __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeText *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *CSS __attribute__((swift_name("CSS")));
@property (readonly) XNetworking_fearlesswalletContentType *CSV __attribute__((swift_name("CSV")));
@property (readonly) XNetworking_fearlesswalletContentType *EventStream __attribute__((swift_name("EventStream")));
@property (readonly) XNetworking_fearlesswalletContentType *Html __attribute__((swift_name("Html")));
@property (readonly) XNetworking_fearlesswalletContentType *JavaScript __attribute__((swift_name("JavaScript")));
@property (readonly) XNetworking_fearlesswalletContentType *Plain __attribute__((swift_name("Plain")));
@property (readonly) XNetworking_fearlesswalletContentType *VCard __attribute__((swift_name("VCard")));
@property (readonly) XNetworking_fearlesswalletContentType *Xml __attribute__((swift_name("Xml")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentType.Video")))
@interface XNetworking_fearlesswalletContentTypeVideo : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)video __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletContentTypeVideo *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletContentType *Any __attribute__((swift_name("Any")));
@property (readonly) XNetworking_fearlesswalletContentType *MP4 __attribute__((swift_name("MP4")));
@property (readonly) XNetworking_fearlesswalletContentType *MPEG __attribute__((swift_name("MPEG")));
@property (readonly) XNetworking_fearlesswalletContentType *OGG __attribute__((swift_name("OGG")));
@property (readonly) XNetworking_fearlesswalletContentType *QuickTime __attribute__((swift_name("QuickTime")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cookie")))
@interface XNetworking_fearlesswalletCookie : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value encoding:(XNetworking_fearlesswalletCookieEncoding *)encoding maxAge:(int32_t)maxAge expires:(XNetworking_fearlesswalletGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions __attribute__((swift_name("init(name:value:encoding:maxAge:expires:domain:path:secure:httpOnly:extensions:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletCookie *)doCopyName:(NSString *)name value:(NSString *)value encoding:(XNetworking_fearlesswalletCookieEncoding *)encoding maxAge:(int32_t)maxAge expires:(XNetworking_fearlesswalletGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions __attribute__((swift_name("doCopy(name:value:encoding:maxAge:expires:domain:path:secure:httpOnly:extensions:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable domain __attribute__((swift_name("domain")));
@property (readonly) XNetworking_fearlesswalletCookieEncoding *encoding __attribute__((swift_name("encoding")));
@property (readonly) XNetworking_fearlesswalletGMTDate * _Nullable expires __attribute__((swift_name("expires")));
@property (readonly) NSDictionary<NSString *, id> *extensions __attribute__((swift_name("extensions")));
@property (readonly) BOOL httpOnly __attribute__((swift_name("httpOnly")));
@property (readonly) int32_t maxAge __attribute__((swift_name("maxAge")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable path __attribute__((swift_name("path")));
@property (readonly) BOOL secure __attribute__((swift_name("secure")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CookieEncoding")))
@interface XNetworking_fearlesswalletCookieEncoding : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletCookieEncoding *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletCookieEncoding *raw __attribute__((swift_name("raw")));
@property (class, readonly) XNetworking_fearlesswalletCookieEncoding *dquotes __attribute__((swift_name("dquotes")));
@property (class, readonly) XNetworking_fearlesswalletCookieEncoding *uriEncoding __attribute__((swift_name("uriEncoding")));
@property (class, readonly) XNetworking_fearlesswalletCookieEncoding *base64Encoding __attribute__((swift_name("base64Encoding")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletCookieEncoding *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("StringValues")))
@protocol XNetworking_fearlesswalletStringValues
@required
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<XNetworking_fearlesswalletKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("Headers")))
@protocol XNetworking_fearlesswalletHeaders <XNetworking_fearlesswalletStringValues>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmptyHeaders")))
@interface XNetworking_fearlesswalletEmptyHeaders : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletHeaders>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)emptyHeaders __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletEmptyHeaders *shared __attribute__((swift_name("shared")));
- (NSSet<id<XNetworking_fearlesswalletKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValue")))
@interface XNetworking_fearlesswalletHeaderValue : XNetworking_fearlesswalletBase
- (instancetype)initWithValue:(NSString *)value params:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)params __attribute__((swift_name("init(value:params:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletHeaderValue *)doCopyValue:(NSString *)value params:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)params __attribute__((swift_name("doCopy(value:params:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<XNetworking_fearlesswalletHeaderValueParam *> *params __attribute__((swift_name("params")));
@property (readonly) double quality __attribute__((swift_name("quality")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueParam")))
@interface XNetworking_fearlesswalletHeaderValueParam : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(name:value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("init(name:value:escapeValue:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletHeaderValueParam *)doCopyName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("doCopy(name:value:escapeValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL escapeValue __attribute__((swift_name("escapeValue")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueWithParameters.Companion")))
@interface XNetworking_fearlesswalletHeaderValueWithParametersCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHeaderValueWithParametersCompanion *shared __attribute__((swift_name("shared")));
- (id _Nullable)parseValue:(NSString *)value init:(id _Nullable (^)(NSString *, NSArray<XNetworking_fearlesswalletHeaderValueParam *> *))init __attribute__((swift_name("parse(value:init:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersCompanion")))
@interface XNetworking_fearlesswalletHeadersCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHeadersCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletHeaders>)buildBuilder:(void (^)(XNetworking_fearlesswalletHeadersBuilder *))builder __attribute__((swift_name("build(builder:)")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> Empty __attribute__((swift_name("Empty")));
@end

__attribute__((swift_name("StringValuesBuilder")))
@protocol XNetworking_fearlesswalletStringValuesBuilder
@required
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<XNetworking_fearlesswalletStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<XNetworking_fearlesswalletStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<XNetworking_fearlesswalletStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<XNetworking_fearlesswalletKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("StringValuesBuilderImpl")))
@interface XNetworking_fearlesswalletStringValuesBuilderImpl : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletStringValuesBuilder>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer));
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<XNetworking_fearlesswalletStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<XNetworking_fearlesswalletStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<XNetworking_fearlesswalletStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<XNetworking_fearlesswalletKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletMutableDictionary<NSString *, NSMutableArray<NSString *> *> *values __attribute__((swift_name("values")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersBuilder")))
@interface XNetworking_fearlesswalletHeadersBuilder : XNetworking_fearlesswalletStringValuesBuilderImpl
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (id<XNetworking_fearlesswalletHeaders>)build __attribute__((swift_name("build()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@end

__attribute__((swift_name("StringValuesImpl")))
@interface XNetworking_fearlesswalletStringValuesImpl : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletStringValues>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName values:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(caseInsensitiveName:values:)"))) __attribute__((objc_designated_initializer));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<XNetworking_fearlesswalletKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) NSDictionary<NSString *, NSArray<NSString *> *> *values __attribute__((swift_name("values")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersImpl")))
@interface XNetworking_fearlesswalletHeadersImpl : XNetworking_fearlesswalletStringValuesImpl <XNetworking_fearlesswalletHeaders>
- (instancetype)initWithValues:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(values:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName values:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(caseInsensitiveName:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("StringValuesSingleImpl")))
@interface XNetworking_fearlesswalletStringValuesSingleImpl : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletStringValues>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName name:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(caseInsensitiveName:name:values:)"))) __attribute__((objc_designated_initializer));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<XNetworking_fearlesswalletKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<NSString *> *values __attribute__((swift_name("values")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersSingleImpl")))
@interface XNetworking_fearlesswalletHeadersSingleImpl : XNetworking_fearlesswalletStringValuesSingleImpl <XNetworking_fearlesswalletHeaders>
- (instancetype)initWithName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(name:values:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName name:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(caseInsensitiveName:name:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpHeaders")))
@interface XNetworking_fearlesswalletHttpHeaders : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)httpHeaders __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpHeaders *shared __attribute__((swift_name("shared")));
- (void)checkHeaderNameName:(NSString *)name __attribute__((swift_name("checkHeaderName(name:)")));
- (void)checkHeaderValueValue:(NSString *)value __attribute__((swift_name("checkHeaderValue(value:)")));
- (BOOL)isUnsafeHeader:(NSString *)header __attribute__((swift_name("isUnsafe(header:)")));
@property (readonly) NSString *ALPN __attribute__((swift_name("ALPN")));
@property (readonly) NSString *Accept __attribute__((swift_name("Accept")));
@property (readonly) NSString *AcceptCharset __attribute__((swift_name("AcceptCharset")));
@property (readonly) NSString *AcceptEncoding __attribute__((swift_name("AcceptEncoding")));
@property (readonly) NSString *AcceptLanguage __attribute__((swift_name("AcceptLanguage")));
@property (readonly) NSString *AcceptRanges __attribute__((swift_name("AcceptRanges")));
@property (readonly) NSString *AccessControlAllowCredentials __attribute__((swift_name("AccessControlAllowCredentials")));
@property (readonly) NSString *AccessControlAllowHeaders __attribute__((swift_name("AccessControlAllowHeaders")));
@property (readonly) NSString *AccessControlAllowMethods __attribute__((swift_name("AccessControlAllowMethods")));
@property (readonly) NSString *AccessControlAllowOrigin __attribute__((swift_name("AccessControlAllowOrigin")));
@property (readonly) NSString *AccessControlExposeHeaders __attribute__((swift_name("AccessControlExposeHeaders")));
@property (readonly) NSString *AccessControlMaxAge __attribute__((swift_name("AccessControlMaxAge")));
@property (readonly) NSString *AccessControlRequestHeaders __attribute__((swift_name("AccessControlRequestHeaders")));
@property (readonly) NSString *AccessControlRequestMethod __attribute__((swift_name("AccessControlRequestMethod")));
@property (readonly) NSString *Age __attribute__((swift_name("Age")));
@property (readonly) NSString *Allow __attribute__((swift_name("Allow")));
@property (readonly) NSString *AuthenticationInfo __attribute__((swift_name("AuthenticationInfo")));
@property (readonly) NSString *Authorization __attribute__((swift_name("Authorization")));
@property (readonly) NSString *CacheControl __attribute__((swift_name("CacheControl")));
@property (readonly) NSString *Connection __attribute__((swift_name("Connection")));
@property (readonly) NSString *ContentDisposition __attribute__((swift_name("ContentDisposition")));
@property (readonly) NSString *ContentEncoding __attribute__((swift_name("ContentEncoding")));
@property (readonly) NSString *ContentLanguage __attribute__((swift_name("ContentLanguage")));
@property (readonly) NSString *ContentLength __attribute__((swift_name("ContentLength")));
@property (readonly) NSString *ContentLocation __attribute__((swift_name("ContentLocation")));
@property (readonly) NSString *ContentRange __attribute__((swift_name("ContentRange")));
@property (readonly) NSString *ContentType __attribute__((swift_name("ContentType")));
@property (readonly) NSString *Cookie __attribute__((swift_name("Cookie")));
@property (readonly) NSString *DASL __attribute__((swift_name("DASL")));
@property (readonly) NSString *DAV __attribute__((swift_name("DAV")));
@property (readonly) NSString *Date __attribute__((swift_name("Date")));
@property (readonly) NSString *Depth __attribute__((swift_name("Depth")));
@property (readonly) NSString *Destination __attribute__((swift_name("Destination")));
@property (readonly) NSString *ETag __attribute__((swift_name("ETag")));
@property (readonly) NSString *Expect __attribute__((swift_name("Expect")));
@property (readonly) NSString *Expires __attribute__((swift_name("Expires")));
@property (readonly) NSString *Forwarded __attribute__((swift_name("Forwarded")));
@property (readonly) NSString *From __attribute__((swift_name("From")));
@property (readonly) NSString *HTTP2Settings __attribute__((swift_name("HTTP2Settings")));
@property (readonly) NSString *Host __attribute__((swift_name("Host")));
@property (readonly) NSString *If __attribute__((swift_name("If")));
@property (readonly) NSString *IfMatch __attribute__((swift_name("IfMatch")));
@property (readonly) NSString *IfModifiedSince __attribute__((swift_name("IfModifiedSince")));
@property (readonly) NSString *IfNoneMatch __attribute__((swift_name("IfNoneMatch")));
@property (readonly) NSString *IfRange __attribute__((swift_name("IfRange")));
@property (readonly) NSString *IfScheduleTagMatch __attribute__((swift_name("IfScheduleTagMatch")));
@property (readonly) NSString *IfUnmodifiedSince __attribute__((swift_name("IfUnmodifiedSince")));
@property (readonly) NSString *LastModified __attribute__((swift_name("LastModified")));
@property (readonly) NSString *Link __attribute__((swift_name("Link")));
@property (readonly) NSString *Location __attribute__((swift_name("Location")));
@property (readonly) NSString *LockToken __attribute__((swift_name("LockToken")));
@property (readonly) NSString *MIMEVersion __attribute__((swift_name("MIMEVersion")));
@property (readonly) NSString *MaxForwards __attribute__((swift_name("MaxForwards")));
@property (readonly) NSString *OrderingType __attribute__((swift_name("OrderingType")));
@property (readonly) NSString *Origin __attribute__((swift_name("Origin")));
@property (readonly) NSString *Overwrite __attribute__((swift_name("Overwrite")));
@property (readonly) NSString *Position __attribute__((swift_name("Position")));
@property (readonly) NSString *Pragma __attribute__((swift_name("Pragma")));
@property (readonly) NSString *Prefer __attribute__((swift_name("Prefer")));
@property (readonly) NSString *PreferenceApplied __attribute__((swift_name("PreferenceApplied")));
@property (readonly) NSString *ProxyAuthenticate __attribute__((swift_name("ProxyAuthenticate")));
@property (readonly) NSString *ProxyAuthenticationInfo __attribute__((swift_name("ProxyAuthenticationInfo")));
@property (readonly) NSString *ProxyAuthorization __attribute__((swift_name("ProxyAuthorization")));
@property (readonly) NSString *PublicKeyPins __attribute__((swift_name("PublicKeyPins")));
@property (readonly) NSString *PublicKeyPinsReportOnly __attribute__((swift_name("PublicKeyPinsReportOnly")));
@property (readonly) NSString *Range __attribute__((swift_name("Range")));
@property (readonly) NSString *Referrer __attribute__((swift_name("Referrer")));
@property (readonly) NSString *RetryAfter __attribute__((swift_name("RetryAfter")));
@property (readonly) NSString *SLUG __attribute__((swift_name("SLUG")));
@property (readonly) NSString *ScheduleReply __attribute__((swift_name("ScheduleReply")));
@property (readonly) NSString *ScheduleTag __attribute__((swift_name("ScheduleTag")));
@property (readonly) NSString *SecWebSocketAccept __attribute__((swift_name("SecWebSocketAccept")));
@property (readonly) NSString *SecWebSocketExtensions __attribute__((swift_name("SecWebSocketExtensions")));
@property (readonly) NSString *SecWebSocketKey __attribute__((swift_name("SecWebSocketKey")));
@property (readonly) NSString *SecWebSocketProtocol __attribute__((swift_name("SecWebSocketProtocol")));
@property (readonly) NSString *SecWebSocketVersion __attribute__((swift_name("SecWebSocketVersion")));
@property (readonly) NSString *Server __attribute__((swift_name("Server")));
@property (readonly) NSString *SetCookie __attribute__((swift_name("SetCookie")));
@property (readonly) NSString *StrictTransportSecurity __attribute__((swift_name("StrictTransportSecurity")));
@property (readonly) NSString *TE __attribute__((swift_name("TE")));
@property (readonly) NSString *Timeout __attribute__((swift_name("Timeout")));
@property (readonly) NSString *Trailer __attribute__((swift_name("Trailer")));
@property (readonly) NSString *TransferEncoding __attribute__((swift_name("TransferEncoding")));
@property (readonly) XNetworking_fearlesswalletKotlinArray<NSString *> *UnsafeHeaders __attribute__((swift_name("UnsafeHeaders"))) __attribute__((deprecated("Use UnsafeHeadersList instead.")));
@property (readonly) NSArray<NSString *> *UnsafeHeadersList __attribute__((swift_name("UnsafeHeadersList")));
@property (readonly) NSString *Upgrade __attribute__((swift_name("Upgrade")));
@property (readonly) NSString *UserAgent __attribute__((swift_name("UserAgent")));
@property (readonly) NSString *Vary __attribute__((swift_name("Vary")));
@property (readonly) NSString *Via __attribute__((swift_name("Via")));
@property (readonly) NSString *WWWAuthenticate __attribute__((swift_name("WWWAuthenticate")));
@property (readonly) NSString *Warning __attribute__((swift_name("Warning")));
@property (readonly) NSString *XCorrelationId __attribute__((swift_name("XCorrelationId")));
@property (readonly) NSString *XForwardedFor __attribute__((swift_name("XForwardedFor")));
@property (readonly) NSString *XForwardedHost __attribute__((swift_name("XForwardedHost")));
@property (readonly) NSString *XForwardedPort __attribute__((swift_name("XForwardedPort")));
@property (readonly) NSString *XForwardedProto __attribute__((swift_name("XForwardedProto")));
@property (readonly) NSString *XForwardedServer __attribute__((swift_name("XForwardedServer")));
@property (readonly) NSString *XHttpMethodOverride __attribute__((swift_name("XHttpMethodOverride")));
@property (readonly) NSString *XRequestId __attribute__((swift_name("XRequestId")));
@property (readonly) NSString *XTotalCount __attribute__((swift_name("XTotalCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpMethod")))
@interface XNetworking_fearlesswalletHttpMethod : XNetworking_fearlesswalletBase
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpMethodCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletHttpMethod *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpMethod.Companion")))
@interface XNetworking_fearlesswalletHttpMethodCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpMethodCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletHttpMethod *)parseMethod:(NSString *)method __attribute__((swift_name("parse(method:)")));
@property (readonly) NSArray<XNetworking_fearlesswalletHttpMethod *> *DefaultMethods __attribute__((swift_name("DefaultMethods")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *Delete __attribute__((swift_name("Delete")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *Get __attribute__((swift_name("Get")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *Head __attribute__((swift_name("Head")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *Options __attribute__((swift_name("Options")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *Patch __attribute__((swift_name("Patch")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *Post __attribute__((swift_name("Post")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *Put __attribute__((swift_name("Put")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpProtocolVersion")))
@interface XNetworking_fearlesswalletHttpProtocolVersion : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("init(name:major:minor:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpProtocolVersionCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletHttpProtocolVersion *)doCopyName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("doCopy(name:major:minor:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t major __attribute__((swift_name("major")));
@property (readonly) int32_t minor __attribute__((swift_name("minor")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpProtocolVersion.Companion")))
@interface XNetworking_fearlesswalletHttpProtocolVersionCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpProtocolVersionCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletHttpProtocolVersion *)fromValueName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("fromValue(name:major:minor:)")));
- (XNetworking_fearlesswalletHttpProtocolVersion *)parseValue:(id)value __attribute__((swift_name("parse(value:)")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *HTTP_1_0 __attribute__((swift_name("HTTP_1_0")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *HTTP_1_1 __attribute__((swift_name("HTTP_1_1")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *HTTP_2_0 __attribute__((swift_name("HTTP_2_0")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *QUIC __attribute__((swift_name("QUIC")));
@property (readonly) XNetworking_fearlesswalletHttpProtocolVersion *SPDY_3 __attribute__((swift_name("SPDY_3")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpStatusCode")))
@interface XNetworking_fearlesswalletHttpStatusCode : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinComparable>
- (instancetype)initWithValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("init(value:description:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpStatusCodeCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(XNetworking_fearlesswalletHttpStatusCode *)other __attribute__((swift_name("compareTo(other:)")));
- (XNetworking_fearlesswalletHttpStatusCode *)doCopyValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("doCopy(value:description:)")));
- (XNetworking_fearlesswalletHttpStatusCode *)descriptionValue:(NSString *)value __attribute__((swift_name("description(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpStatusCode.Companion")))
@interface XNetworking_fearlesswalletHttpStatusCodeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpStatusCodeCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletHttpStatusCode *)fromValueValue:(int32_t)value __attribute__((swift_name("fromValue(value:)")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Accepted __attribute__((swift_name("Accepted")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *BadGateway __attribute__((swift_name("BadGateway")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *BadRequest __attribute__((swift_name("BadRequest")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Conflict __attribute__((swift_name("Conflict")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Continue __attribute__((swift_name("Continue")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Created __attribute__((swift_name("Created")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *ExpectationFailed __attribute__((swift_name("ExpectationFailed")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *FailedDependency __attribute__((swift_name("FailedDependency")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Forbidden __attribute__((swift_name("Forbidden")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Found __attribute__((swift_name("Found")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *GatewayTimeout __attribute__((swift_name("GatewayTimeout")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Gone __attribute__((swift_name("Gone")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *InsufficientStorage __attribute__((swift_name("InsufficientStorage")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *InternalServerError __attribute__((swift_name("InternalServerError")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *LengthRequired __attribute__((swift_name("LengthRequired")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Locked __attribute__((swift_name("Locked")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *MethodNotAllowed __attribute__((swift_name("MethodNotAllowed")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *MovedPermanently __attribute__((swift_name("MovedPermanently")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *MultiStatus __attribute__((swift_name("MultiStatus")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *MultipleChoices __attribute__((swift_name("MultipleChoices")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *NoContent __attribute__((swift_name("NoContent")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *NonAuthoritativeInformation __attribute__((swift_name("NonAuthoritativeInformation")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *NotAcceptable __attribute__((swift_name("NotAcceptable")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *NotFound __attribute__((swift_name("NotFound")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *NotImplemented __attribute__((swift_name("NotImplemented")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *NotModified __attribute__((swift_name("NotModified")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *OK __attribute__((swift_name("OK")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *PartialContent __attribute__((swift_name("PartialContent")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *PayloadTooLarge __attribute__((swift_name("PayloadTooLarge")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *PaymentRequired __attribute__((swift_name("PaymentRequired")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *PermanentRedirect __attribute__((swift_name("PermanentRedirect")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *PreconditionFailed __attribute__((swift_name("PreconditionFailed")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Processing __attribute__((swift_name("Processing")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *ProxyAuthenticationRequired __attribute__((swift_name("ProxyAuthenticationRequired")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *RequestHeaderFieldTooLarge __attribute__((swift_name("RequestHeaderFieldTooLarge")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *RequestTimeout __attribute__((swift_name("RequestTimeout")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *RequestURITooLong __attribute__((swift_name("RequestURITooLong")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *RequestedRangeNotSatisfiable __attribute__((swift_name("RequestedRangeNotSatisfiable")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *ResetContent __attribute__((swift_name("ResetContent")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *SeeOther __attribute__((swift_name("SeeOther")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *ServiceUnavailable __attribute__((swift_name("ServiceUnavailable")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *SwitchProxy __attribute__((swift_name("SwitchProxy")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *SwitchingProtocols __attribute__((swift_name("SwitchingProtocols")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *TemporaryRedirect __attribute__((swift_name("TemporaryRedirect")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *TooEarly __attribute__((swift_name("TooEarly")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *TooManyRequests __attribute__((swift_name("TooManyRequests")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *Unauthorized __attribute__((swift_name("Unauthorized")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *UnprocessableEntity __attribute__((swift_name("UnprocessableEntity")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *UnsupportedMediaType __attribute__((swift_name("UnsupportedMediaType")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *UpgradeRequired __attribute__((swift_name("UpgradeRequired")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *UseProxy __attribute__((swift_name("UseProxy")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *VariantAlsoNegotiates __attribute__((swift_name("VariantAlsoNegotiates")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *VersionNotSupported __attribute__((swift_name("VersionNotSupported")));
@property (readonly) NSArray<XNetworking_fearlesswalletHttpStatusCode *> *allStatusCodes __attribute__((swift_name("allStatusCodes")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IllegalHeaderNameException")))
@interface XNetworking_fearlesswalletIllegalHeaderNameException : XNetworking_fearlesswalletKotlinIllegalArgumentException
- (instancetype)initWithHeaderName:(NSString *)headerName position:(int32_t)position __attribute__((swift_name("init(headerName:position:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *headerName __attribute__((swift_name("headerName")));
@property (readonly) int32_t position __attribute__((swift_name("position")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IllegalHeaderValueException")))
@interface XNetworking_fearlesswalletIllegalHeaderValueException : XNetworking_fearlesswalletKotlinIllegalArgumentException
- (instancetype)initWithHeaderValue:(NSString *)headerValue position:(int32_t)position __attribute__((swift_name("init(headerValue:position:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *headerValue __attribute__((swift_name("headerValue")));
@property (readonly) int32_t position __attribute__((swift_name("position")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinkHeader")))
@interface XNetworking_fearlesswalletLinkHeader : XNetworking_fearlesswalletHeaderValueWithParameters
- (instancetype)initWithUri:(NSString *)uri rel:(NSString *)rel __attribute__((swift_name("init(uri:rel:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUri:(NSString *)uri rel_:(XNetworking_fearlesswalletKotlinArray<NSString *> *)rel __attribute__((swift_name("init(uri:rel_:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUri:(NSString *)uri rel:(NSArray<NSString *> *)rel type:(XNetworking_fearlesswalletContentType *)type __attribute__((swift_name("init(uri:rel:type:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUri:(NSString *)uri params:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)params __attribute__((swift_name("init(uri:params:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinkHeader.Parameters")))
@interface XNetworking_fearlesswalletLinkHeaderParameters : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)parameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletLinkHeaderParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *Anchor __attribute__((swift_name("Anchor")));
@property (readonly) NSString *HrefLang __attribute__((swift_name("HrefLang")));
@property (readonly) NSString *Media __attribute__((swift_name("Media")));
@property (readonly) NSString *Rel __attribute__((swift_name("Rel")));
@property (readonly) NSString *Rev __attribute__((swift_name("Rev")));
@property (readonly) NSString *Title __attribute__((swift_name("Title")));
@property (readonly) NSString *Type __attribute__((swift_name("Type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinkHeader.Rel")))
@interface XNetworking_fearlesswalletLinkHeaderRel : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)rel __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletLinkHeaderRel *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *DnsPrefetch __attribute__((swift_name("DnsPrefetch")));
@property (readonly) NSString *Next __attribute__((swift_name("Next")));
@property (readonly) NSString *PreConnect __attribute__((swift_name("PreConnect")));
@property (readonly) NSString *PreLoad __attribute__((swift_name("PreLoad")));
@property (readonly) NSString *PreRender __attribute__((swift_name("PreRender")));
@property (readonly) NSString *Prefetch __attribute__((swift_name("Prefetch")));
@property (readonly) NSString *Stylesheet __attribute__((swift_name("Stylesheet")));
@end

__attribute__((swift_name("Parameters")))
@protocol XNetworking_fearlesswalletParameters <XNetworking_fearlesswalletStringValues>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersCompanion")))
@interface XNetworking_fearlesswalletParametersCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletParameters>)buildBuilder:(void (^)(id<XNetworking_fearlesswalletParametersBuilder>))builder __attribute__((swift_name("build(builder:)")));
@property (readonly) id<XNetworking_fearlesswalletParameters> Empty __attribute__((swift_name("Empty")));
@end

__attribute__((swift_name("ParametersBuilder")))
@protocol XNetworking_fearlesswalletParametersBuilder <XNetworking_fearlesswalletStringValuesBuilder>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersBuilderImpl")))
@interface XNetworking_fearlesswalletParametersBuilderImpl : XNetworking_fearlesswalletStringValuesBuilderImpl <XNetworking_fearlesswalletParametersBuilder>
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (id<XNetworking_fearlesswalletParameters>)build __attribute__((swift_name("build()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersImpl")))
@interface XNetworking_fearlesswalletParametersImpl : XNetworking_fearlesswalletStringValuesImpl <XNetworking_fearlesswalletParameters>
- (instancetype)initWithValues:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(values:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName values:(NSDictionary<NSString *, NSArray<NSString *> *> *)values __attribute__((swift_name("init(caseInsensitiveName:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersSingleImpl")))
@interface XNetworking_fearlesswalletParametersSingleImpl : XNetworking_fearlesswalletStringValuesSingleImpl <XNetworking_fearlesswalletParameters>
- (instancetype)initWithName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(name:values:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName name:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("init(caseInsensitiveName:name:values:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RangeUnits")))
@interface XNetworking_fearlesswalletRangeUnits : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletRangeUnits *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletRangeUnits *bytes __attribute__((swift_name("bytes")));
@property (class, readonly) XNetworking_fearlesswalletRangeUnits *none __attribute__((swift_name("none")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletRangeUnits *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *unitToken __attribute__((swift_name("unitToken")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RangesSpecifier")))
@interface XNetworking_fearlesswalletRangesSpecifier : XNetworking_fearlesswalletBase
- (instancetype)initWithUnit:(XNetworking_fearlesswalletRangeUnits *)unit ranges:(NSArray<XNetworking_fearlesswalletContentRange *> *)ranges __attribute__((swift_name("init(unit:ranges:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithUnit:(NSString *)unit ranges_:(NSArray<XNetworking_fearlesswalletContentRange *> *)ranges __attribute__((swift_name("init(unit:ranges_:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletRangesSpecifier *)doCopyUnit:(NSString *)unit ranges:(NSArray<XNetworking_fearlesswalletContentRange *> *)ranges __attribute__((swift_name("doCopy(unit:ranges:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isValidRangeUnitPredicate:(XNetworking_fearlesswalletBoolean *(^)(NSString *))rangeUnitPredicate __attribute__((swift_name("isValid(rangeUnitPredicate:)")));
- (NSArray<XNetworking_fearlesswalletKotlinLongRange *> *)mergeLength:(int64_t)length __attribute__((swift_name("merge(length:)")));
- (NSArray<XNetworking_fearlesswalletKotlinLongRange *> *)mergeLength:(int64_t)length maxRangeCount:(int32_t)maxRangeCount __attribute__((swift_name("merge(length:maxRangeCount:)")));
- (XNetworking_fearlesswalletKotlinLongRange * _Nullable)mergeToSingleLength:(int64_t)length __attribute__((swift_name("mergeToSingle(length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<XNetworking_fearlesswalletContentRange *> *ranges __attribute__((swift_name("ranges")));
@property (readonly) NSString *unit __attribute__((swift_name("unit")));
@end

__attribute__((swift_name("RequestConnectionPoint")))
@protocol XNetworking_fearlesswalletRequestConnectionPoint
@required
@property (readonly) NSString *host __attribute__((swift_name("host"))) __attribute__((deprecated("Use localHost or serverHost instead")));
@property (readonly) NSString *localAddress __attribute__((swift_name("localAddress")));
@property (readonly) NSString *localHost __attribute__((swift_name("localHost")));
@property (readonly) int32_t localPort __attribute__((swift_name("localPort")));
@property (readonly) XNetworking_fearlesswalletHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) int32_t port __attribute__((swift_name("port"))) __attribute__((deprecated("Use localPort or serverPort instead")));
@property (readonly) NSString *remoteAddress __attribute__((swift_name("remoteAddress")));
@property (readonly) NSString *remoteHost __attribute__((swift_name("remoteHost")));
@property (readonly) int32_t remotePort __attribute__((swift_name("remotePort")));
@property (readonly) NSString *scheme __attribute__((swift_name("scheme")));
@property (readonly) NSString *serverHost __attribute__((swift_name("serverHost")));
@property (readonly) int32_t serverPort __attribute__((swift_name("serverPort")));
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLBuilder")))
@interface XNetworking_fearlesswalletURLBuilder : XNetworking_fearlesswalletBase
- (instancetype)initWithProtocol:(XNetworking_fearlesswalletURLProtocol *)protocol host:(NSString *)host port:(int32_t)port user:(NSString * _Nullable)user password:(NSString * _Nullable)password pathSegments:(NSArray<NSString *> *)pathSegments parameters:(id<XNetworking_fearlesswalletParameters>)parameters fragment:(NSString *)fragment trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("init(protocol:host:port:user:password:pathSegments:parameters:fragment:trailingQuery:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletURLBuilderCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletUrl *)build __attribute__((swift_name("build()")));
- (NSString *)buildString __attribute__((swift_name("buildString()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property id<XNetworking_fearlesswalletParametersBuilder> encodedParameters __attribute__((swift_name("encodedParameters")));
@property NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property NSArray<NSString *> *encodedPathSegments __attribute__((swift_name("encodedPathSegments")));
@property NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property NSString *fragment __attribute__((swift_name("fragment")));
@property NSString *host __attribute__((swift_name("host")));
@property (readonly) id<XNetworking_fearlesswalletParametersBuilder> parameters __attribute__((swift_name("parameters")));
@property NSString * _Nullable password __attribute__((swift_name("password")));
@property NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments")));
@property int32_t port __attribute__((swift_name("port")));
@property XNetworking_fearlesswalletURLProtocol *protocol __attribute__((swift_name("protocol")));
@property BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLBuilder.Companion")))
@interface XNetworking_fearlesswalletURLBuilderCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletURLBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLDecodeException")))
@interface XNetworking_fearlesswalletURLDecodeException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLParserException")))
@interface XNetworking_fearlesswalletURLParserException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithUrlString:(NSString *)urlString cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("init(urlString:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLProtocol")))
@interface XNetworking_fearlesswalletURLProtocol : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("init(name:defaultPort:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletURLProtocolCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletURLProtocol *)doCopyName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("doCopy(name:defaultPort:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t defaultPort __attribute__((swift_name("defaultPort")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLProtocol.Companion")))
@interface XNetworking_fearlesswalletURLProtocolCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletURLProtocolCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletURLProtocol *)createOrDefaultName:(NSString *)name __attribute__((swift_name("createOrDefault(name:)")));
@property (readonly) XNetworking_fearlesswalletURLProtocol *HTTP __attribute__((swift_name("HTTP")));
@property (readonly) XNetworking_fearlesswalletURLProtocol *HTTPS __attribute__((swift_name("HTTPS")));
@property (readonly) XNetworking_fearlesswalletURLProtocol *SOCKS __attribute__((swift_name("SOCKS")));
@property (readonly) XNetworking_fearlesswalletURLProtocol *WS __attribute__((swift_name("WS")));
@property (readonly) XNetworking_fearlesswalletURLProtocol *WSS __attribute__((swift_name("WSS")));
@property (readonly) NSDictionary<NSString *, XNetworking_fearlesswalletURLProtocol *> *byName __attribute__((swift_name("byName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnsafeHeaderException")))
@interface XNetworking_fearlesswalletUnsafeHeaderException : XNetworking_fearlesswalletKotlinIllegalArgumentException
- (instancetype)initWithHeader:(NSString *)header __attribute__((swift_name("init(header:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Url")))
@interface XNetworking_fearlesswalletUrl : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletUrlCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property (readonly) NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property (readonly) NSString *encodedPath __attribute__((swift_name("encodedPath")));
@property (readonly) NSString *encodedPathAndQuery __attribute__((swift_name("encodedPathAndQuery")));
@property (readonly) NSString *encodedQuery __attribute__((swift_name("encodedQuery")));
@property (readonly) NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property (readonly) NSString *fragment __attribute__((swift_name("fragment")));
@property (readonly) NSString *host __attribute__((swift_name("host")));
@property (readonly) id<XNetworking_fearlesswalletParameters> parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable password __attribute__((swift_name("password")));
@property (readonly) NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@property (readonly) XNetworking_fearlesswalletURLProtocol *protocol __attribute__((swift_name("protocol")));
@property (readonly) int32_t specifiedPort __attribute__((swift_name("specifiedPort")));
@property (readonly) BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Url.Companion")))
@interface XNetworking_fearlesswalletUrlCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletUrlCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthScheme")))
@interface XNetworking_fearlesswalletAuthScheme : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)authScheme __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletAuthScheme *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *Basic __attribute__((swift_name("Basic")));
@property (readonly) NSString *Bearer __attribute__((swift_name("Bearer")));
@property (readonly) NSString *Digest __attribute__((swift_name("Digest")));
@property (readonly) NSString *Negotiate __attribute__((swift_name("Negotiate")));
@property (readonly) NSString *OAuth __attribute__((swift_name("OAuth")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueEncoding")))
@interface XNetworking_fearlesswalletHeaderValueEncoding : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletHeaderValueEncoding *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletHeaderValueEncoding *quotedWhenRequired __attribute__((swift_name("quotedWhenRequired")));
@property (class, readonly) XNetworking_fearlesswalletHeaderValueEncoding *quotedAlways __attribute__((swift_name("quotedAlways")));
@property (class, readonly) XNetworking_fearlesswalletHeaderValueEncoding *uriEncode __attribute__((swift_name("uriEncode")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletHeaderValueEncoding *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("HttpAuthHeader")))
@interface XNetworking_fearlesswalletHttpAuthHeader : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletHttpAuthHeaderCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)render __attribute__((swift_name("render()")));
- (NSString *)renderEncoding:(XNetworking_fearlesswalletHeaderValueEncoding *)encoding __attribute__((swift_name("render(encoding:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *authScheme __attribute__((swift_name("authScheme")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Companion")))
@interface XNetworking_fearlesswalletHttpAuthHeaderCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpAuthHeaderCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletHttpAuthHeaderParameterized *)basicAuthChallengeRealm:(NSString *)realm charset:(XNetworking_fearlesswalletCharset * _Nullable)charset __attribute__((swift_name("basicAuthChallenge(realm:charset:)")));
- (XNetworking_fearlesswalletHttpAuthHeader *)bearerAuthChallengeScheme:(NSString *)scheme realm:(NSString * _Nullable)realm __attribute__((swift_name("bearerAuthChallenge(scheme:realm:)")));
- (XNetworking_fearlesswalletHttpAuthHeaderParameterized *)digestAuthChallengeRealm:(NSString *)realm nonce:(NSString *)nonce domain:(NSArray<NSString *> *)domain opaque:(NSString * _Nullable)opaque stale:(XNetworking_fearlesswalletBoolean * _Nullable)stale algorithm:(NSString *)algorithm __attribute__((swift_name("digestAuthChallenge(realm:nonce:domain:opaque:stale:algorithm:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Parameterized")))
@interface XNetworking_fearlesswalletHttpAuthHeaderParameterized : XNetworking_fearlesswalletHttpAuthHeader
- (instancetype)initWithAuthScheme:(NSString *)authScheme parameters:(NSDictionary<NSString *, NSString *> *)parameters encoding:(XNetworking_fearlesswalletHeaderValueEncoding *)encoding __attribute__((swift_name("init(authScheme:parameters:encoding:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithAuthScheme:(NSString *)authScheme parameters:(NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)parameters encoding_:(XNetworking_fearlesswalletHeaderValueEncoding *)encoding __attribute__((swift_name("init(authScheme:parameters:encoding_:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString * _Nullable)parameterName:(NSString *)name __attribute__((swift_name("parameter(name:)")));
- (NSString *)render __attribute__((swift_name("render()")));
- (NSString *)renderEncoding:(XNetworking_fearlesswalletHeaderValueEncoding *)encoding __attribute__((swift_name("render(encoding:)")));
- (XNetworking_fearlesswalletHttpAuthHeaderParameterized *)withParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withParameter(name:value:)")));
- (XNetworking_fearlesswalletHttpAuthHeaderParameterized *)withReplacedParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withReplacedParameter(name:value:)")));
@property (readonly) XNetworking_fearlesswalletHeaderValueEncoding *encoding __attribute__((swift_name("encoding")));
@property (readonly) NSArray<XNetworking_fearlesswalletHeaderValueParam *> *parameters __attribute__((swift_name("parameters")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Parameters")))
@interface XNetworking_fearlesswalletHttpAuthHeaderParameters : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)parameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHttpAuthHeaderParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *Charset __attribute__((swift_name("Charset")));
@property (readonly) NSString *OAuthCallback __attribute__((swift_name("OAuthCallback")));
@property (readonly) NSString *OAuthCallbackConfirmed __attribute__((swift_name("OAuthCallbackConfirmed")));
@property (readonly) NSString *OAuthConsumerKey __attribute__((swift_name("OAuthConsumerKey")));
@property (readonly) NSString *OAuthNonce __attribute__((swift_name("OAuthNonce")));
@property (readonly) NSString *OAuthSignature __attribute__((swift_name("OAuthSignature")));
@property (readonly) NSString *OAuthSignatureMethod __attribute__((swift_name("OAuthSignatureMethod")));
@property (readonly) NSString *OAuthTimestamp __attribute__((swift_name("OAuthTimestamp")));
@property (readonly) NSString *OAuthToken __attribute__((swift_name("OAuthToken")));
@property (readonly) NSString *OAuthTokenSecret __attribute__((swift_name("OAuthTokenSecret")));
@property (readonly) NSString *OAuthVerifier __attribute__((swift_name("OAuthVerifier")));
@property (readonly) NSString *OAuthVersion __attribute__((swift_name("OAuthVersion")));
@property (readonly) NSString *Realm __attribute__((swift_name("Realm")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeader.Single")))
@interface XNetworking_fearlesswalletHttpAuthHeaderSingle : XNetworking_fearlesswalletHttpAuthHeader
- (instancetype)initWithAuthScheme:(NSString *)authScheme blob:(NSString *)blob __attribute__((swift_name("init(authScheme:blob:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)render __attribute__((swift_name("render()")));
- (NSString *)renderEncoding:(XNetworking_fearlesswalletHeaderValueEncoding *)encoding __attribute__((swift_name("render(encoding:)")));
@property (readonly) NSString *blob __attribute__((swift_name("blob")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParseException")))
@interface XNetworking_fearlesswalletParseException : XNetworking_fearlesswalletKotlinIllegalArgumentException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteArrayContent")))
@interface XNetworking_fearlesswalletByteArrayContent : XNetworking_fearlesswalletOutgoingContentByteArrayContent
- (instancetype)initWithBytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes contentType:(XNetworking_fearlesswalletContentType * _Nullable)contentType status:(XNetworking_fearlesswalletHttpStatusCode * _Nullable)status __attribute__((swift_name("init(bytes:contentType:status:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
@property (readonly) XNetworking_fearlesswalletLong *contentLength __attribute__((swift_name("contentLength")));
@property (readonly) XNetworking_fearlesswalletContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CachingOptions")))
@interface XNetworking_fearlesswalletCachingOptions : XNetworking_fearlesswalletBase
- (instancetype)initWithCacheControl:(XNetworking_fearlesswalletCacheControl_ * _Nullable)cacheControl expires:(XNetworking_fearlesswalletGMTDate * _Nullable)expires __attribute__((swift_name("init(cacheControl:expires:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletCachingOptions *)doCopyCacheControl:(XNetworking_fearlesswalletCacheControl_ * _Nullable)cacheControl expires:(XNetworking_fearlesswalletGMTDate * _Nullable)expires __attribute__((swift_name("doCopy(cacheControl:expires:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletCacheControl_ * _Nullable cacheControl __attribute__((swift_name("cacheControl")));
@property (readonly) XNetworking_fearlesswalletGMTDate * _Nullable expires __attribute__((swift_name("expires")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelWriterContent")))
@interface XNetworking_fearlesswalletChannelWriterContent : XNetworking_fearlesswalletOutgoingContentWriteChannelContent
- (instancetype)initWithBody:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)body contentType:(XNetworking_fearlesswalletContentType * _Nullable)contentType status:(XNetworking_fearlesswalletHttpStatusCode * _Nullable)status contentLength:(XNetworking_fearlesswalletLong * _Nullable)contentLength __attribute__((swift_name("init(body:contentType:status:contentLength:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeToChannel:(id<XNetworking_fearlesswalletByteWriteChannel>)channel completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeTo(channel:completionHandler:)")));
@property (readonly) XNetworking_fearlesswalletLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) XNetworking_fearlesswalletContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((swift_name("Version")))
@protocol XNetworking_fearlesswalletVersion
@required
- (void)appendHeadersToBuilder:(XNetworking_fearlesswalletHeadersBuilder *)builder __attribute__((swift_name("appendHeadersTo(builder:)")));
- (XNetworking_fearlesswalletVersionCheckResult *)checkRequestHeaders:(id<XNetworking_fearlesswalletHeaders>)requestHeaders __attribute__((swift_name("check(requestHeaders:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EntityTagVersion")))
@interface XNetworking_fearlesswalletEntityTagVersion : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletVersion>
- (instancetype)initWithEtag:(NSString *)etag weak:(BOOL)weak __attribute__((swift_name("init(etag:weak:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletEntityTagVersionCompanion *companion __attribute__((swift_name("companion")));
- (void)appendHeadersToBuilder:(XNetworking_fearlesswalletHeadersBuilder *)builder __attribute__((swift_name("appendHeadersTo(builder:)")));
- (XNetworking_fearlesswalletVersionCheckResult *)checkRequestHeaders:(id<XNetworking_fearlesswalletHeaders>)requestHeaders __attribute__((swift_name("check(requestHeaders:)")));
- (XNetworking_fearlesswalletEntityTagVersion *)doCopyEtag:(NSString *)etag weak:(BOOL)weak __attribute__((swift_name("doCopy(etag:weak:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)matchOther:(XNetworking_fearlesswalletEntityTagVersion *)other __attribute__((swift_name("match(other:)")));
- (XNetworking_fearlesswalletVersionCheckResult *)matchGivenMatchEtags:(NSArray<XNetworking_fearlesswalletEntityTagVersion *> *)givenMatchEtags __attribute__((swift_name("match(givenMatchEtags:)")));
- (XNetworking_fearlesswalletVersionCheckResult *)noneMatchGivenNoneMatchEtags:(NSArray<XNetworking_fearlesswalletEntityTagVersion *> *)givenNoneMatchEtags __attribute__((swift_name("noneMatch(givenNoneMatchEtags:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *etag __attribute__((swift_name("etag")));
@property (readonly) BOOL weak __attribute__((swift_name("weak")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EntityTagVersion.Companion")))
@interface XNetworking_fearlesswalletEntityTagVersionCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletEntityTagVersionCompanion *shared __attribute__((swift_name("shared")));
- (NSArray<XNetworking_fearlesswalletEntityTagVersion *> *)parseHeaderValue:(NSString *)headerValue __attribute__((swift_name("parse(headerValue:)")));
- (XNetworking_fearlesswalletEntityTagVersion *)parseSingleValue:(NSString *)value __attribute__((swift_name("parseSingle(value:)")));
@property (readonly) XNetworking_fearlesswalletEntityTagVersion *STAR __attribute__((swift_name("STAR")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LastModifiedVersion")))
@interface XNetworking_fearlesswalletLastModifiedVersion : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletVersion>
- (instancetype)initWithLastModified:(XNetworking_fearlesswalletGMTDate *)lastModified __attribute__((swift_name("init(lastModified:)"))) __attribute__((objc_designated_initializer));
- (void)appendHeadersToBuilder:(XNetworking_fearlesswalletHeadersBuilder *)builder __attribute__((swift_name("appendHeadersTo(builder:)")));
- (XNetworking_fearlesswalletVersionCheckResult *)checkRequestHeaders:(id<XNetworking_fearlesswalletHeaders>)requestHeaders __attribute__((swift_name("check(requestHeaders:)")));
- (XNetworking_fearlesswalletLastModifiedVersion *)doCopyLastModified:(XNetworking_fearlesswalletGMTDate *)lastModified __attribute__((swift_name("doCopy(lastModified:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)ifModifiedSinceDates:(NSArray<XNetworking_fearlesswalletGMTDate *> *)dates __attribute__((swift_name("ifModifiedSince(dates:)")));
- (BOOL)ifUnmodifiedSinceDates:(NSArray<XNetworking_fearlesswalletGMTDate *> *)dates __attribute__((swift_name("ifUnmodifiedSince(dates:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletGMTDate *lastModified __attribute__((swift_name("lastModified")));
@end

__attribute__((swift_name("MultiPartData")))
@protocol XNetworking_fearlesswalletMultiPartData
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPartWithCompletionHandler:(void (^)(XNetworking_fearlesswalletPartData * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readPart(completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiPartDataEmpty")))
@interface XNetworking_fearlesswalletMultiPartDataEmpty : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletMultiPartData>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)empty __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletMultiPartDataEmpty *shared __attribute__((swift_name("shared")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPartWithCompletionHandler:(void (^)(XNetworking_fearlesswalletPartData * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readPart(completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NullBody")))
@interface XNetworking_fearlesswalletNullBody : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nullBody __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletNullBody *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("OutgoingContent.ProtocolUpgrade")))
@interface XNetworking_fearlesswalletOutgoingContentProtocolUpgrade : XNetworking_fearlesswalletOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)upgradeInput:(id<XNetworking_fearlesswalletByteReadChannel>)input output:(id<XNetworking_fearlesswalletByteWriteChannel>)output engineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)engineContext userContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)userContext completionHandler:(void (^)(id<XNetworking_fearlesswalletJob> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("upgrade(input:output:engineContext:userContext:completionHandler:)")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *status __attribute__((swift_name("status")));
@end

__attribute__((swift_name("OutgoingContent.ReadChannelContent")))
@interface XNetworking_fearlesswalletOutgoingContentReadChannelContent : XNetworking_fearlesswalletOutgoingContent
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletByteReadChannel>)readFrom __attribute__((swift_name("readFrom()")));
- (id<XNetworking_fearlesswalletByteReadChannel>)readFromRange:(XNetworking_fearlesswalletKotlinLongRange *)range __attribute__((swift_name("readFrom(range:)")));
@end

__attribute__((swift_name("PartData")))
@interface XNetworking_fearlesswalletPartData : XNetworking_fearlesswalletBase
@property (readonly) XNetworking_fearlesswalletContentDisposition * _Nullable contentDisposition __attribute__((swift_name("contentDisposition")));
@property (readonly) XNetworking_fearlesswalletContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) void (^dispose)(void) __attribute__((swift_name("dispose")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) id<XNetworking_fearlesswalletHeaders> partHeaders __attribute__((swift_name("partHeaders"))) __attribute__((unavailable("Use headers property instead")));
@property (readonly) NSString * _Nullable partName __attribute__((swift_name("partName"))) __attribute__((unavailable("Use name property instead")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PartData.BinaryChannelItem")))
@interface XNetworking_fearlesswalletPartDataBinaryChannelItem : XNetworking_fearlesswalletPartData
- (instancetype)initWithProvider:(id<XNetworking_fearlesswalletByteReadChannel> (^)(void))provider partHeaders:(id<XNetworking_fearlesswalletHeaders>)partHeaders __attribute__((swift_name("init(provider:partHeaders:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<XNetworking_fearlesswalletByteReadChannel> (^provider)(void) __attribute__((swift_name("provider")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PartData.BinaryItem")))
@interface XNetworking_fearlesswalletPartDataBinaryItem : XNetworking_fearlesswalletPartData
- (instancetype)initWithProvider:(XNetworking_fearlesswalletInput *(^)(void))provider dispose:(void (^)(void))dispose partHeaders:(id<XNetworking_fearlesswalletHeaders>)partHeaders __attribute__((swift_name("init(provider:dispose:partHeaders:)"))) __attribute__((objc_designated_initializer));
@property (readonly) XNetworking_fearlesswalletInput *(^provider)(void) __attribute__((swift_name("provider")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PartData.FileItem")))
@interface XNetworking_fearlesswalletPartDataFileItem : XNetworking_fearlesswalletPartData
- (instancetype)initWithProvider:(XNetworking_fearlesswalletInput *(^)(void))provider dispose:(void (^)(void))dispose partHeaders:(id<XNetworking_fearlesswalletHeaders>)partHeaders __attribute__((swift_name("init(provider:dispose:partHeaders:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString * _Nullable originalFileName __attribute__((swift_name("originalFileName")));
@property (readonly) XNetworking_fearlesswalletInput *(^provider)(void) __attribute__((swift_name("provider")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PartData.FormItem")))
@interface XNetworking_fearlesswalletPartDataFormItem : XNetworking_fearlesswalletPartData
- (instancetype)initWithValue:(NSString *)value dispose:(void (^)(void))dispose partHeaders:(id<XNetworking_fearlesswalletHeaders>)partHeaders __attribute__((swift_name("init(value:dispose:partHeaders:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TextContent")))
@interface XNetworking_fearlesswalletTextContent : XNetworking_fearlesswalletOutgoingContentByteArrayContent
- (instancetype)initWithText:(NSString *)text contentType:(XNetworking_fearlesswalletContentType *)contentType status:(XNetworking_fearlesswalletHttpStatusCode * _Nullable)status __attribute__((swift_name("init(text:contentType:status:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("bytes()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletLong *contentLength __attribute__((swift_name("contentLength")));
@property (readonly) XNetworking_fearlesswalletContentType *contentType __attribute__((swift_name("contentType")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VersionCheckResult")))
@interface XNetworking_fearlesswalletVersionCheckResult : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletVersionCheckResult *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletVersionCheckResult *ok __attribute__((swift_name("ok")));
@property (class, readonly) XNetworking_fearlesswalletVersionCheckResult *notModified __attribute__((swift_name("notModified")));
@property (class, readonly) XNetworking_fearlesswalletVersionCheckResult *preconditionFailed __attribute__((swift_name("preconditionFailed")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletVersionCheckResult *> *)values __attribute__((swift_name("values()")));
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *statusCode __attribute__((swift_name("statusCode")));
@end

__attribute__((swift_name("NonceManager")))
@protocol XNetworking_fearlesswalletNonceManager
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)doNewNonceWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doNewNonce(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyNonceNonce:(NSString *)nonce completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyNonce(nonce:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AlwaysFailNonceManager")))
@interface XNetworking_fearlesswalletAlwaysFailNonceManager : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletNonceManager>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)alwaysFailNonceManager __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletAlwaysFailNonceManager *shared __attribute__((swift_name("shared")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)doNewNonceWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doNewNonce(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyNonceNonce:(NSString *)nonce completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyNonce(nonce:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttributeKey")))
@interface XNetworking_fearlesswalletAttributeKey<T> : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("Attributes")))
@protocol XNetworking_fearlesswalletAttributes
@required
- (id)computeIfAbsentKey:(XNetworking_fearlesswalletAttributeKey<id> *)key block:(id (^)(void))block __attribute__((swift_name("computeIfAbsent(key:block:)")));
- (BOOL)containsKey:(XNetworking_fearlesswalletAttributeKey<id> *)key __attribute__((swift_name("contains(key:)")));
- (id)getKey:(XNetworking_fearlesswalletAttributeKey<id> *)key __attribute__((swift_name("get(key:)")));
- (id _Nullable)getOrNullKey:(XNetworking_fearlesswalletAttributeKey<id> *)key __attribute__((swift_name("getOrNull(key:)")));
- (void)putKey:(XNetworking_fearlesswalletAttributeKey<id> *)key value:(id)value __attribute__((swift_name("put(key:value:)")));
- (void)removeKey:(XNetworking_fearlesswalletAttributeKey<id> *)key __attribute__((swift_name("remove(key:)")));
- (id)takeKey:(XNetworking_fearlesswalletAttributeKey<id> *)key __attribute__((swift_name("take(key:)")));
- (id _Nullable)takeOrNullKey:(XNetworking_fearlesswalletAttributeKey<id> *)key __attribute__((swift_name("takeOrNull(key:)")));
@property (readonly) NSArray<XNetworking_fearlesswalletAttributeKey<id> *> *allKeys __attribute__((swift_name("allKeys")));
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CaseInsensitiveMap")))
@interface XNetworking_fearlesswalletCaseInsensitiveMap : NSObject
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CaseInsensitiveSet")))
@interface XNetworking_fearlesswalletCaseInsensitiveSet : NSObject
@end

__attribute__((swift_name("Digest")))
@protocol XNetworking_fearlesswalletDigest
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)buildWithCompletionHandler:(void (^)(XNetworking_fearlesswalletKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("build(completionHandler:)")));
- (void)plusAssignBytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("plusAssign(bytes:)")));
- (void)reset __attribute__((swift_name("reset()")));
@end

__attribute__((swift_name("Encoder")))
@protocol XNetworking_fearlesswalletEncoder
@required
- (id<XNetworking_fearlesswalletByteReadChannel>)decode:(id<XNetworking_fearlesswalletCoroutineScope>)receiver source:(id<XNetworking_fearlesswalletByteReadChannel>)source __attribute__((swift_name("decode(_:source:)")));
- (id<XNetworking_fearlesswalletByteReadChannel>)encode:(id<XNetworking_fearlesswalletCoroutineScope>)receiver source:(id<XNetworking_fearlesswalletByteReadChannel>)source __attribute__((swift_name("encode(_:source:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GenerateOnlyNonceManager")))
@interface XNetworking_fearlesswalletGenerateOnlyNonceManager : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletNonceManager>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)generateOnlyNonceManager __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletGenerateOnlyNonceManager *shared __attribute__((swift_name("shared")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)doNewNonceWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doNewNonce(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyNonceNonce:(NSString *)nonce completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyNonce(nonce:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Hash")))
@interface XNetworking_fearlesswalletHash : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)hash_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletHash *shared __attribute__((swift_name("shared")));
- (int32_t)combineObjects:(XNetworking_fearlesswalletKotlinArray<id> *)objects __attribute__((swift_name("combine(objects:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Identity")))
@interface XNetworking_fearlesswalletIdentity : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletEncoder>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)identity __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletIdentity *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletByteReadChannel>)decode:(id<XNetworking_fearlesswalletCoroutineScope>)receiver source:(id<XNetworking_fearlesswalletByteReadChannel>)source __attribute__((swift_name("decode(_:source:)")));
- (id<XNetworking_fearlesswalletByteReadChannel>)encode:(id<XNetworking_fearlesswalletCoroutineScope>)receiver source:(id<XNetworking_fearlesswalletByteReadChannel>)source __attribute__((swift_name("encode(_:source:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Platform")))
@interface XNetworking_fearlesswalletPlatform : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletPlatform *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletPlatform *jvm __attribute__((swift_name("jvm")));
@property (class, readonly) XNetworking_fearlesswalletPlatform *native __attribute__((swift_name("native")));
@property (class, readonly) XNetworking_fearlesswalletPlatform *browser __attribute__((swift_name("browser")));
@property (class, readonly) XNetworking_fearlesswalletPlatform *node __attribute__((swift_name("node")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletPlatform *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformUtils")))
@interface XNetworking_fearlesswalletPlatformUtils : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)platformUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPlatformUtils *shared __attribute__((swift_name("shared")));
@property (readonly) BOOL IS_BROWSER __attribute__((swift_name("IS_BROWSER")));
@property (readonly) BOOL IS_DEVELOPMENT_MODE __attribute__((swift_name("IS_DEVELOPMENT_MODE")));
@property (readonly) BOOL IS_JVM __attribute__((swift_name("IS_JVM")));
@property (readonly) BOOL IS_NATIVE __attribute__((swift_name("IS_NATIVE")));
@property (readonly) BOOL IS_NEW_MM_ENABLED __attribute__((swift_name("IS_NEW_MM_ENABLED")));
@property (readonly) BOOL IS_NODE __attribute__((swift_name("IS_NODE")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringValuesCompanion")))
@interface XNetworking_fearlesswalletStringValuesCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletStringValuesCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletStringValues>)buildCaseInsensitiveName:(BOOL)caseInsensitiveName builder:(void (^)(id<XNetworking_fearlesswalletStringValuesBuilder>))builder __attribute__((swift_name("build(caseInsensitiveName:builder:)")));
@property (readonly) id<XNetworking_fearlesswalletStringValues> Empty __attribute__((swift_name("Empty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ThreadInfo")))
@interface XNetworking_fearlesswalletThreadInfo : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)threadInfo __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletThreadInfo *shared __attribute__((swift_name("shared")));
- (void)dropWorkerWorker:(int32_t)worker __attribute__((swift_name("dropWorker(worker:)")));
- (NSArray<XNetworking_fearlesswalletWorkerStacktrace *> *)getAllStackTraces __attribute__((swift_name("getAllStackTraces()")));
- (void)printAllStackTraces __attribute__((swift_name("printAllStackTraces()")));
- (void)registerCurrentThread __attribute__((swift_name("registerCurrentThread()")));
- (void)stopAllWorkers __attribute__((swift_name("stopAllWorkers()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkerStacktrace")))
@interface XNetworking_fearlesswalletWorkerStacktrace : XNetworking_fearlesswalletBase
- (instancetype)initWithWorker:(NSString *)worker stacktrace:(NSArray<NSString *> *)stacktrace __attribute__((swift_name("init(worker:stacktrace:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSArray<NSString *> *stacktrace __attribute__((swift_name("stacktrace")));
@property (readonly) NSString *worker __attribute__((swift_name("worker")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LogLevel_")))
@interface XNetworking_fearlesswalletLogLevel_ : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletLogLevel_ *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletLogLevel_ *trace __attribute__((swift_name("trace")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel_ *debug __attribute__((swift_name("debug")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel_ *info __attribute__((swift_name("info")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel_ *warn __attribute__((swift_name("warn")));
@property (class, readonly) XNetworking_fearlesswalletLogLevel_ *error __attribute__((swift_name("error")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletLogLevel_ *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("Logger_")))
@protocol XNetworking_fearlesswalletLogger_
@required
- (void)debugMessage:(NSString *)message __attribute__((swift_name("debug(message:)")));
- (void)debugMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("debug(message:cause:)")));
- (void)errorMessage:(NSString *)message __attribute__((swift_name("error(message:)")));
- (void)errorMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("error(message:cause:)")));
- (void)infoMessage:(NSString *)message __attribute__((swift_name("info(message:)")));
- (void)infoMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("info(message:cause:)")));
- (void)traceMessage:(NSString *)message __attribute__((swift_name("trace(message:)")));
- (void)traceMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("trace(message:cause:)")));
- (void)warnMessage:(NSString *)message __attribute__((swift_name("warn(message:)")));
- (void)warnMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("warn(message:cause:)")));
@property (readonly) XNetworking_fearlesswalletLogLevel_ *level __attribute__((swift_name("level")));
@end

__attribute__((swift_name("AtomicDesc")))
@interface XNetworking_fearlesswalletAtomicDesc : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(XNetworking_fearlesswalletAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));
- (id _Nullable)prepareOp:(XNetworking_fearlesswalletAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));
@end

__attribute__((swift_name("OpDescriptor")))
@interface XNetworking_fearlesswalletOpDescriptor : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
@end

__attribute__((swift_name("AtomicOp")))
@interface XNetworking_fearlesswalletAtomicOp<__contravariant T> : XNetworking_fearlesswalletOpDescriptor
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeAffected:(T _Nullable)affected failure:(id _Nullable)failure __attribute__((swift_name("complete(affected:failure:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (id _Nullable)prepareAffected:(T _Nullable)affected __attribute__((swift_name("prepare(affected:)")));
- (BOOL)tryDecideDecision:(id _Nullable)decision __attribute__((swift_name("tryDecide(decision:)")));
@property (readonly) BOOL isDecided __attribute__((swift_name("isDecided")));
@end

__attribute__((swift_name("LockFreeLinkedListNode")))
@interface XNetworking_fearlesswalletLockFreeLinkedListNode : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addLastNode:(XNetworking_fearlesswalletLockFreeLinkedListNode *)node __attribute__((swift_name("addLast(node:)")));
- (BOOL)addLastIfNode:(XNetworking_fearlesswalletLockFreeLinkedListNode *)node condition:(XNetworking_fearlesswalletBoolean *(^)(void))condition __attribute__((swift_name("addLastIf(node:condition:)")));
- (BOOL)addLastIfPrevNode:(XNetworking_fearlesswalletLockFreeLinkedListNode *)node predicate:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletLockFreeLinkedListNode *))predicate __attribute__((swift_name("addLastIfPrev(node:predicate:)")));
- (BOOL)addLastIfPrevAndIfNode:(XNetworking_fearlesswalletLockFreeLinkedListNode *)node predicate:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletLockFreeLinkedListNode *))predicate condition:(XNetworking_fearlesswalletBoolean *(^)(void))condition __attribute__((swift_name("addLastIfPrevAndIf(node:predicate:condition:)")));
- (BOOL)addOneIfEmptyNode:(XNetworking_fearlesswalletLockFreeLinkedListNode *)node __attribute__((swift_name("addOneIfEmpty(node:)")));
- (XNetworking_fearlesswalletLockFreeLinkedListNodeAddLastDesc<XNetworking_fearlesswalletLockFreeLinkedListNode *> *)describeAddLastNode:(XNetworking_fearlesswalletLockFreeLinkedListNode *)node __attribute__((swift_name("describeAddLast(node:)")));
- (XNetworking_fearlesswalletAtomicDesc * _Nullable)describeRemove __attribute__((swift_name("describeRemove()")));
- (XNetworking_fearlesswalletLockFreeLinkedListNodeRemoveFirstDesc<XNetworking_fearlesswalletLockFreeLinkedListNode *> *)describeRemoveFirst __attribute__((swift_name("describeRemoveFirst()")));
- (void)helpRemove __attribute__((swift_name("helpRemove()")));
- (BOOL)remove __attribute__((swift_name("remove()")));
- (id _Nullable)removeFirstIfIsInstanceOf __attribute__((swift_name("removeFirstIfIsInstanceOf()")));
- (id _Nullable)removeFirstIfIsInstanceOfOrPeekIfPredicate:(XNetworking_fearlesswalletBoolean *(^)(id _Nullable))predicate __attribute__((swift_name("removeFirstIfIsInstanceOfOrPeekIf(predicate:)")));
- (XNetworking_fearlesswalletLockFreeLinkedListNode * _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@property (readonly) id next __attribute__((swift_name("next")));
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode *nextNode __attribute__((swift_name("nextNode")));
@property (readonly) id prev __attribute__((swift_name("prev")));
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode *prevNode __attribute__((swift_name("prevNode")));
@end

__attribute__((swift_name("LockFreeLinkedListHead")))
@interface XNetworking_fearlesswalletLockFreeLinkedListHead : XNetworking_fearlesswalletLockFreeLinkedListNode
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletKotlinNothing *)describeRemove __attribute__((swift_name("describeRemove()")));
- (void)forEachBlock:(void (^)(XNetworking_fearlesswalletLockFreeLinkedListNode *))block __attribute__((swift_name("forEach(block:)")));
- (BOOL)remove __attribute__((swift_name("remove()")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@end

__attribute__((swift_name("LockFreeLinkedListNode.AbstractAtomicDesc")))
@interface XNetworking_fearlesswalletLockFreeLinkedListNodeAbstractAtomicDesc : XNetworking_fearlesswalletAtomicDesc
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(XNetworking_fearlesswalletAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)failureAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("failure(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)onPrepareAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("onPrepare(affected:next:)")));
- (id _Nullable)prepareOp:(XNetworking_fearlesswalletAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletLockFreeLinkedListNode *)takeAffectedNodeOp:(XNetworking_fearlesswalletOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id)updatedNextAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@end

__attribute__((swift_name("LockFreeLinkedListNodeAddLastDesc")))
@interface XNetworking_fearlesswalletLockFreeLinkedListNodeAddLastDesc<T> : XNetworking_fearlesswalletLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(XNetworking_fearlesswalletLockFreeLinkedListNode *)queue node:(T)node __attribute__((swift_name("init(queue:node:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)onPrepareAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("onPrepare(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletLockFreeLinkedListNode *)takeAffectedNodeOp:(XNetworking_fearlesswalletOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id)updatedNextAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) T node __attribute__((swift_name("node")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode *originalNext __attribute__((swift_name("originalNext")));
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@end

__attribute__((swift_name("LockFreeLinkedListNodeRemoveFirstDesc")))
@interface XNetworking_fearlesswalletLockFreeLinkedListNodeRemoveFirstDesc<T> : XNetworking_fearlesswalletLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(XNetworking_fearlesswalletLockFreeLinkedListNode *)queue __attribute__((swift_name("init(queue:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)failureAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("failure(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)onPrepareAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("onPrepare(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletLockFreeLinkedListNode *)takeAffectedNodeOp:(XNetworking_fearlesswalletOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id)updatedNextAffected:(XNetworking_fearlesswalletLockFreeLinkedListNode *)affected next:(XNetworking_fearlesswalletLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)validatePreparedNode:(T _Nullable)node __attribute__((swift_name("validatePrepared(node:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@property (readonly) T _Nullable result __attribute__((swift_name("result")));
@end

__attribute__((swift_name("NetworkAddress")))
@interface XNetworking_fearlesswalletNetworkAddress : XNetworking_fearlesswalletBase
- (instancetype)initWithHostname:(NSString *)hostname port:(int32_t)port explicitAddress:(id _Nullable)explicitAddress __attribute__((swift_name("init(hostname:port:explicitAddress:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property id explicitAddress __attribute__((swift_name("explicitAddress")));
@property (readonly) NSString *hostname __attribute__((swift_name("hostname")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UnresolvedAddressException")))
@interface XNetworking_fearlesswalletUnresolvedAddressException : XNetworking_fearlesswalletKotlinIllegalArgumentException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("ChannelIOException")))
@interface XNetworking_fearlesswalletChannelIOException : XNetworking_fearlesswalletIOException
- (instancetype)initWithMessage:(NSString *)message exception:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("init(message:exception:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelReadException")))
@interface XNetworking_fearlesswalletChannelReadException : XNetworking_fearlesswalletChannelIOException
- (instancetype)initWithMessage:(NSString *)message exception:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("init(message:exception:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelWriteException")))
@interface XNetworking_fearlesswalletChannelWriteException : XNetworking_fearlesswalletChannelIOException
- (instancetype)initWithMessage:(NSString *)message exception:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("init(message:exception:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("ConversionService")))
@protocol XNetworking_fearlesswalletConversionService
@required
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(XNetworking_fearlesswalletTypeInfo *)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataConversion_")))
@interface XNetworking_fearlesswalletDataConversion_ : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletConversionService>
- (instancetype)initWithConfiguration:(XNetworking_fearlesswalletDataConversion_Configuration *)configuration __attribute__((swift_name("init(configuration:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(XNetworking_fearlesswalletTypeInfo *)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataConversion_.Configuration")))
@interface XNetworking_fearlesswalletDataConversion_Configuration : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)convertConfigure:(void (^)(XNetworking_fearlesswalletDelegatingConversionServiceConfiguration<id> *))configure __attribute__((swift_name("convert(configure:)")));
- (void)convertType:(id<XNetworking_fearlesswalletKotlinKClass>)type convertor:(id<XNetworking_fearlesswalletConversionService>)convertor __attribute__((swift_name("convert(type:convertor:)")));
- (void)convertType:(id<XNetworking_fearlesswalletKotlinKType>)type configure:(void (^)(XNetworking_fearlesswalletDelegatingConversionServiceConfiguration<id> *))configure __attribute__((swift_name("convert(type:configure:)")));
@end

__attribute__((swift_name("DataConversionException")))
@interface XNetworking_fearlesswalletDataConversionException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultConversionService")))
@interface XNetworking_fearlesswalletDefaultConversionService : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletConversionService>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)defaultConversionService __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletDefaultConversionService *shared __attribute__((swift_name("shared")));
- (id)fromValueValue:(NSString *)value klass:(id<XNetworking_fearlesswalletKotlinKClass>)klass __attribute__((swift_name("fromValue(value:klass:)")));
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(XNetworking_fearlesswalletTypeInfo *)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DelegatingConversionService")))
@interface XNetworking_fearlesswalletDelegatingConversionService : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletConversionService>
- (instancetype)initWithKlass:(id<XNetworking_fearlesswalletKotlinKClass>)klass decoder:(id _Nullable (^ _Nullable)(NSArray<NSString *> *))decoder encoder:(NSArray<NSString *> *(^ _Nullable)(id _Nullable))encoder __attribute__((swift_name("init(klass:decoder:encoder:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)fromValuesValues:(NSArray<NSString *> *)values type:(XNetworking_fearlesswalletTypeInfo *)type __attribute__((swift_name("fromValues(values:type:)")));
- (NSArray<NSString *> *)toValuesValue:(id _Nullable)value __attribute__((swift_name("toValues(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DelegatingConversionServiceConfiguration")))
@interface XNetworking_fearlesswalletDelegatingConversionServiceConfiguration<T> : XNetworking_fearlesswalletBase
- (void)decodeConverter:(T (^)(NSArray<NSString *> *))converter __attribute__((swift_name("decode(converter:)")));
- (void)encodeConverter:(NSArray<NSString *> *(^)(T))converter __attribute__((swift_name("encode(converter:)")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinCoroutineContext")))
@protocol XNetworking_fearlesswalletKotlinCoroutineContext
@required
- (id _Nullable)foldInitial:(id _Nullable)initial operation:(id _Nullable (^)(id _Nullable, id<XNetworking_fearlesswalletKotlinCoroutineContextElement>))operation __attribute__((swift_name("fold(initial:operation:)")));
- (id<XNetworking_fearlesswalletKotlinCoroutineContextElement> _Nullable)getKey_:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("get(key_:)")));
- (id<XNetworking_fearlesswalletKotlinCoroutineContext>)minusKeyKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("minusKey(key:)")));
- (id<XNetworking_fearlesswalletKotlinCoroutineContext>)plusContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("plus(context:)")));
@end

__attribute__((swift_name("KotlinCoroutineContextElement")))
@protocol XNetworking_fearlesswalletKotlinCoroutineContextElement <XNetworking_fearlesswalletKotlinCoroutineContext>
@required
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextElement")))
@interface XNetworking_fearlesswalletKotlinAbstractCoroutineContextElement : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinCoroutineContextElement>
- (instancetype)initWithKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginName")))
@interface XNetworking_fearlesswalletPluginName : XNetworking_fearlesswalletKotlinAbstractCoroutineContextElement
- (instancetype)initWithPluginName:(NSString *)pluginName __attribute__((swift_name("init(pluginName:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletPluginNameKey *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletPluginName *)doCopyPluginName:(NSString *)pluginName __attribute__((swift_name("doCopy(pluginName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *pluginName __attribute__((swift_name("pluginName")));
@end

__attribute__((swift_name("KotlinCoroutineContextKey")))
@protocol XNetworking_fearlesswalletKotlinCoroutineContextKey
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginName.Key")))
@interface XNetworking_fearlesswalletPluginNameKey : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPluginNameKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginTraceElement")))
@interface XNetworking_fearlesswalletPluginTraceElement : XNetworking_fearlesswalletBase
- (instancetype)initWithPluginName:(NSString *)pluginName handler:(NSString *)handler event:(XNetworking_fearlesswalletPluginTraceElementPluginEvent *)event __attribute__((swift_name("init(pluginName:handler:event:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletPluginTraceElement *)doCopyPluginName:(NSString *)pluginName handler:(NSString *)handler event:(XNetworking_fearlesswalletPluginTraceElementPluginEvent *)event __attribute__((swift_name("doCopy(pluginName:handler:event:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletPluginTraceElementPluginEvent *event __attribute__((swift_name("event")));
@property (readonly) NSString *handler __attribute__((swift_name("handler")));
@property (readonly) NSString *pluginName __attribute__((swift_name("pluginName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginTraceElement.PluginEvent")))
@interface XNetworking_fearlesswalletPluginTraceElementPluginEvent : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletPluginTraceElementPluginEvent *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletPluginTraceElementPluginEvent *started __attribute__((swift_name("started")));
@property (class, readonly) XNetworking_fearlesswalletPluginTraceElementPluginEvent *finished __attribute__((swift_name("finished")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletPluginTraceElementPluginEvent *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginsTrace")))
@interface XNetworking_fearlesswalletPluginsTrace : XNetworking_fearlesswalletKotlinAbstractCoroutineContextElement
- (instancetype)initWithEventOrder:(NSMutableArray<XNetworking_fearlesswalletPluginTraceElement *> *)eventOrder __attribute__((swift_name("init(eventOrder:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletPluginsTraceKey *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletPluginsTrace *)doCopyEventOrder:(NSMutableArray<XNetworking_fearlesswalletPluginTraceElement *> *)eventOrder __attribute__((swift_name("doCopy(eventOrder:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<XNetworking_fearlesswalletPluginTraceElement *> *eventOrder __attribute__((swift_name("eventOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginsTrace.Key")))
@interface XNetworking_fearlesswalletPluginsTraceKey : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPluginsTraceKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDate")))
@interface XNetworking_fearlesswalletGMTDate : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinComparable>
@property (class, readonly, getter=companion) XNetworking_fearlesswalletGMTDateCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(XNetworking_fearlesswalletGMTDate *)other __attribute__((swift_name("compareTo(other:)")));
- (XNetworking_fearlesswalletGMTDate *)doCopySeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfWeek:(XNetworking_fearlesswalletWeekDay *)dayOfWeek dayOfMonth:(int32_t)dayOfMonth dayOfYear:(int32_t)dayOfYear month:(XNetworking_fearlesswalletMonth *)month year:(int32_t)year timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(seconds:minutes:hours:dayOfWeek:dayOfMonth:dayOfYear:month:year:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t dayOfMonth __attribute__((swift_name("dayOfMonth")));
@property (readonly) XNetworking_fearlesswalletWeekDay *dayOfWeek __attribute__((swift_name("dayOfWeek")));
@property (readonly) int32_t dayOfYear __attribute__((swift_name("dayOfYear")));
@property (readonly) int32_t hours __attribute__((swift_name("hours")));
@property (readonly) int32_t minutes __attribute__((swift_name("minutes")));
@property (readonly) XNetworking_fearlesswalletMonth *month __attribute__((swift_name("month")));
@property (readonly) int32_t seconds __attribute__((swift_name("seconds")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) int32_t year __attribute__((swift_name("year")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDate.Companion")))
@interface XNetworking_fearlesswalletGMTDateCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletGMTDateCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletGMTDate *START __attribute__((swift_name("START")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDateParser")))
@interface XNetworking_fearlesswalletGMTDateParser : XNetworking_fearlesswalletBase
- (instancetype)initWithPattern:(NSString *)pattern __attribute__((swift_name("init(pattern:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletGMTDateParserCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletGMTDate *)parseDateString:(NSString *)dateString __attribute__((swift_name("parse(dateString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GMTDateParser.Companion")))
@interface XNetworking_fearlesswalletGMTDateParserCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletGMTDateParserCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) unichar ANY __attribute__((swift_name("ANY")));
@property (readonly) unichar DAY_OF_MONTH __attribute__((swift_name("DAY_OF_MONTH")));
@property (readonly) unichar HOURS __attribute__((swift_name("HOURS")));
@property (readonly) unichar MINUTES __attribute__((swift_name("MINUTES")));
@property (readonly) unichar MONTH __attribute__((swift_name("MONTH")));
@property (readonly) unichar SECONDS __attribute__((swift_name("SECONDS")));
@property (readonly) unichar YEAR __attribute__((swift_name("YEAR")));
@property (readonly) unichar ZONE __attribute__((swift_name("ZONE")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvalidDateStringException")))
@interface XNetworking_fearlesswalletInvalidDateStringException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithData:(NSString *)data at:(int32_t)at pattern:(NSString *)pattern __attribute__((swift_name("init(data:at:pattern:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Month")))
@interface XNetworking_fearlesswalletMonth : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletMonth *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletMonthCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) XNetworking_fearlesswalletMonth *january __attribute__((swift_name("january")));
@property (class, readonly) XNetworking_fearlesswalletMonth *february __attribute__((swift_name("february")));
@property (class, readonly) XNetworking_fearlesswalletMonth *march __attribute__((swift_name("march")));
@property (class, readonly) XNetworking_fearlesswalletMonth *april __attribute__((swift_name("april")));
@property (class, readonly) XNetworking_fearlesswalletMonth *may __attribute__((swift_name("may")));
@property (class, readonly) XNetworking_fearlesswalletMonth *june __attribute__((swift_name("june")));
@property (class, readonly) XNetworking_fearlesswalletMonth *july __attribute__((swift_name("july")));
@property (class, readonly) XNetworking_fearlesswalletMonth *august __attribute__((swift_name("august")));
@property (class, readonly) XNetworking_fearlesswalletMonth *september __attribute__((swift_name("september")));
@property (class, readonly) XNetworking_fearlesswalletMonth *october __attribute__((swift_name("october")));
@property (class, readonly) XNetworking_fearlesswalletMonth *november __attribute__((swift_name("november")));
@property (class, readonly) XNetworking_fearlesswalletMonth *december __attribute__((swift_name("december")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletMonth *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Month.Companion")))
@interface XNetworking_fearlesswalletMonthCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletMonthCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletMonth *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (XNetworking_fearlesswalletMonth *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeekDay")))
@interface XNetworking_fearlesswalletWeekDay : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletWeekDay *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletWeekDayCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) XNetworking_fearlesswalletWeekDay *monday __attribute__((swift_name("monday")));
@property (class, readonly) XNetworking_fearlesswalletWeekDay *tuesday __attribute__((swift_name("tuesday")));
@property (class, readonly) XNetworking_fearlesswalletWeekDay *wednesday __attribute__((swift_name("wednesday")));
@property (class, readonly) XNetworking_fearlesswalletWeekDay *thursday __attribute__((swift_name("thursday")));
@property (class, readonly) XNetworking_fearlesswalletWeekDay *friday __attribute__((swift_name("friday")));
@property (class, readonly) XNetworking_fearlesswalletWeekDay *saturday __attribute__((swift_name("saturday")));
@property (class, readonly) XNetworking_fearlesswalletWeekDay *sunday __attribute__((swift_name("sunday")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletWeekDay *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeekDay.Companion")))
@interface XNetworking_fearlesswalletWeekDayCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletWeekDayCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletWeekDay *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (XNetworking_fearlesswalletWeekDay *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvalidPhaseException")))
@interface XNetworking_fearlesswalletInvalidPhaseException : XNetworking_fearlesswalletKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("PipelineContext")))
@interface XNetworking_fearlesswalletPipelineContext<TSubject, TContext> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCoroutineScope>
- (instancetype)initWithContext:(TContext)context __attribute__((swift_name("init(context:)"))) __attribute__((objc_designated_initializer));
- (void)finish __attribute__((swift_name("finish()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)proceedWithCompletionHandler:(void (^)(TSubject _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proceed(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)proceedWithSubject:(TSubject)subject completionHandler:(void (^)(TSubject _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("proceedWith(subject:completionHandler:)")));
@property (readonly) TContext context __attribute__((swift_name("context")));
@property TSubject subject __attribute__((swift_name("subject")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PipelinePhase")))
@interface XNetworking_fearlesswalletPipelinePhase : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TypeInfo")))
@interface XNetworking_fearlesswalletTypeInfo : XNetworking_fearlesswalletBase
- (instancetype)initWithType:(id<XNetworking_fearlesswalletKotlinKClass>)type reifiedType:(id<XNetworking_fearlesswalletKotlinKType>)reifiedType kotlinType:(id<XNetworking_fearlesswalletKotlinKType> _Nullable)kotlinType __attribute__((swift_name("init(type:reifiedType:kotlinType:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletTypeInfo *)doCopyType:(id<XNetworking_fearlesswalletKotlinKClass>)type reifiedType:(id<XNetworking_fearlesswalletKotlinKType>)reifiedType kotlinType:(id<XNetworking_fearlesswalletKotlinKType> _Nullable)kotlinType __attribute__((swift_name("doCopy(type:reifiedType:kotlinType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKType> _Nullable kotlinType __attribute__((swift_name("kotlinType")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKType> reifiedType __attribute__((swift_name("reifiedType")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKClass> type __attribute__((swift_name("type")));
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("ConcurrentMap")))
@interface XNetworking_fearlesswalletConcurrentMap : NSObject
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CopyOnWriteHashMap")))
@interface XNetworking_fearlesswalletCopyOnWriteHashMap<K, V> : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (V)computeIfAbsentKey:(K)key producer:(V (^)(K))producer __attribute__((swift_name("computeIfAbsent(key:producer:)")));
- (V _Nullable)getKey:(K)key __attribute__((swift_name("get(key:)")));
- (V _Nullable)putKey:(K)key value:(V)value __attribute__((swift_name("put(key:value:)")));
- (V _Nullable)removeKey:(K)key __attribute__((swift_name("remove(key:)")));
- (void)setKey:(K)key value:(V)value __attribute__((swift_name("set(key:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockFreeMPSCQueue")))
@interface XNetworking_fearlesswalletLockFreeMPSCQueue<E> : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)addLastElement:(E)element __attribute__((swift_name("addLast(element:)")));
- (void)close __attribute__((swift_name("close()")));
- (E _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
@property (readonly) BOOL isClosed __attribute__((swift_name("isClosed")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@end

__attribute__((swift_name("ByteReadChannel")))
@protocol XNetworking_fearlesswalletByteReadChannel
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitContentWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("awaitContent(completionHandler:)")));
- (BOOL)cancelCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardMax:(int64_t)max completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(max:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)peekToDestination:(XNetworking_fearlesswalletMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(XNetworking_fearlesswalletChunkBuffer *)dst completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler:)")));
- (int32_t)readAvailableMin:(int32_t)min block:(void (^)(XNetworking_fearlesswalletBuffer *))block __attribute__((swift_name("readAvailable(min:block:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBooleanWithCompletionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBoolean(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readByteWithCompletionHandler:(void (^)(XNetworking_fearlesswalletByte * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readByte(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readDoubleWithCompletionHandler:(void (^)(XNetworking_fearlesswalletDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFloatWithCompletionHandler:(void (^)(XNetworking_fearlesswalletFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(XNetworking_fearlesswalletChunkBuffer *)dst n:(int32_t)n completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:n:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readIntWithCompletionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readLongWithCompletionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPacketSize:(int32_t)size completionHandler:(void (^)(XNetworking_fearlesswalletByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readPacket(size:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readRemainingLimit:(int64_t)limit completionHandler:(void (^)(XNetworking_fearlesswalletByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(limit:completionHandler:)")));
- (void)readSessionConsumer:(void (^)(id<XNetworking_fearlesswalletReadSession>))consumer __attribute__((swift_name("readSession(consumer:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readShortWithCompletionHandler:(void (^)(XNetworking_fearlesswalletShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readSuspendableSessionConsumer:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)consumer completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readSuspendableSession(consumer:completionHandler:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineLimit:(int32_t)limit completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineToOut:(id<XNetworking_fearlesswalletKotlinAppendable>)out limit:(int32_t)limit completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(out:limit:completionHandler:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForRead __attribute__((swift_name("isClosedForRead")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));
@property (readonly) int64_t totalBytesRead __attribute__((swift_name("totalBytesRead")));
@end

__attribute__((swift_name("ByteWriteChannel")))
@protocol XNetworking_fearlesswalletByteWriteChannel
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitFreeSpaceWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("awaitFreeSpace(completionHandler:)")));
- (BOOL)closeCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (void)flush __attribute__((swift_name("flush()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(XNetworking_fearlesswalletChunkBuffer *)src completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(XNetworking_fearlesswalletKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler:)")));
- (int32_t)writeAvailableMin:(int32_t)min block:(void (^)(XNetworking_fearlesswalletBuffer *))block __attribute__((swift_name("writeAvailable(min:block:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(void *)src offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(void *)src offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeByteB:(int8_t)b completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeByte(b:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeDoubleD:(double)d completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeDouble(d:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFloatF:(float)f completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloat(f:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullyMemory:(XNetworking_fearlesswalletMemory *)memory startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(memory:startIndex:endIndex:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(XNetworking_fearlesswalletBuffer *)src completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(void *)src offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(void *)src offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeIntI:(int32_t)i completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(i:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeLongL:(int64_t)l completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeLong(l:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writePacketPacket:(XNetworking_fearlesswalletByteReadPacket *)packet completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writePacket(packet:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeShortS:(int16_t)s completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(s:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeSuspendSessionVisitor:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)visitor completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeSuspendSession(visitor:completionHandler:)"))) __attribute__((deprecated("Use write { } instead.")));
@property (readonly) BOOL autoFlush __attribute__((swift_name("autoFlush")));
@property (readonly) int32_t availableForWrite __attribute__((swift_name("availableForWrite")));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));
@property (readonly) int64_t totalBytesWritten __attribute__((swift_name("totalBytesWritten")));
@end

__attribute__((swift_name("ByteChannel")))
@protocol XNetworking_fearlesswalletByteChannel <XNetworking_fearlesswalletByteReadChannel, XNetworking_fearlesswalletByteWriteChannel>
@required
- (void)attachJobJob:(id<XNetworking_fearlesswalletJob>)job __attribute__((swift_name("attachJob(job:)")));
@end

__attribute__((swift_name("ReadSession")))
@protocol XNetworking_fearlesswalletReadSession
@required
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (XNetworking_fearlesswalletChunkBuffer * _Nullable)requestAtLeast:(int32_t)atLeast __attribute__((swift_name("request(atLeast:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@end

__attribute__((swift_name("SuspendableReadSession")))
@protocol XNetworking_fearlesswalletSuspendableReadSession <XNetworking_fearlesswalletReadSession>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitAtLeast:(int32_t)atLeast completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("await(atLeast:completionHandler:)")));
@end

__attribute__((swift_name("ByteChannelSequentialBase")))
@interface XNetworking_fearlesswalletByteChannelSequentialBase : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletByteChannel, XNetworking_fearlesswalletByteReadChannel, XNetworking_fearlesswalletByteWriteChannel, XNetworking_fearlesswalletSuspendableReadSession>
- (instancetype)initWithInitial:(XNetworking_fearlesswalletChunkBuffer *)initial autoFlush:(BOOL)autoFlush pool:(id<XNetworking_fearlesswalletObjectPool>)pool __attribute__((swift_name("init(initial:autoFlush:pool:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)afterReadCount:(int32_t)count __attribute__((swift_name("afterRead(count:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)afterWriteCount:(int32_t)count __attribute__((swift_name("afterWrite(count:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitAtLeast:(int32_t)atLeast completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("await(atLeast:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitContentWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("awaitContent(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitFreeSpaceWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("awaitFreeSpace(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)awaitSuspendAtLeast:(int32_t)atLeast completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitSuspend(atLeast:completionHandler:)")));
- (id<XNetworking_fearlesswalletWriterSuspendSession>)beginWriteSession __attribute__((swift_name("beginWriteSession()")));
- (BOOL)cancelCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));
- (BOOL)closeCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardMax:(int64_t)max completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(max:completionHandler:)")));
- (void)endReadSession __attribute__((swift_name("endReadSession()")));
- (void)endWriteSessionWritten:(int32_t)written __attribute__((swift_name("endWriteSession(written:)")));
- (void)flush __attribute__((swift_name("flush()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)peekToDestination:(XNetworking_fearlesswalletMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:completionHandler:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)prepareFlushedBytes __attribute__((swift_name("prepareFlushedBytes()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(XNetworking_fearlesswalletChunkBuffer *)dst completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)readAvailableClosed __attribute__((swift_name("readAvailableClosed()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBooleanWithCompletionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBoolean(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readByteWithCompletionHandler:(void (^)(XNetworking_fearlesswalletByte * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readByte(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readDoubleWithCompletionHandler:(void (^)(XNetworking_fearlesswalletDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFloatWithCompletionHandler:(void (^)(XNetworking_fearlesswalletFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(XNetworking_fearlesswalletChunkBuffer *)dst n:(int32_t)n completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:n:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readIntWithCompletionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readLongWithCompletionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPacketSize:(int32_t)size completionHandler:(void (^)(XNetworking_fearlesswalletByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readPacket(size:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readRemainingLimit:(int64_t)limit completionHandler:(void (^)(XNetworking_fearlesswalletByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(limit:completionHandler:)")));
- (void)readSessionConsumer:(void (^)(id<XNetworking_fearlesswalletReadSession>))consumer __attribute__((swift_name("readSession(consumer:)"))) __attribute__((deprecated("Use read instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readShortWithCompletionHandler:(void (^)(XNetworking_fearlesswalletShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readSuspendableSessionConsumer:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)consumer completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readSuspendableSession(consumer:completionHandler:)"))) __attribute__((deprecated("Use read instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineLimit:(int32_t)limit completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineToOut:(id<XNetworking_fearlesswalletKotlinAppendable>)out limit:(int32_t)limit completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(out:limit:completionHandler:)")));
- (XNetworking_fearlesswalletChunkBuffer * _Nullable)requestAtLeast:(int32_t)atLeast __attribute__((swift_name("request(atLeast:)")));
- (id<XNetworking_fearlesswalletSuspendableReadSession>)startReadSession __attribute__((swift_name("startReadSession()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(XNetworking_fearlesswalletChunkBuffer *)src completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeAvailableSrc:(XNetworking_fearlesswalletKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(src:offset:length:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeByteB:(int8_t)b completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeByte(b:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeDoubleD:(double)d completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeDouble(d:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFloatF:(float)f completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloat(f:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullyMemory:(XNetworking_fearlesswalletMemory *)memory startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(memory:startIndex:endIndex:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(XNetworking_fearlesswalletBuffer *)src completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinByteArray *)src offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(src:offset:length:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeIntI:(int32_t)i completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(i:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeLongL:(int64_t)l completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeLong(l:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writePacketPacket:(XNetworking_fearlesswalletByteReadPacket *)packet completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writePacket(packet:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeShortS:(int16_t)s completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(s:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)writeSuspendSessionVisitor:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)visitor completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeSuspendSession(visitor:completionHandler:)"))) __attribute__((deprecated("Use write { } instead.")));
@property (readonly) BOOL autoFlush __attribute__((swift_name("autoFlush")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@property (readonly) int32_t availableForWrite __attribute__((swift_name("availableForWrite")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property BOOL closed __attribute__((swift_name("closed")));
@property XNetworking_fearlesswalletKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForRead __attribute__((swift_name("isClosedForRead")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletByteReadPacket *readable __attribute__((swift_name("readable")));
@property (readonly) int64_t totalBytesRead __attribute__((swift_name("totalBytesRead")));
@property (readonly) int64_t totalBytesWritten __attribute__((swift_name("totalBytesWritten")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletBytePacketBuilder *writable __attribute__((swift_name("writable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadChannelCompanion")))
@interface XNetworking_fearlesswalletByteReadChannelCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletByteReadChannelCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) id<XNetworking_fearlesswalletByteReadChannel> Empty __attribute__((swift_name("Empty")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
__attribute__((swift_name("KotlinCancellationException")))
@interface XNetworking_fearlesswalletKotlinCancellationException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClosedWriteChannelException")))
@interface XNetworking_fearlesswalletClosedWriteChannelException : XNetworking_fearlesswalletKotlinCancellationException
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("Job")))
@protocol XNetworking_fearlesswalletJob <XNetworking_fearlesswalletKotlinCoroutineContextElement>
@required
- (id<XNetworking_fearlesswalletChildHandle>)attachChildChild:(id<XNetworking_fearlesswalletChildJob>)child __attribute__((swift_name("attachChild(child:)")));
- (void)cancelCause_:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (XNetworking_fearlesswalletKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()")));
- (id<XNetworking_fearlesswalletDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)")));
- (id<XNetworking_fearlesswalletDisposableHandle>)invokeOnCompletionHandler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)")));
- (id<XNetworking_fearlesswalletJob>)plusOther:(id<XNetworking_fearlesswalletJob>)other __attribute__((swift_name("plus(other:)"))) __attribute__((unavailable("Operator '+' on two Job objects is meaningless. Job is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The job to the right of `+` just replaces the job the left of `+`.")));
- (BOOL)start __attribute__((swift_name("start()")));
@property (readonly) id<XNetworking_fearlesswalletKotlinSequence> children __attribute__((swift_name("children")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause0> onJoin __attribute__((swift_name("onJoin")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
@property (readonly) id<XNetworking_fearlesswalletJob> _Nullable parent __attribute__((swift_name("parent")));
@end

__attribute__((swift_name("ReaderJob")))
@protocol XNetworking_fearlesswalletReaderJob <XNetworking_fearlesswalletJob>
@required
@property (readonly) id<XNetworking_fearlesswalletByteWriteChannel> channel __attribute__((swift_name("channel")));
@end

__attribute__((swift_name("ReaderScope")))
@protocol XNetworking_fearlesswalletReaderScope <XNetworking_fearlesswalletCoroutineScope>
@required
@property (readonly) id<XNetworking_fearlesswalletByteReadChannel> channel __attribute__((swift_name("channel")));
@end

__attribute__((swift_name("WriterJob")))
@protocol XNetworking_fearlesswalletWriterJob <XNetworking_fearlesswalletJob>
@required
@property (readonly) id<XNetworking_fearlesswalletByteReadChannel> channel __attribute__((swift_name("channel")));
@end

__attribute__((swift_name("WriterScope")))
@protocol XNetworking_fearlesswalletWriterScope <XNetworking_fearlesswalletCoroutineScope>
@required
@property (readonly) id<XNetworking_fearlesswalletByteWriteChannel> channel __attribute__((swift_name("channel")));
@end

__attribute__((swift_name("WriterSession")))
@protocol XNetworking_fearlesswalletWriterSession
@required
- (void)flush __attribute__((swift_name("flush()")));
- (XNetworking_fearlesswalletChunkBuffer * _Nullable)requestMin:(int32_t)min __attribute__((swift_name("request(min:)")));
- (void)writtenN:(int32_t)n __attribute__((swift_name("written(n:)")));
@end

__attribute__((swift_name("WriterSuspendSession")))
@protocol XNetworking_fearlesswalletWriterSuspendSession <XNetworking_fearlesswalletWriterSession>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryAwaitN:(int32_t)n completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("tryAwait(n:completionHandler:)")));
@end

__attribute__((swift_name("Allocator")))
@protocol XNetworking_fearlesswalletAllocator
@required
- (XNetworking_fearlesswalletMemory *)doAllocSize:(int32_t)size __attribute__((swift_name("doAlloc(size:)")));
- (XNetworking_fearlesswalletMemory *)doAllocSize_:(int64_t)size __attribute__((swift_name("doAlloc(size_:)")));
- (void)freeInstance:(XNetworking_fearlesswalletMemory *)instance __attribute__((swift_name("free(instance:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Memory")))
@interface XNetworking_fearlesswalletMemory : XNetworking_fearlesswalletBase
- (instancetype)initWithPointer:(void *)pointer size:(int64_t)size __attribute__((swift_name("init(pointer:size:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletMemoryCompanion *companion __attribute__((swift_name("companion")));
- (void)doCopyToDestination:(XNetworking_fearlesswalletMemory *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset:)")));
- (void)doCopyToDestination:(XNetworking_fearlesswalletMemory *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset_:)")));
- (int8_t)loadAtIndex:(int32_t)index __attribute__((swift_name("loadAt(index:)")));
- (int8_t)loadAtIndex_:(int64_t)index __attribute__((swift_name("loadAt(index_:)")));
- (XNetworking_fearlesswalletMemory *)sliceOffset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("slice(offset:length:)")));
- (XNetworking_fearlesswalletMemory *)sliceOffset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("slice(offset:length_:)")));
- (void)storeAtIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("storeAt(index:value:)")));
- (void)storeAtIndex:(int64_t)index value_:(int8_t)value __attribute__((swift_name("storeAt(index:value_:)")));
@property (readonly) void *pointer __attribute__((swift_name("pointer")));
@property (readonly) int64_t size __attribute__((swift_name("size")));
@property (readonly) int32_t size32 __attribute__((swift_name("size32")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Memory.Companion")))
@interface XNetworking_fearlesswalletMemoryCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletMemoryCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletMemory *Empty __attribute__((swift_name("Empty")));
@end

__attribute__((swift_name("Buffer")))
@interface XNetworking_fearlesswalletBuffer : XNetworking_fearlesswalletBase
- (instancetype)initWithMemory:(XNetworking_fearlesswalletMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletBufferCompanion *companion __attribute__((swift_name("companion")));
- (void)commitWrittenCount:(int32_t)count __attribute__((swift_name("commitWritten(count:)")));
- (void)discardExactCount:(int32_t)count __attribute__((swift_name("discardExact(count:)")));
- (XNetworking_fearlesswalletBuffer *)duplicate __attribute__((swift_name("duplicate()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)duplicateToCopy:(XNetworking_fearlesswalletBuffer *)copy __attribute__((swift_name("duplicateTo(copy:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (void)reserveEndGapEndGap:(int32_t)endGap __attribute__((swift_name("reserveEndGap(endGap:)")));
- (void)reserveStartGapStartGap:(int32_t)startGap __attribute__((swift_name("reserveStartGap(startGap:)")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)resetForRead __attribute__((swift_name("resetForRead()")));
- (void)resetForWrite __attribute__((swift_name("resetForWrite()")));
- (void)resetForWriteLimit:(int32_t)limit __attribute__((swift_name("resetForWrite(limit:)")));
- (void)rewindCount:(int32_t)count __attribute__((swift_name("rewind(count:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (int32_t)tryPeekByte __attribute__((swift_name("tryPeekByte()")));
- (int32_t)tryReadByte __attribute__((swift_name("tryReadByte()")));
- (void)writeByteValue:(int8_t)value __attribute__((swift_name("writeByte(value:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@property (readonly) int32_t endGap __attribute__((swift_name("endGap")));
@property (readonly) int32_t limit __attribute__((swift_name("limit")));
@property (readonly) XNetworking_fearlesswalletMemory *memory __attribute__((swift_name("memory")));
@property (readonly) int32_t readPosition __attribute__((swift_name("readPosition")));
@property (readonly) int32_t readRemaining __attribute__((swift_name("readRemaining")));
@property (readonly) int32_t startGap __attribute__((swift_name("startGap")));
@property (readonly) int32_t writePosition __attribute__((swift_name("writePosition")));
@property (readonly) int32_t writeRemaining __attribute__((swift_name("writeRemaining")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Buffer.Companion")))
@interface XNetworking_fearlesswalletBufferCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) int32_t ReservedSize __attribute__((swift_name("ReservedSize")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BufferLimitExceededException")))
@interface XNetworking_fearlesswalletBufferLimitExceededException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrder")))
@interface XNetworking_fearlesswalletByteOrder : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletByteOrder *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletByteOrderCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) XNetworking_fearlesswalletByteOrder *bigEndian __attribute__((swift_name("bigEndian")));
@property (class, readonly) XNetworking_fearlesswalletByteOrder *littleEndian __attribute__((swift_name("littleEndian")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletByteOrder *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrder.Companion")))
@interface XNetworking_fearlesswalletByteOrderCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletByteOrderCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletByteOrder *)nativeOrder __attribute__((swift_name("nativeOrder()")));
@end

__attribute__((swift_name("KotlinAppendable")))
@protocol XNetworking_fearlesswalletKotlinAppendable
@required
- (id<XNetworking_fearlesswalletKotlinAppendable>)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (id<XNetworking_fearlesswalletKotlinAppendable>)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (id<XNetworking_fearlesswalletKotlinAppendable>)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
@end

__attribute__((swift_name("Output")))
@interface XNetworking_fearlesswalletOutput : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinAppendable, XNetworking_fearlesswalletCloseable>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithPool:(id<XNetworking_fearlesswalletObjectPool>)pool __attribute__((swift_name("init(pool:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletOutput *)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (id<XNetworking_fearlesswalletKotlinAppendable>)appendCsq:(XNetworking_fearlesswalletKotlinCharArray *)csq start:(int32_t)start end:(int32_t)end __attribute__((swift_name("append(csq:start:end:)")));
- (XNetworking_fearlesswalletOutput *)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (XNetworking_fearlesswalletOutput *)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
- (void)close __attribute__((swift_name("close()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeDestination __attribute__((swift_name("closeDestination()")));
- (void)flush __attribute__((swift_name("flush()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)flushSource:(XNetworking_fearlesswalletMemory *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("flush(source:offset:length:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (void)writeByteV:(int8_t)v __attribute__((swift_name("writeByte(v:)")));
- (void)writePacketPacket:(XNetworking_fearlesswalletByteReadPacket *)packet __attribute__((swift_name("writePacket(packet:)")));
- (void)writePacketP:(XNetworking_fearlesswalletByteReadPacket *)p n:(int32_t)n __attribute__((swift_name("writePacket(p:n:)")));
- (void)writePacketP:(XNetworking_fearlesswalletByteReadPacket *)p n_:(int64_t)n __attribute__((swift_name("writePacket(p:n_:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) int32_t _size __attribute__((swift_name("_size")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) id<XNetworking_fearlesswalletObjectPool> pool __attribute__((swift_name("pool")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BytePacketBuilder")))
@interface XNetworking_fearlesswalletBytePacketBuilder : XNetworking_fearlesswalletOutput
- (instancetype)initWithPool:(id<XNetworking_fearlesswalletObjectPool>)pool __attribute__((swift_name("init(pool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (XNetworking_fearlesswalletBytePacketBuilder *)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (XNetworking_fearlesswalletBytePacketBuilder *)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (XNetworking_fearlesswalletBytePacketBuilder *)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
- (XNetworking_fearlesswalletByteReadPacket *)build __attribute__((swift_name("build()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeDestination __attribute__((swift_name("closeDestination()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)flushSource:(XNetworking_fearlesswalletMemory *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("flush(source:offset:length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) BOOL isNotEmpty __attribute__((swift_name("isNotEmpty")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("Input")))
@interface XNetworking_fearlesswalletInput : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCloseable>
- (instancetype)initWithHead:(XNetworking_fearlesswalletChunkBuffer *)head remaining:(int64_t)remaining pool:(id<XNetworking_fearlesswalletObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletInputCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)canRead __attribute__((swift_name("canRead()")));
- (void)close __attribute__((swift_name("close()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (int64_t)discardN_:(int64_t)n __attribute__((swift_name("discard(n_:)")));
- (void)discardExactN:(int32_t)n __attribute__((swift_name("discardExact(n:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)fillDestination:(XNetworking_fearlesswalletMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (BOOL)hasBytesN:(int32_t)n __attribute__((swift_name("hasBytes(n:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)markNoMoreChunksAvailable __attribute__((swift_name("markNoMoreChunksAvailable()")));
- (int64_t)peekToDestination:(XNetworking_fearlesswalletMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:)")));
- (int32_t)peekToBuffer:(XNetworking_fearlesswalletChunkBuffer *)buffer __attribute__((swift_name("peekTo(buffer:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (NSString *)readTextMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(min:max:)")));
- (int32_t)readTextOut:(id<XNetworking_fearlesswalletKotlinAppendable>)out min:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(out:min:max:)")));
- (NSString *)readTextExactExactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(exactCharacters:)")));
- (void)readTextExactOut:(id<XNetworking_fearlesswalletKotlinAppendable>)out exactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(out:exactCharacters:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (int32_t)tryPeek __attribute__((swift_name("tryPeek()")));
@property (readonly) BOOL endOfInput __attribute__((swift_name("endOfInput")));
@property (readonly) id<XNetworking_fearlesswalletObjectPool> pool __attribute__((swift_name("pool")));
@property (readonly) int64_t remaining __attribute__((swift_name("remaining")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadPacket")))
@interface XNetworking_fearlesswalletByteReadPacket : XNetworking_fearlesswalletInput
- (instancetype)initWithHead:(XNetworking_fearlesswalletChunkBuffer *)head pool:(id<XNetworking_fearlesswalletObjectPool>)pool __attribute__((swift_name("init(head:pool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithHead:(XNetworking_fearlesswalletChunkBuffer *)head remaining:(int64_t)remaining pool:(id<XNetworking_fearlesswalletObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletByteReadPacketCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (XNetworking_fearlesswalletByteReadPacket *)doCopy __attribute__((swift_name("doCopy()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)fillDestination:(XNetworking_fearlesswalletMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadPacket.Companion")))
@interface XNetworking_fearlesswalletByteReadPacketCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletByteReadPacketCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletByteReadPacket *Empty __attribute__((swift_name("Empty")));
@end

__attribute__((swift_name("ObjectPool")))
@protocol XNetworking_fearlesswalletObjectPool <XNetworking_fearlesswalletCloseable>
@required
- (id)borrow __attribute__((swift_name("borrow()")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (void)recycleInstance:(id)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end

__attribute__((swift_name("DefaultPool")))
@interface XNetworking_fearlesswalletDefaultPool<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletObjectPool>
- (instancetype)initWithCapacity:(int32_t)capacity __attribute__((swift_name("init(capacity:)"))) __attribute__((objc_designated_initializer));
- (T)borrow __attribute__((swift_name("borrow()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (T)clearInstanceInstance:(T)instance __attribute__((swift_name("clearInstance(instance:)")));
- (void)dispose_ __attribute__((swift_name("dispose()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)disposeInstanceInstance:(T)instance __attribute__((swift_name("disposeInstance(instance:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (T)produceInstance __attribute__((swift_name("produceInstance()")));
- (void)recycleInstance:(T)instance __attribute__((swift_name("recycle(instance:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateInstanceInstance:(T)instance __attribute__((swift_name("validateInstance(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletSynchronizedObject *lock __attribute__((swift_name("lock"))) __attribute__((deprecated("This API is implementation detail. Consider creating new SynchronizedObject instead")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultBufferPool")))
@interface XNetworking_fearlesswalletDefaultBufferPool : XNetworking_fearlesswalletDefaultPool<XNetworking_fearlesswalletChunkBuffer *>
- (instancetype)initWithBufferSize:(int32_t)bufferSize capacity:(int32_t)capacity allocator:(id<XNetworking_fearlesswalletAllocator>)allocator __attribute__((swift_name("init(bufferSize:capacity:allocator:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCapacity:(int32_t)capacity __attribute__((swift_name("init(capacity:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletChunkBuffer *)clearInstanceInstance:(XNetworking_fearlesswalletChunkBuffer *)instance __attribute__((swift_name("clearInstance(instance:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)disposeInstanceInstance:(XNetworking_fearlesswalletChunkBuffer *)instance __attribute__((swift_name("disposeInstance(instance:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletChunkBuffer *)produceInstance __attribute__((swift_name("produceInstance()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateInstanceInstance:(XNetworking_fearlesswalletChunkBuffer *)instance __attribute__((swift_name("validateInstance(instance:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Input.Companion")))
@interface XNetworking_fearlesswalletInputCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletInputCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InsufficientSpaceException")))
@interface XNetworking_fearlesswalletInsufficientSpaceException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithSize:(int32_t)size availableSpace:(int32_t)availableSpace __attribute__((swift_name("init(size:availableSpace:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithName:(NSString *)name size:(int32_t)size availableSpace:(int32_t)availableSpace __attribute__((swift_name("init(name:size:availableSpace:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSize:(int64_t)size availableSpace_:(int64_t)availableSpace __attribute__((swift_name("init(size:availableSpace_:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("ChunkBuffer")))
@interface XNetworking_fearlesswalletChunkBuffer : XNetworking_fearlesswalletBuffer
- (instancetype)initWithMemory:(XNetworking_fearlesswalletMemory *)memory origin:(XNetworking_fearlesswalletChunkBuffer * _Nullable)origin parentPool:(id<XNetworking_fearlesswalletObjectPool> _Nullable)parentPool __attribute__((swift_name("init(memory:origin:parentPool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMemory:(XNetworking_fearlesswalletMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletChunkBufferCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletChunkBuffer * _Nullable)cleanNext __attribute__((swift_name("cleanNext()")));
- (XNetworking_fearlesswalletChunkBuffer *)duplicate __attribute__((swift_name("duplicate()")));
- (void)releasePool:(id<XNetworking_fearlesswalletObjectPool>)pool __attribute__((swift_name("release(pool:)")));
- (void)reset __attribute__((swift_name("reset()")));
@property XNetworking_fearlesswalletChunkBuffer * _Nullable next __attribute__((swift_name("next")));
@property (readonly) XNetworking_fearlesswalletChunkBuffer * _Nullable origin __attribute__((swift_name("origin")));
@property (readonly) int32_t referenceCount __attribute__((swift_name("referenceCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChunkBuffer.Companion")))
@interface XNetworking_fearlesswalletChunkBufferCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletChunkBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletChunkBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) id<XNetworking_fearlesswalletObjectPool> EmptyPool __attribute__((swift_name("EmptyPool")));
@property (readonly) id<XNetworking_fearlesswalletObjectPool> Pool __attribute__((swift_name("Pool")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MalformedUTF8InputException")))
@interface XNetworking_fearlesswalletMalformedUTF8InputException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("NoPoolImpl")))
@interface XNetworking_fearlesswalletNoPoolImpl<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletObjectPool>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (void)recycleInstance:(T)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end

__attribute__((swift_name("SingleInstancePool")))
@interface XNetworking_fearlesswalletSingleInstancePool<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletObjectPool>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (T)borrow __attribute__((swift_name("borrow()")));
- (void)dispose_ __attribute__((swift_name("dispose()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)disposeInstanceInstance:(T)instance __attribute__((swift_name("disposeInstance(instance:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (T)produceInstance __attribute__((swift_name("produceInstance()")));
- (void)recycleInstance:(T)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end

__attribute__((swift_name("Charset")))
@interface XNetworking_fearlesswalletCharset : XNetworking_fearlesswalletBase
- (instancetype)initWith_name:(NSString *)_name __attribute__((swift_name("init(_name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletCharsetCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (XNetworking_fearlesswalletCharsetDecoder *)doNewDecoder __attribute__((swift_name("doNewDecoder()")));
- (XNetworking_fearlesswalletCharsetEncoder *)doNewEncoder __attribute__((swift_name("doNewEncoder()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Charset.Companion")))
@interface XNetworking_fearlesswalletCharsetCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCharsetCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletCharset *)forNameName:(NSString *)name __attribute__((swift_name("forName(name:)")));
- (BOOL)isSupportedCharset:(NSString *)charset __attribute__((swift_name("isSupported(charset:)")));
@end

__attribute__((swift_name("CharsetDecoder")))
@interface XNetworking_fearlesswalletCharsetDecoder : XNetworking_fearlesswalletBase
- (instancetype)initWith_charset:(XNetworking_fearlesswalletCharset *)_charset __attribute__((swift_name("init(_charset:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("CharsetEncoder")))
@interface XNetworking_fearlesswalletCharsetEncoder : XNetworking_fearlesswalletBase
- (instancetype)initWith_charset:(XNetworking_fearlesswalletCharset *)_charset __attribute__((swift_name("init(_charset:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Charsets")))
@interface XNetworking_fearlesswalletCharsets : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)charsets __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCharsets *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletCharset *ISO_8859_1 __attribute__((swift_name("ISO_8859_1")));
@property (readonly) XNetworking_fearlesswalletCharset *UTF_8 __attribute__((swift_name("UTF_8")));
@end

__attribute__((swift_name("MalformedInputException")))
@interface XNetworking_fearlesswalletMalformedInputException : XNetworking_fearlesswalletKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TooLongLineException")))
@interface XNetworking_fearlesswalletTooLongLineException : XNetworking_fearlesswalletMalformedInputException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("EOFException")))
@interface XNetworking_fearlesswalletEOFException : XNetworking_fearlesswalletIOException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("PosixException")))
@interface XNetworking_fearlesswalletPosixException : XNetworking_fearlesswalletKotlinException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletPosixExceptionCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) int32_t errno __attribute__((swift_name("errno")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.AddressAlreadyInUseException")))
@interface XNetworking_fearlesswalletPosixExceptionAddressAlreadyInUseException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.BadFileDescriptorException")))
@interface XNetworking_fearlesswalletPosixExceptionBadFileDescriptorException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.BadMessageException")))
@interface XNetworking_fearlesswalletPosixExceptionBadMessageException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.Companion")))
@interface XNetworking_fearlesswalletPosixExceptionCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPosixExceptionCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletPosixException *)forErrnoErrno:(int32_t)errno posixFunctionName:(NSString * _Nullable)posixFunctionName __attribute__((swift_name("forErrno(errno:posixFunctionName:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.ConnectionAbortedException")))
@interface XNetworking_fearlesswalletPosixExceptionConnectionAbortedException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.ConnectionRefusedException")))
@interface XNetworking_fearlesswalletPosixExceptionConnectionRefusedException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.ConnectionResetException")))
@interface XNetworking_fearlesswalletPosixExceptionConnectionResetException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.InterruptedException")))
@interface XNetworking_fearlesswalletPosixExceptionInterruptedException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.InvalidArgumentException")))
@interface XNetworking_fearlesswalletPosixExceptionInvalidArgumentException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NoMemoryException")))
@interface XNetworking_fearlesswalletPosixExceptionNoMemoryException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NoSuchFileException")))
@interface XNetworking_fearlesswalletPosixExceptionNoSuchFileException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NotConnectedException")))
@interface XNetworking_fearlesswalletPosixExceptionNotConnectedException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.NotSocketException")))
@interface XNetworking_fearlesswalletPosixExceptionNotSocketException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.OverflowException")))
@interface XNetworking_fearlesswalletPosixExceptionOverflowException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.PosixErrnoException")))
@interface XNetworking_fearlesswalletPosixExceptionPosixErrnoException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.TimeoutIOException")))
@interface XNetworking_fearlesswalletPosixExceptionTimeoutIOException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PosixException.TryAgainException")))
@interface XNetworking_fearlesswalletPosixExceptionTryAgainException : XNetworking_fearlesswalletPosixException
- (instancetype)initWithErrno:(int32_t)errno message:(NSString *)message __attribute__((swift_name("init(errno:message:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("Closeable_")))
@protocol XNetworking_fearlesswalletCloseable_
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((swift_name("SqlDriver")))
@protocol XNetworking_fearlesswalletSqlDriver <XNetworking_fearlesswalletCloseable_>
@required
- (XNetworking_fearlesswalletTransacterTransaction * _Nullable)currentTransaction __attribute__((swift_name("currentTransaction()")));
- (void)executeIdentifier:(XNetworking_fearlesswalletInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<XNetworking_fearlesswalletSqlPreparedStatement>))binders __attribute__((swift_name("execute(identifier:sql:parameters:binders:)")));
- (id<XNetworking_fearlesswalletSqlCursor>)executeQueryIdentifier:(XNetworking_fearlesswalletInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<XNetworking_fearlesswalletSqlPreparedStatement>))binders __attribute__((swift_name("executeQuery(identifier:sql:parameters:binders:)")));
- (XNetworking_fearlesswalletTransacterTransaction *)doNewTransaction __attribute__((swift_name("doNewTransaction()")));
@end

__attribute__((swift_name("ConnectionWrapper")))
@interface XNetworking_fearlesswalletConnectionWrapper : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSqlDriver>
- (void)executeIdentifier:(XNetworking_fearlesswalletInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<XNetworking_fearlesswalletSqlPreparedStatement>))binders __attribute__((swift_name("execute(identifier:sql:parameters:binders:)")));
- (id<XNetworking_fearlesswalletSqlCursor>)executeQueryIdentifier:(XNetworking_fearlesswalletInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<XNetworking_fearlesswalletSqlPreparedStatement>))binders __attribute__((swift_name("executeQuery(identifier:sql:parameters:binders:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeSqliteDriver")))
@interface XNetworking_fearlesswalletNativeSqliteDriver : XNetworking_fearlesswalletConnectionWrapper <XNetworking_fearlesswalletSqlDriver>
- (instancetype)initWithConfiguration:(XNetworking_fearlesswalletDatabaseConfiguration *)configuration maxReaderConnections:(int32_t)maxReaderConnections __attribute__((swift_name("init(configuration:maxReaderConnections:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSchema:(id<XNetworking_fearlesswalletSqlDriverSchema>)schema name:(NSString *)name maxReaderConnections:(int32_t)maxReaderConnections __attribute__((swift_name("init(schema:name:maxReaderConnections:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDatabaseManager:(id<XNetworking_fearlesswalletDatabaseManager>)databaseManager maxReaderConnections:(int32_t)maxReaderConnections __attribute__((swift_name("init(databaseManager:maxReaderConnections:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (XNetworking_fearlesswalletTransacterTransaction * _Nullable)currentTransaction __attribute__((swift_name("currentTransaction()")));
- (XNetworking_fearlesswalletTransacterTransaction *)doNewTransaction __attribute__((swift_name("doNewTransaction()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DecodeSequenceMode")))
@interface XNetworking_fearlesswalletDecodeSequenceMode : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletDecodeSequenceMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletDecodeSequenceMode *whitespaceSeparated __attribute__((swift_name("whitespaceSeparated")));
@property (class, readonly) XNetworking_fearlesswalletDecodeSequenceMode *arrayWrapped __attribute__((swift_name("arrayWrapped")));
@property (class, readonly) XNetworking_fearlesswalletDecodeSequenceMode *autoDetect __attribute__((swift_name("autoDetect")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletDecodeSequenceMode *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("SerialFormat")))
@protocol XNetworking_fearlesswalletSerialFormat
@required
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("StringFormat")))
@protocol XNetworking_fearlesswalletStringFormat <XNetworking_fearlesswalletSerialFormat>
@required
- (id _Nullable)decodeFromStringDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer string:(NSString *)string __attribute__((swift_name("decodeFromString(deserializer:string:)")));
- (NSString *)encodeToStringSerializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToString(serializer:value:)")));
@end

__attribute__((swift_name("Json")))
@interface XNetworking_fearlesswalletJson : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletStringFormat>
@property (class, readonly, getter=companion) XNetworking_fearlesswalletJsonDefault *companion __attribute__((swift_name("companion")));
- (id _Nullable)decodeFromJsonElementDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer element:(XNetworking_fearlesswalletJsonElement *)element __attribute__((swift_name("decodeFromJsonElement(deserializer:element:)")));
- (id _Nullable)decodeFromStringString:(NSString *)string __attribute__((swift_name("decodeFromString(string:)")));
- (id _Nullable)decodeFromStringDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer string:(NSString *)string __attribute__((swift_name("decodeFromString(deserializer:string:)")));
- (XNetworking_fearlesswalletJsonElement *)encodeToJsonElementSerializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToJsonElement(serializer:value:)")));
- (NSString *)encodeToStringSerializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToString(serializer:value:)")));
- (XNetworking_fearlesswalletJsonElement *)parseToJsonElementString:(NSString *)string __attribute__((swift_name("parseToJsonElement(string:)")));
@property (readonly) XNetworking_fearlesswalletJsonConfiguration *configuration __attribute__((swift_name("configuration")));
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Json.Default")))
@interface XNetworking_fearlesswalletJsonDefault : XNetworking_fearlesswalletJson
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)default_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJsonDefault *shared __attribute__((swift_name("shared")));
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("JsonArray")))
@interface XNetworking_fearlesswalletJsonArray : NSObject
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonArrayBuilder")))
@interface XNetworking_fearlesswalletJsonArrayBuilder : XNetworking_fearlesswalletBase
- (BOOL)addElement:(XNetworking_fearlesswalletJsonElement *)element __attribute__((swift_name("add(element:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)addAllElements:(id)elements __attribute__((swift_name("addAll(elements:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonBuilder")))
@interface XNetworking_fearlesswalletJsonBuilder : XNetworking_fearlesswalletBase
@property BOOL allowSpecialFloatingPointValues __attribute__((swift_name("allowSpecialFloatingPointValues")));
@property BOOL allowStructuredMapKeys __attribute__((swift_name("allowStructuredMapKeys")));
@property NSString *classDiscriminator __attribute__((swift_name("classDiscriminator")));
@property BOOL coerceInputValues __attribute__((swift_name("coerceInputValues")));
@property BOOL encodeDefaults __attribute__((swift_name("encodeDefaults")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property BOOL explicitNulls __attribute__((swift_name("explicitNulls")));
@property BOOL ignoreUnknownKeys __attribute__((swift_name("ignoreUnknownKeys")));
@property BOOL isLenient __attribute__((swift_name("isLenient")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property id<XNetworking_fearlesswalletJsonNamingStrategy> _Nullable namingStrategy __attribute__((swift_name("namingStrategy")));
@property BOOL prettyPrint __attribute__((swift_name("prettyPrint")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property NSString *prettyPrintIndent __attribute__((swift_name("prettyPrintIndent")));
@property XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@property BOOL useAlternativeNames __attribute__((swift_name("useAlternativeNames")));
@property BOOL useArrayPolymorphism __attribute__((swift_name("useArrayPolymorphism")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonConfiguration")))
@interface XNetworking_fearlesswalletJsonConfiguration : XNetworking_fearlesswalletBase
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL allowSpecialFloatingPointValues __attribute__((swift_name("allowSpecialFloatingPointValues")));
@property (readonly) BOOL allowStructuredMapKeys __attribute__((swift_name("allowStructuredMapKeys")));
@property (readonly) NSString *classDiscriminator __attribute__((swift_name("classDiscriminator")));
@property (readonly) BOOL coerceInputValues __attribute__((swift_name("coerceInputValues")));
@property (readonly) BOOL encodeDefaults __attribute__((swift_name("encodeDefaults")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) BOOL explicitNulls __attribute__((swift_name("explicitNulls")));
@property (readonly) BOOL ignoreUnknownKeys __attribute__((swift_name("ignoreUnknownKeys")));
@property (readonly) BOOL isLenient __attribute__((swift_name("isLenient")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) id<XNetworking_fearlesswalletJsonNamingStrategy> _Nullable namingStrategy __attribute__((swift_name("namingStrategy")));
@property (readonly) BOOL prettyPrint __attribute__((swift_name("prettyPrint")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSString *prettyPrintIndent __attribute__((swift_name("prettyPrintIndent")));
@property (readonly) BOOL useAlternativeNames __attribute__((swift_name("useAlternativeNames")));
@property (readonly) BOOL useArrayPolymorphism __attribute__((swift_name("useArrayPolymorphism")));
@end

__attribute__((swift_name("SerializationStrategy")))
@protocol XNetworking_fearlesswalletSerializationStrategy
@required
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(id _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("DeserializationStrategy")))
@protocol XNetworking_fearlesswalletDeserializationStrategy
@required
- (id _Nullable)deserializeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("KSerializer")))
@protocol XNetworking_fearlesswalletKSerializer <XNetworking_fearlesswalletSerializationStrategy, XNetworking_fearlesswalletDeserializationStrategy>
@required
@end

__attribute__((swift_name("JsonContentPolymorphicSerializer")))
@interface XNetworking_fearlesswalletJsonContentPolymorphicSerializer<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKSerializer>
- (instancetype)initWithBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass __attribute__((swift_name("init(baseClass:)"))) __attribute__((objc_designated_initializer));
- (T)deserializeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id<XNetworking_fearlesswalletDeserializationStrategy>)selectDeserializerElement:(XNetworking_fearlesswalletJsonElement *)element __attribute__((swift_name("selectDeserializer(element:)")));
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("Decoder")))
@protocol XNetworking_fearlesswalletDecoder
@required
- (id<XNetworking_fearlesswalletCompositeDecoder>)beginStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (int32_t)decodeEnumEnumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (id<XNetworking_fearlesswalletDecoder>)decodeInlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("decodeInline(descriptor:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (XNetworking_fearlesswalletKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id _Nullable)decodeNullableSerializableValueDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer __attribute__((swift_name("decodeNullableSerializableValue(deserializer:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer __attribute__((swift_name("decodeSerializableValue(deserializer:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("CompositeDecoder")))
@protocol XNetworking_fearlesswalletCompositeDecoder
@required
- (BOOL)decodeBooleanElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByteElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeCharElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (int32_t)decodeCollectionSizeDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("decodeCollectionSize(descriptor:)")));
- (double)decodeDoubleElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeElementIndexDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("decodeElementIndex(descriptor:)")));
- (float)decodeFloatElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<XNetworking_fearlesswalletDecoder>)decodeInlineElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeIntElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLongElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)decodeSequentially __attribute__((swift_name("decodeSequentially()")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (int16_t)decodeShortElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeStringElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (void)endStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("JsonDecoder")))
@protocol XNetworking_fearlesswalletJsonDecoder <XNetworking_fearlesswalletDecoder, XNetworking_fearlesswalletCompositeDecoder>
@required
- (XNetworking_fearlesswalletJsonElement *)decodeJsonElement __attribute__((swift_name("decodeJsonElement()")));
@property (readonly) XNetworking_fearlesswalletJson *json __attribute__((swift_name("json")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/serialization/json/JsonElementSerializer))
*/
__attribute__((swift_name("JsonElement")))
@interface XNetworking_fearlesswalletJsonElement : XNetworking_fearlesswalletBase
@property (class, readonly, getter=companion) XNetworking_fearlesswalletJsonElementCompanion *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonElement.Companion")))
@interface XNetworking_fearlesswalletJsonElementCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJsonElementCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("Encoder_")))
@protocol XNetworking_fearlesswalletEncoder_
@required
- (id<XNetworking_fearlesswalletCompositeEncoder>)beginCollectionDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor collectionSize:(int32_t)collectionSize __attribute__((swift_name("beginCollection(descriptor:collectionSize:)")));
- (id<XNetworking_fearlesswalletCompositeEncoder>)beginStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeEnumEnumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (id<XNetworking_fearlesswalletEncoder_>)encodeInlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("encodeInline(descriptor:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNull __attribute__((swift_name("encodeNull()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNullableSerializableValueSerializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableValue(serializer:value:)")));
- (void)encodeSerializableValueSerializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableValue(serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("CompositeEncoder")))
@protocol XNetworking_fearlesswalletCompositeEncoder
@required
- (void)encodeBooleanElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeFloatElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<XNetworking_fearlesswalletEncoder_>)encodeInlineElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNullableSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)endStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)shouldEncodeElementDefaultDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("shouldEncodeElementDefault(descriptor:index:)")));
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("JsonEncoder")))
@protocol XNetworking_fearlesswalletJsonEncoder <XNetworking_fearlesswalletEncoder_, XNetworking_fearlesswalletCompositeEncoder>
@required
- (void)encodeJsonElementElement:(XNetworking_fearlesswalletJsonElement *)element __attribute__((swift_name("encodeJsonElement(element:)")));
@property (readonly) XNetworking_fearlesswalletJson *json __attribute__((swift_name("json")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("JsonNamingStrategy")))
@protocol XNetworking_fearlesswalletJsonNamingStrategy
@required
- (NSString *)serialNameForJsonDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor elementIndex:(int32_t)elementIndex serialName:(NSString *)serialName __attribute__((swift_name("serialNameForJson(descriptor:elementIndex:serialName:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonNamingStrategyBuiltins")))
@interface XNetworking_fearlesswalletJsonNamingStrategyBuiltins : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)builtins __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJsonNamingStrategyBuiltins *shared __attribute__((swift_name("shared")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) id<XNetworking_fearlesswalletJsonNamingStrategy> SnakeCase __attribute__((swift_name("SnakeCase")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/serialization/json/JsonPrimitiveSerializer))
*/
__attribute__((swift_name("JsonPrimitive")))
@interface XNetworking_fearlesswalletJsonPrimitive : XNetworking_fearlesswalletJsonElement
@property (class, readonly, getter=companion) XNetworking_fearlesswalletJsonPrimitiveCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) BOOL isString __attribute__((swift_name("isString")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/serialization/json/JsonNullSerializer))
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonNull")))
@interface XNetworking_fearlesswalletJsonNull : XNetworking_fearlesswalletJsonPrimitive
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)jsonNull __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJsonNull *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<XNetworking_fearlesswalletKSerializer>)serializerTypeParamsSerializers:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) BOOL isString __attribute__((swift_name("isString")));
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("JsonObject")))
@interface XNetworking_fearlesswalletJsonObject : NSObject
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonObjectBuilder")))
@interface XNetworking_fearlesswalletJsonObjectBuilder : XNetworking_fearlesswalletBase
- (XNetworking_fearlesswalletJsonElement * _Nullable)putKey:(NSString *)key element:(XNetworking_fearlesswalletJsonElement *)element __attribute__((swift_name("put(key:element:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonPrimitive.Companion")))
@interface XNetworking_fearlesswalletJsonPrimitiveCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJsonPrimitiveCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("JsonTransformingSerializer")))
@interface XNetworking_fearlesswalletJsonTransformingSerializer<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKSerializer>
- (instancetype)initWithTSerializer:(id<XNetworking_fearlesswalletKSerializer>)tSerializer __attribute__((swift_name("init(tSerializer:)"))) __attribute__((objc_designated_initializer));
- (T)deserializeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletJsonElement *)transformDeserializeElement:(XNetworking_fearlesswalletJsonElement *)element __attribute__((swift_name("transformDeserialize(element:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletJsonElement *)transformSerializeElement:(XNetworking_fearlesswalletJsonElement *)element __attribute__((swift_name("transformSerialize(element:)")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("ChildJob")))
@protocol XNetworking_fearlesswalletChildJob <XNetworking_fearlesswalletJob>
@required
- (void)parentCancelledParentJob:(id<XNetworking_fearlesswalletParentJob>)parentJob __attribute__((swift_name("parentCancelled(parentJob:)")));
@end

__attribute__((swift_name("ParentJob")))
@protocol XNetworking_fearlesswalletParentJob <XNetworking_fearlesswalletJob>
@required
- (XNetworking_fearlesswalletKotlinCancellationException *)getChildJobCancellationCause __attribute__((swift_name("getChildJobCancellationCause()")));
@end

__attribute__((swift_name("JobSupport")))
@interface XNetworking_fearlesswalletJobSupport : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletJob, XNetworking_fearlesswalletChildJob, XNetworking_fearlesswalletParentJob>
- (instancetype)initWithActive:(BOOL)active __attribute__((swift_name("init(active:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable("This is internal API and may be removed in the future releases")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)afterCompletionState:(id _Nullable)state __attribute__((swift_name("afterCompletion(state:)")));
- (id<XNetworking_fearlesswalletChildHandle>)attachChildChild:(id<XNetworking_fearlesswalletChildJob>)child __attribute__((swift_name("attachChild(child:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)awaitInternalWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitInternal(completionHandler:)")));
- (void)cancelCause_:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (BOOL)cancelCoroutineCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancelCoroutine(cause:)")));
- (void)cancelInternalCause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("cancelInternal(cause:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)cancellationExceptionMessage __attribute__((swift_name("cancellationExceptionMessage()")));
- (BOOL)childCancelledCause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
- (XNetworking_fearlesswalletKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()")));
- (XNetworking_fearlesswalletKotlinCancellationException *)getChildJobCancellationCause __attribute__((swift_name("getChildJobCancellationCause()")));
- (XNetworking_fearlesswalletKotlinThrowable * _Nullable)getCompletionExceptionOrNull __attribute__((swift_name("getCompletionExceptionOrNull()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)handleJobExceptionException:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("handleJobException(exception:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)doInitParentJobParent:(id<XNetworking_fearlesswalletJob> _Nullable)parent __attribute__((swift_name("doInitParentJob(parent:)")));
- (id<XNetworking_fearlesswalletDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)")));
- (id<XNetworking_fearlesswalletDisposableHandle>)invokeOnCompletionHandler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)onCancellingCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("onCancelling(cause:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)onCompletionInternalState:(id _Nullable)state __attribute__((swift_name("onCompletionInternal(state:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)onStart __attribute__((swift_name("onStart()")));
- (void)parentCancelledParentJob:(id<XNetworking_fearlesswalletParentJob>)parentJob __attribute__((swift_name("parentCancelled(parentJob:)")));
- (BOOL)start __attribute__((swift_name("start()")));
- (NSString *)toDebugString __attribute__((swift_name("toDebugString()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletKotlinCancellationException *)toCancellationException:(XNetworking_fearlesswalletKotlinThrowable *)receiver message:(NSString * _Nullable)message __attribute__((swift_name("toCancellationException(_:message:)")));
@property (readonly) id<XNetworking_fearlesswalletKotlinSequence> children __attribute__((swift_name("children")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable completionCause __attribute__((swift_name("completionCause")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) BOOL completionCauseHandled __attribute__((swift_name("completionCauseHandled")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@property (readonly) BOOL isCompletedExceptionally __attribute__((swift_name("isCompletedExceptionally")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) BOOL isScopedCoroutine __attribute__((swift_name("isScopedCoroutine")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContextKey> key __attribute__((swift_name("key")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) id<XNetworking_fearlesswalletSelectClause1> onAwaitInternal __attribute__((swift_name("onAwaitInternal")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause0> onJoin __attribute__((swift_name("onJoin")));
@property (readonly) id<XNetworking_fearlesswalletJob> _Nullable parent __attribute__((swift_name("parent")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuation")))
@protocol XNetworking_fearlesswalletKotlinContinuation
@required
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end

__attribute__((swift_name("AbstractCoroutine")))
@interface XNetworking_fearlesswalletAbstractCoroutine<__contravariant T> : XNetworking_fearlesswalletJobSupport <XNetworking_fearlesswalletJob, XNetworking_fearlesswalletKotlinContinuation, XNetworking_fearlesswalletCoroutineScope>
- (instancetype)initWithParentContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)parentContext initParentJob:(BOOL)initParentJob active:(BOOL)active __attribute__((swift_name("init(parentContext:initParentJob:active:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithActive:(BOOL)active __attribute__((swift_name("init(active:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)afterResumeState:(id _Nullable)state __attribute__((swift_name("afterResume(state:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)cancellationExceptionMessage __attribute__((swift_name("cancellationExceptionMessage()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)onCancelledCause:(XNetworking_fearlesswalletKotlinThrowable *)cause handled:(BOOL)handled __attribute__((swift_name("onCancelled(cause:handled:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)onCompletedValue:(T _Nullable)value __attribute__((swift_name("onCompleted(value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)onCompletionInternalState:(id _Nullable)state __attribute__((swift_name("onCompletionInternal(state:)")));
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));
- (void)startStart:(XNetworking_fearlesswalletCoroutineStart *)start receiver:(id _Nullable)receiver block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("start(start:receiver:block:)")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> context __attribute__((swift_name("context")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@end

__attribute__((swift_name("CancellableContinuation")))
@protocol XNetworking_fearlesswalletCancellableContinuation <XNetworking_fearlesswalletKotlinContinuation>
@required
- (BOOL)cancelCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));
- (void)completeResumeToken:(id)token __attribute__((swift_name("completeResume(token:)")));
- (void)doInitCancellability __attribute__((swift_name("doInitCancellability()")));
- (void)invokeOnCancellationHandler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCancellation(handler:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (void)resumeValue:(id _Nullable)value onCancellation:(void (^ _Nullable)(XNetworking_fearlesswalletKotlinThrowable *))onCancellation __attribute__((swift_name("resume(value:onCancellation:)")));
- (id _Nullable)tryResumeValue:(id _Nullable)value idempotent:(id _Nullable)idempotent __attribute__((swift_name("tryResume(value:idempotent:)")));
- (id _Nullable)tryResumeValue:(id _Nullable)value idempotent:(id _Nullable)idempotent onCancellation:(void (^ _Nullable)(XNetworking_fearlesswalletKotlinThrowable *))onCancellation __attribute__((swift_name("tryResume(value:idempotent:onCancellation:)")));
- (id _Nullable)tryResumeWithExceptionException:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("tryResumeWithException(exception:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (void)resumeUndispatched:(XNetworking_fearlesswalletCoroutineDispatcher *)receiver value:(id _Nullable)value __attribute__((swift_name("resumeUndispatched(_:value:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (void)resumeUndispatchedWithException:(XNetworking_fearlesswalletCoroutineDispatcher *)receiver exception:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("resumeUndispatchedWithException(_:exception:)")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@end

__attribute__((swift_name("DisposableHandle")))
@protocol XNetworking_fearlesswalletDisposableHandle
@required
- (void)dispose_ __attribute__((swift_name("dispose()")));
@end

__attribute__((swift_name("ChildHandle")))
@protocol XNetworking_fearlesswalletChildHandle <XNetworking_fearlesswalletDisposableHandle>
@required
- (BOOL)childCancelledCause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
@property (readonly) id<XNetworking_fearlesswalletJob> _Nullable parent __attribute__((swift_name("parent")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuationInterceptor")))
@protocol XNetworking_fearlesswalletKotlinContinuationInterceptor <XNetworking_fearlesswalletKotlinCoroutineContextElement>
@required
- (id<XNetworking_fearlesswalletKotlinContinuation>)interceptContinuationContinuation:(id<XNetworking_fearlesswalletKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (void)releaseInterceptedContinuationContinuation:(id<XNetworking_fearlesswalletKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
@end

__attribute__((swift_name("CoroutineDispatcher")))
@interface XNetworking_fearlesswalletCoroutineDispatcher : XNetworking_fearlesswalletKotlinAbstractCoroutineContextElement <XNetworking_fearlesswalletKotlinContinuationInterceptor>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletCoroutineDispatcherKey *companion __attribute__((swift_name("companion")));
- (void)dispatchContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context block:(id<XNetworking_fearlesswalletRunnable>)block __attribute__((swift_name("dispatch(context:block:)")));
- (void)dispatchYieldContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context block:(id<XNetworking_fearlesswalletRunnable>)block __attribute__((swift_name("dispatchYield(context:block:)")));
- (id<XNetworking_fearlesswalletKotlinContinuation>)interceptContinuationContinuation:(id<XNetworking_fearlesswalletKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (BOOL)isDispatchNeededContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("isDispatchNeeded(context:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (XNetworking_fearlesswalletCoroutineDispatcher *)limitedParallelismParallelism:(int32_t)parallelism __attribute__((swift_name("limitedParallelism(parallelism:)")));
- (XNetworking_fearlesswalletCoroutineDispatcher *)plusOther_:(XNetworking_fearlesswalletCoroutineDispatcher *)other __attribute__((swift_name("plus(other_:)"))) __attribute__((unavailable("Operator '+' on two CoroutineDispatcher objects is meaningless. CoroutineDispatcher is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The dispatcher to the right of `+` just replaces the dispatcher to the left.")));
- (void)releaseInterceptedContinuationContinuation:(id<XNetworking_fearlesswalletKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("CloseableCoroutineDispatcher")))
@interface XNetworking_fearlesswalletCloseableCoroutineDispatcher : XNetworking_fearlesswalletCoroutineDispatcher
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((swift_name("Deferred")))
@protocol XNetworking_fearlesswalletDeferred <XNetworking_fearlesswalletJob>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("await(completionHandler:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (id _Nullable)getCompleted __attribute__((swift_name("getCompleted()")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (XNetworking_fearlesswalletKotlinThrowable * _Nullable)getCompletionExceptionOrNull __attribute__((swift_name("getCompletionExceptionOrNull()")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause1> onAwait __attribute__((swift_name("onAwait")));
@end

__attribute__((swift_name("CompletableDeferred")))
@protocol XNetworking_fearlesswalletCompletableDeferred <XNetworking_fearlesswalletDeferred>
@required
- (BOOL)completeValue:(id _Nullable)value __attribute__((swift_name("complete(value:)")));
- (BOOL)completeExceptionallyException:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("completeExceptionally(exception:)")));
@end

__attribute__((swift_name("CompletableJob")))
@protocol XNetworking_fearlesswalletCompletableJob <XNetworking_fearlesswalletJob>
@required
- (BOOL)complete __attribute__((swift_name("complete()")));
- (BOOL)completeExceptionallyException:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("completeExceptionally(exception:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompletionHandlerException")))
@interface XNetworking_fearlesswalletCompletionHandlerException : XNetworking_fearlesswalletKotlinRuntimeException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextKey")))
@interface XNetworking_fearlesswalletKotlinAbstractCoroutineContextKey<B, E> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinCoroutineContextKey>
- (instancetype)initWithBaseKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)baseKey safeCast:(E _Nullable (^)(id<XNetworking_fearlesswalletKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineDispatcher.Key")))
@interface XNetworking_fearlesswalletCoroutineDispatcherKey : XNetworking_fearlesswalletKotlinAbstractCoroutineContextKey<id<XNetworking_fearlesswalletKotlinContinuationInterceptor>, XNetworking_fearlesswalletCoroutineDispatcher *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithBaseKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)baseKey safeCast:(id<XNetworking_fearlesswalletKotlinCoroutineContextElement> _Nullable (^)(id<XNetworking_fearlesswalletKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCoroutineDispatcherKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("CoroutineExceptionHandler")))
@protocol XNetworking_fearlesswalletCoroutineExceptionHandler <XNetworking_fearlesswalletKotlinCoroutineContextElement>
@required
- (void)handleExceptionContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context exception:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("handleException(context:exception:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineExceptionHandlerKey")))
@interface XNetworking_fearlesswalletCoroutineExceptionHandlerKey : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCoroutineExceptionHandlerKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineName")))
@interface XNetworking_fearlesswalletCoroutineName : XNetworking_fearlesswalletKotlinAbstractCoroutineContextElement
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletCoroutineNameKey *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletCoroutineName *)doCopyName:(NSString *)name __attribute__((swift_name("doCopy(name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineName.Key")))
@interface XNetworking_fearlesswalletCoroutineNameKey : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCoroutineNameKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineStart")))
@interface XNetworking_fearlesswalletCoroutineStart : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletCoroutineStart *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletCoroutineStart *default_ __attribute__((swift_name("default_")));
@property (class, readonly) XNetworking_fearlesswalletCoroutineStart *lazy __attribute__((swift_name("lazy")));
@property (class, readonly) XNetworking_fearlesswalletCoroutineStart *atomic __attribute__((swift_name("atomic")));
@property (class, readonly) XNetworking_fearlesswalletCoroutineStart *undispatched __attribute__((swift_name("undispatched")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletCoroutineStart *> *)values __attribute__((swift_name("values()")));
- (void)invokeBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)block completion:(id<XNetworking_fearlesswalletKotlinContinuation>)completion __attribute__((swift_name("invoke(block:completion:)")));
- (void)invokeBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block receiver:(id _Nullable)receiver completion:(id<XNetworking_fearlesswalletKotlinContinuation>)completion __attribute__((swift_name("invoke(block:receiver:completion:)")));
@property (readonly) BOOL isLazy __attribute__((swift_name("isLazy")));
@end

__attribute__((swift_name("Delay")))
@protocol XNetworking_fearlesswalletDelay
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)delayTime:(int64_t)time completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("delay(time:completionHandler:)"))) __attribute__((unavailable("Deprecated without replacement as an internal method never intended for public use")));
- (id<XNetworking_fearlesswalletDisposableHandle>)invokeOnTimeoutTimeMillis:(int64_t)timeMillis block:(id<XNetworking_fearlesswalletRunnable>)block context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("invokeOnTimeout(timeMillis:block:context:)")));
- (void)scheduleResumeAfterDelayTimeMillis:(int64_t)timeMillis continuation:(id<XNetworking_fearlesswalletCancellableContinuation>)continuation __attribute__((swift_name("scheduleResumeAfterDelay(timeMillis:continuation:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Dispatchers")))
@interface XNetworking_fearlesswalletDispatchers : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)dispatchers __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletDispatchers *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletCoroutineDispatcher *Default __attribute__((swift_name("Default")));
@property (readonly) XNetworking_fearlesswalletMainCoroutineDispatcher *Main __attribute__((swift_name("Main")));
@property (readonly) XNetworking_fearlesswalletCoroutineDispatcher *Unconfined __attribute__((swift_name("Unconfined")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.DelicateCoroutinesApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GlobalScope")))
@interface XNetworking_fearlesswalletGlobalScope : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCoroutineScope>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)globalScope __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletGlobalScope *shared __attribute__((swift_name("shared")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JobKey")))
@interface XNetworking_fearlesswalletJobKey : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinCoroutineContextKey>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJobKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("MainCoroutineDispatcher")))
@interface XNetworking_fearlesswalletMainCoroutineDispatcher : XNetworking_fearlesswalletCoroutineDispatcher
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletCoroutineDispatcher *)limitedParallelismParallelism:(int32_t)parallelism __attribute__((swift_name("limitedParallelism(parallelism:)")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString * _Nullable)toStringInternalImpl __attribute__((swift_name("toStringInternalImpl()")));
@property (readonly) XNetworking_fearlesswalletMainCoroutineDispatcher *immediate __attribute__((swift_name("immediate")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NonCancellable")))
@interface XNetworking_fearlesswalletNonCancellable : XNetworking_fearlesswalletKotlinAbstractCoroutineContextElement <XNetworking_fearlesswalletJob>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)nonCancellable __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletNonCancellable *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletChildHandle>)attachChildChild:(id<XNetworking_fearlesswalletChildJob>)child __attribute__((swift_name("attachChild(child:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (void)cancelCause_:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (XNetworking_fearlesswalletKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (id<XNetworking_fearlesswalletDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (id<XNetworking_fearlesswalletDisposableHandle>)invokeOnCompletionHandler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (BOOL)start __attribute__((swift_name("start()"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletKotlinSequence> children __attribute__((swift_name("children"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause0> onJoin __attribute__((swift_name("onJoin"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@property (readonly) id<XNetworking_fearlesswalletJob> _Nullable parent __attribute__((swift_name("parent"))) __attribute__((deprecated("NonCancellable can be used only as an argument for 'withContext', direct usages of its API are prohibited")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NonDisposableHandle")))
@interface XNetworking_fearlesswalletNonDisposableHandle : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletDisposableHandle, XNetworking_fearlesswalletChildHandle>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nonDisposableHandle __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletNonDisposableHandle *shared __attribute__((swift_name("shared")));
- (BOOL)childCancelledCause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
- (void)dispose_ __attribute__((swift_name("dispose()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletJob> _Nullable parent __attribute__((swift_name("parent")));
@end

__attribute__((swift_name("Runnable")))
@protocol XNetworking_fearlesswalletRunnable
@required
- (void)run __attribute__((swift_name("run()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutCancellationException")))
@interface XNetworking_fearlesswalletTimeoutCancellationException : XNetworking_fearlesswalletKotlinCancellationException <XNetworking_fearlesswalletCopyableThrowable>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (XNetworking_fearlesswalletTimeoutCancellationException *)createCopy __attribute__((swift_name("createCopy()")));
@end

__attribute__((swift_name("SendChannel")))
@protocol XNetworking_fearlesswalletSendChannel
@required
- (BOOL)closeCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (void)invokeOnCloseHandler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnClose(handler:)")));
- (BOOL)offerElement:(id _Nullable)element __attribute__((swift_name("offer(element:)"))) __attribute__((unavailable("Deprecated in the favour of 'trySend' method")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendElement:(id _Nullable)element completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("send(element:completionHandler:)")));
- (id _Nullable)trySendElement:(id _Nullable)element __attribute__((swift_name("trySend(element:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.DelicateCoroutinesApi
*/
@property (readonly) BOOL isClosedForSend __attribute__((swift_name("isClosedForSend")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause2> onSend __attribute__((swift_name("onSend")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.ObsoleteCoroutinesApi
*/
__attribute__((swift_name("BroadcastChannel")))
@protocol XNetworking_fearlesswalletBroadcastChannel <XNetworking_fearlesswalletSendChannel>
@required
- (void)cancelCause_:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (id<XNetworking_fearlesswalletReceiveChannel>)openSubscription __attribute__((swift_name("openSubscription()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BufferOverflow")))
@interface XNetworking_fearlesswalletBufferOverflow : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletBufferOverflow *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletBufferOverflow *suspend __attribute__((swift_name("suspend")));
@property (class, readonly) XNetworking_fearlesswalletBufferOverflow *dropOldest __attribute__((swift_name("dropOldest")));
@property (class, readonly) XNetworking_fearlesswalletBufferOverflow *dropLatest __attribute__((swift_name("dropLatest")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletBufferOverflow *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("ReceiveChannel")))
@protocol XNetworking_fearlesswalletReceiveChannel
@required
- (void)cancelCause_:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (id<XNetworking_fearlesswalletChannelIterator>)iterator __attribute__((swift_name("iterator()")));
- (id _Nullable)poll __attribute__((swift_name("poll()"))) __attribute__((unavailable("Deprecated in the favour of 'tryReceive'. Please note that the provided replacement does not rethrow channel's close cause as 'poll' did, for the precise replacement please refer to the 'poll' documentation")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveCatchingWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveCatching(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveOrNullWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveOrNull(completionHandler:)"))) __attribute__((unavailable("Deprecated in favor of 'receiveCatching'. Please note that the provided replacement does not rethrow channel's close cause as 'receiveOrNull' did, for the detailed replacement please refer to the 'receiveOrNull' documentation")));
- (id _Nullable)tryReceive __attribute__((swift_name("tryReceive()")));

/**
 * @note annotations
 *   kotlinx.coroutines.DelicateCoroutinesApi
*/
@property (readonly) BOOL isClosedForReceive __attribute__((swift_name("isClosedForReceive")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause1> onReceive __attribute__((swift_name("onReceive")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause1> onReceiveCatching __attribute__((swift_name("onReceiveCatching")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause1> onReceiveOrNull __attribute__((swift_name("onReceiveOrNull"))) __attribute__((unavailable("Deprecated in favor of onReceiveCatching extension")));
@end

__attribute__((swift_name("Channel")))
@protocol XNetworking_fearlesswalletChannel <XNetworking_fearlesswalletSendChannel, XNetworking_fearlesswalletReceiveChannel>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelFactory")))
@interface XNetworking_fearlesswalletChannelFactory : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)factory __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletChannelFactory *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t BUFFERED __attribute__((swift_name("BUFFERED")));
@property (readonly) int32_t CONFLATED __attribute__((swift_name("CONFLATED")));
@property (readonly) NSString *DEFAULT_BUFFER_PROPERTY_NAME __attribute__((swift_name("DEFAULT_BUFFER_PROPERTY_NAME")));
@property (readonly) int32_t RENDEZVOUS __attribute__((swift_name("RENDEZVOUS")));
@property (readonly) int32_t UNLIMITED __attribute__((swift_name("UNLIMITED")));
@end

__attribute__((swift_name("ChannelIterator")))
@protocol XNetworking_fearlesswalletChannelIterator
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasNextWithCompletionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasNext(completionHandler:)")));
- (id _Nullable)next_ __attribute__((swift_name("next()")));
@end

__attribute__((swift_name("KotlinNoSuchElementException")))
@interface XNetworking_fearlesswalletKotlinNoSuchElementException : XNetworking_fearlesswalletKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClosedReceiveChannelException")))
@interface XNetworking_fearlesswalletClosedReceiveChannelException : XNetworking_fearlesswalletKotlinNoSuchElementException
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClosedSendChannelException")))
@interface XNetworking_fearlesswalletClosedSendChannelException : XNetworking_fearlesswalletKotlinIllegalStateException
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.ObsoleteCoroutinesApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConflatedBroadcastChannel")))
@interface XNetworking_fearlesswalletConflatedBroadcastChannel<E> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletBroadcastChannel>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("ConflatedBroadcastChannel is deprecated in the favour of SharedFlow and is no longer supported")));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithValue:(E _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("ConflatedBroadcastChannel is deprecated in the favour of SharedFlow and is no longer supported")));
- (void)cancelCause_:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
- (BOOL)closeCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("close(cause:)")));
- (void)invokeOnCloseHandler:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnClose(handler:)")));
- (BOOL)offerElement:(E _Nullable)element __attribute__((swift_name("offer(element:)"))) __attribute__((unavailable("Deprecated in the favour of 'trySend' method")));
- (id<XNetworking_fearlesswalletReceiveChannel>)openSubscription __attribute__((swift_name("openSubscription()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendElement:(E _Nullable)element completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("send(element:completionHandler:)")));
- (id _Nullable)trySendElement:(E _Nullable)element __attribute__((swift_name("trySend(element:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.DelicateCoroutinesApi
*/
@property (readonly) BOOL isClosedForSend __attribute__((swift_name("isClosedForSend")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause2> onSend __attribute__((swift_name("onSend")));
@property (readonly) E _Nullable value __attribute__((swift_name("value")));
@property (readonly) E _Nullable valueOrNull __attribute__((swift_name("valueOrNull")));
@end

__attribute__((swift_name("ProducerScope")))
@protocol XNetworking_fearlesswalletProducerScope <XNetworking_fearlesswalletCoroutineScope, XNetworking_fearlesswalletSendChannel>
@required
@property (readonly) id<XNetworking_fearlesswalletSendChannel> channel __attribute__((swift_name("channel")));
@end

__attribute__((swift_name("Flow")))
@protocol XNetworking_fearlesswalletFlow
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<XNetworking_fearlesswalletFlowCollector>)collector completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
__attribute__((swift_name("AbstractFlow")))
@interface XNetworking_fearlesswalletAbstractFlow<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletFlow>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<XNetworking_fearlesswalletFlowCollector>)collector completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectSafelyCollector:(id<XNetworking_fearlesswalletFlowCollector>)collector completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collectSafely(collector:completionHandler:)")));
@end

__attribute__((swift_name("FlowCollector")))
@protocol XNetworking_fearlesswalletFlowCollector
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)emitValue:(id _Nullable)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("emit(value:completionHandler:)")));
@end

__attribute__((swift_name("SharedFlow")))
@protocol XNetworking_fearlesswalletSharedFlow <XNetworking_fearlesswalletFlow>
@required
@property (readonly) NSArray<id> *replayCache __attribute__((swift_name("replayCache")));
@end

__attribute__((swift_name("MutableSharedFlow")))
@protocol XNetworking_fearlesswalletMutableSharedFlow <XNetworking_fearlesswalletSharedFlow, XNetworking_fearlesswalletFlowCollector>
@required

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (void)resetReplayCache __attribute__((swift_name("resetReplayCache()")));
- (BOOL)tryEmitValue:(id _Nullable)value __attribute__((swift_name("tryEmit(value:)")));
@property (readonly) id<XNetworking_fearlesswalletStateFlow> subscriptionCount __attribute__((swift_name("subscriptionCount")));
@end

__attribute__((swift_name("StateFlow")))
@protocol XNetworking_fearlesswalletStateFlow <XNetworking_fearlesswalletSharedFlow>
@required
@property (readonly) id _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("MutableStateFlow")))
@protocol XNetworking_fearlesswalletMutableStateFlow <XNetworking_fearlesswalletStateFlow, XNetworking_fearlesswalletMutableSharedFlow>
@required
- (BOOL)compareAndSetExpect:(id _Nullable)expect update:(id _Nullable)update __attribute__((swift_name("compareAndSet(expect:update:)")));
- (void)setValue:(id _Nullable)value __attribute__((swift_name("setValue(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharingCommand")))
@interface XNetworking_fearlesswalletSharingCommand : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletSharingCommand *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletSharingCommand *start __attribute__((swift_name("start")));
@property (class, readonly) XNetworking_fearlesswalletSharingCommand *stop __attribute__((swift_name("stop")));
@property (class, readonly) XNetworking_fearlesswalletSharingCommand *stopAndResetReplayCache __attribute__((swift_name("stopAndResetReplayCache")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletSharingCommand *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("SharingStarted")))
@protocol XNetworking_fearlesswalletSharingStarted
@required
- (id<XNetworking_fearlesswalletFlow>)commandSubscriptionCount:(id<XNetworking_fearlesswalletStateFlow>)subscriptionCount __attribute__((swift_name("command(subscriptionCount:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharingStartedCompanion")))
@interface XNetworking_fearlesswalletSharingStartedCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSharingStartedCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletSharingStarted>)WhileSubscribedStopTimeoutMillis:(int64_t)stopTimeoutMillis replayExpirationMillis:(int64_t)replayExpirationMillis __attribute__((swift_name("WhileSubscribed(stopTimeoutMillis:replayExpirationMillis:)")));
@property (readonly) id<XNetworking_fearlesswalletSharingStarted> Eagerly __attribute__((swift_name("Eagerly")));
@property (readonly) id<XNetworking_fearlesswalletSharingStarted> Lazily __attribute__((swift_name("Lazily")));
@end

__attribute__((swift_name("FusibleFlow")))
@protocol XNetworking_fearlesswalletFusibleFlow <XNetworking_fearlesswalletFlow>
@required
- (id<XNetworking_fearlesswalletFlow>)fuseContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(XNetworking_fearlesswalletBufferOverflow *)onBufferOverflow __attribute__((swift_name("fuse(context:capacity:onBufferOverflow:)")));
@end

__attribute__((swift_name("ChannelFlow")))
@interface XNetworking_fearlesswalletChannelFlow<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletFusibleFlow>
- (instancetype)initWithContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(XNetworking_fearlesswalletBufferOverflow *)onBufferOverflow __attribute__((swift_name("init(context:capacity:onBufferOverflow:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString * _Nullable)additionalToStringProps __attribute__((swift_name("additionalToStringProps()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<XNetworking_fearlesswalletFlowCollector>)collector completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)collectToScope:(id<XNetworking_fearlesswalletProducerScope>)scope completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collectTo(scope:completionHandler:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletChannelFlow<T> *)createContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(XNetworking_fearlesswalletBufferOverflow *)onBufferOverflow __attribute__((swift_name("create(context:capacity:onBufferOverflow:)")));
- (id<XNetworking_fearlesswalletFlow> _Nullable)dropChannelOperators __attribute__((swift_name("dropChannelOperators()")));
- (id<XNetworking_fearlesswalletFlow>)fuseContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context capacity:(int32_t)capacity onBufferOverflow:(XNetworking_fearlesswalletBufferOverflow *)onBufferOverflow __attribute__((swift_name("fuse(context:capacity:onBufferOverflow:)")));
- (id<XNetworking_fearlesswalletReceiveChannel>)produceImplScope:(id<XNetworking_fearlesswalletCoroutineScope>)scope __attribute__((swift_name("produceImpl(scope:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> context __attribute__((swift_name("context")));
@property (readonly) XNetworking_fearlesswalletBufferOverflow *onBufferOverflow __attribute__((swift_name("onBufferOverflow")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SendingCollector")))
@interface XNetworking_fearlesswalletSendingCollector<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletFlowCollector>
- (instancetype)initWithChannel:(id<XNetworking_fearlesswalletSendChannel>)channel __attribute__((swift_name("init(channel:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)emitValue:(T _Nullable)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("emit(value:completionHandler:)")));
@end

__attribute__((swift_name("SelectBuilder")))
@protocol XNetworking_fearlesswalletSelectBuilder
@required

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (void)onTimeoutTimeMillis:(int64_t)timeMillis block:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)block __attribute__((swift_name("onTimeout(timeMillis:block:)"))) __attribute__((unavailable("Replaced with the same extension function")));
- (void)invoke:(id<XNetworking_fearlesswalletSelectClause0>)receiver block:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)block __attribute__((swift_name("invoke(_:block:)")));
- (void)invoke:(id<XNetworking_fearlesswalletSelectClause1>)receiver block_:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("invoke(_:block_:)")));
- (void)invoke:(id<XNetworking_fearlesswalletSelectClause2>)receiver param:(id _Nullable)param block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("invoke(_:param:block:)")));
- (void)invoke:(id<XNetworking_fearlesswalletSelectClause2>)receiver block__:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("invoke(_:block__:)")));
@end

__attribute__((swift_name("SelectClause")))
@protocol XNetworking_fearlesswalletSelectClause
@required
@property (readonly) id clauseObject __attribute__((swift_name("clauseObject")));
@property (readonly) XNetworking_fearlesswalletKotlinUnit *(^(^ _Nullable onCancellationConstructor)(id<XNetworking_fearlesswalletSelectInstance>, id _Nullable, id _Nullable))(XNetworking_fearlesswalletKotlinThrowable *) __attribute__((swift_name("onCancellationConstructor")));
@property (readonly) id _Nullable (^processResFunc)(id, id _Nullable, id _Nullable) __attribute__((swift_name("processResFunc")));
@property (readonly) void (^regFunc)(id, id<XNetworking_fearlesswalletSelectInstance>, id _Nullable) __attribute__((swift_name("regFunc")));
@end

__attribute__((swift_name("SelectClause0")))
@protocol XNetworking_fearlesswalletSelectClause0 <XNetworking_fearlesswalletSelectClause>
@required
@end

__attribute__((swift_name("SelectClause1")))
@protocol XNetworking_fearlesswalletSelectClause1 <XNetworking_fearlesswalletSelectClause>
@required
@end

__attribute__((swift_name("SelectClause2")))
@protocol XNetworking_fearlesswalletSelectClause2 <XNetworking_fearlesswalletSelectClause>
@required
@end

__attribute__((swift_name("SelectInstance")))
@protocol XNetworking_fearlesswalletSelectInstance
@required
- (void)disposeOnCompletionDisposableHandle:(id<XNetworking_fearlesswalletDisposableHandle>)disposableHandle __attribute__((swift_name("disposeOnCompletion(disposableHandle:)")));
- (void)selectInRegistrationPhaseInternalResult:(id _Nullable)internalResult __attribute__((swift_name("selectInRegistrationPhase(internalResult:)")));
- (BOOL)trySelectClauseObject:(id)clauseObject result:(id _Nullable)result __attribute__((swift_name("trySelect(clauseObject:result:)")));
@property (readonly) id<XNetworking_fearlesswalletKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end

__attribute__((swift_name("OpDescriptor_")))
@interface XNetworking_fearlesswalletOpDescriptor_ : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletAtomicOp_<id> * _Nullable atomicOp __attribute__((swift_name("atomicOp")));
@end

__attribute__((swift_name("AtomicOp_")))
@interface XNetworking_fearlesswalletAtomicOp_<__contravariant T> : XNetworking_fearlesswalletOpDescriptor_
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeAffected:(T _Nullable)affected failure:(id _Nullable)failure __attribute__((swift_name("complete(affected:failure:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (id _Nullable)prepareAffected:(T _Nullable)affected __attribute__((swift_name("prepare(affected:)")));
@property (readonly) XNetworking_fearlesswalletAtomicOp_<id> *atomicOp __attribute__((swift_name("atomicOp")));
@end

__attribute__((swift_name("LockFreeLinkedListNode_")))
@interface XNetworking_fearlesswalletLockFreeLinkedListNode_ : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addLastNode:(XNetworking_fearlesswalletLockFreeLinkedListNode_ *)node __attribute__((swift_name("addLast(node:)")));
- (BOOL)addLastIfNode:(XNetworking_fearlesswalletLockFreeLinkedListNode_ *)node condition:(XNetworking_fearlesswalletBoolean *(^)(void))condition __attribute__((swift_name("addLastIf(node:condition:)")));
- (BOOL)addOneIfEmptyNode:(XNetworking_fearlesswalletLockFreeLinkedListNode_ *)node __attribute__((swift_name("addOneIfEmpty(node:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletLockFreeLinkedListNode_ * _Nullable)nextIfRemoved __attribute__((swift_name("nextIfRemoved()")));
- (BOOL)remove __attribute__((swift_name("remove()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@property (readonly) id next __attribute__((swift_name("next")));
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode_ *nextNode __attribute__((swift_name("nextNode")));
@property (readonly) XNetworking_fearlesswalletLockFreeLinkedListNode_ *prevNode __attribute__((swift_name("prevNode")));
@end

__attribute__((swift_name("LockFreeLinkedListHead_")))
@interface XNetworking_fearlesswalletLockFreeLinkedListHead_ : XNetworking_fearlesswalletLockFreeLinkedListNode_
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)forEachBlock:(void (^)(XNetworking_fearlesswalletLockFreeLinkedListNode_ *))block __attribute__((swift_name("forEach(block:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletLockFreeLinkedListNode_ * _Nullable)nextIfRemoved __attribute__((swift_name("nextIfRemoved()")));
- (BOOL)remove __attribute__((swift_name("remove()")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@end

__attribute__((swift_name("MainDispatcherFactory")))
@protocol XNetworking_fearlesswalletMainDispatcherFactory
@required
- (XNetworking_fearlesswalletMainCoroutineDispatcher *)createDispatcherAllFactories:(NSArray<id<XNetworking_fearlesswalletMainDispatcherFactory>> *)allFactories __attribute__((swift_name("createDispatcher(allFactories:)")));
- (NSString * _Nullable)hintOnError __attribute__((swift_name("hintOnError()")));
@property (readonly) int32_t loadPriority __attribute__((swift_name("loadPriority")));
@end

__attribute__((swift_name("SynchronizedObject")))
@interface XNetworking_fearlesswalletSynchronizedObject : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)lock __attribute__((swift_name("lock()")));
- (BOOL)tryLock __attribute__((swift_name("tryLock()")));
- (void)unlock __attribute__((swift_name("unlock()")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly, getter=lock_) XNetworking_fearlesswalletKotlinAtomicReference<XNetworking_fearlesswalletSynchronizedObjectLockState *> *lock __attribute__((swift_name("lock")));
@end

__attribute__((swift_name("ThreadSafeHeap")))
@interface XNetworking_fearlesswalletThreadSafeHeap<T> : XNetworking_fearlesswalletSynchronizedObject
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addLastNode:(T)node __attribute__((swift_name("addLast(node:)")));
- (BOOL)addLastIfNode:(T)node cond:(XNetworking_fearlesswalletBoolean *(^)(T _Nullable))cond __attribute__((swift_name("addLastIf(node:cond:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (T _Nullable)findPredicate:(XNetworking_fearlesswalletBoolean *(^)(T))predicate __attribute__((swift_name("find(predicate:)")));
- (T _Nullable)peek __attribute__((swift_name("peek()")));
- (BOOL)removeNode:(T)node __attribute__((swift_name("remove(node:)")));
- (T _Nullable)removeFirstIfPredicate:(XNetworking_fearlesswalletBoolean *(^)(T))predicate __attribute__((swift_name("removeFirstIf(predicate:)")));
- (T _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("ThreadSafeHeapNode")))
@protocol XNetworking_fearlesswalletThreadSafeHeapNode
@required
@property XNetworking_fearlesswalletThreadSafeHeap<id> * _Nullable heap __attribute__((swift_name("heap")));
@property int32_t index __attribute__((swift_name("index")));
@end

__attribute__((swift_name("Mutex")))
@protocol XNetworking_fearlesswalletMutex
@required
- (BOOL)holdsLockOwner:(id)owner __attribute__((swift_name("holdsLock(owner:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)lockOwner:(id _Nullable)owner completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("lock(owner:completionHandler:)")));
- (BOOL)tryLockOwner:(id _Nullable)owner __attribute__((swift_name("tryLock(owner:)")));
- (void)unlockOwner:(id _Nullable)owner __attribute__((swift_name("unlock(owner:)")));
@property (readonly) BOOL isLocked __attribute__((swift_name("isLocked")));
@property (readonly) id<XNetworking_fearlesswalletSelectClause2> onLock __attribute__((swift_name("onLock"))) __attribute__((deprecated("Mutex.onLock deprecated without replacement. For additional details please refer to #2794")));
@end

__attribute__((swift_name("Semaphore")))
@protocol XNetworking_fearlesswalletSemaphore
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)acquireWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("acquire(completionHandler:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (BOOL)tryAcquire __attribute__((swift_name("tryAcquire()")));
@property (readonly) int32_t availablePermits __attribute__((swift_name("availablePermits")));
@end

__attribute__((swift_name("ColumnAdapter")))
@protocol XNetworking_fearlesswalletColumnAdapter
@required
- (id)decodeDatabaseValue:(id _Nullable)databaseValue __attribute__((swift_name("decode(databaseValue:)")));
- (id _Nullable)encodeValue:(id)value __attribute__((swift_name("encode(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EnumColumnAdapter")))
@interface XNetworking_fearlesswalletEnumColumnAdapter<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletColumnAdapter>
- (T)decodeDatabaseValue:(NSString *)databaseValue __attribute__((swift_name("decode(databaseValue:)")));
- (NSString *)encodeValue:(T)value __attribute__((swift_name("encode(value:)")));
@end

__attribute__((swift_name("Query")))
@interface XNetworking_fearlesswalletQuery<__covariant RowType> : XNetworking_fearlesswalletBase
- (instancetype)initWithQueries:(NSMutableArray<XNetworking_fearlesswalletQuery<id> *> *)queries mapper:(RowType (^)(id<XNetworking_fearlesswalletSqlCursor>))mapper __attribute__((swift_name("init(queries:mapper:)"))) __attribute__((objc_designated_initializer));
- (void)addListenerListener:(id<XNetworking_fearlesswalletQueryListener>)listener __attribute__((swift_name("addListener(listener:)")));
- (id<XNetworking_fearlesswalletSqlCursor>)execute __attribute__((swift_name("execute()")));
- (NSArray<RowType> *)executeAsList __attribute__((swift_name("executeAsList()")));
- (RowType)executeAsOne __attribute__((swift_name("executeAsOne()")));
- (RowType _Nullable)executeAsOneOrNull __attribute__((swift_name("executeAsOneOrNull()")));
- (void)notifyDataChanged __attribute__((swift_name("notifyDataChanged()")));
- (void)removeListenerListener:(id<XNetworking_fearlesswalletQueryListener>)listener __attribute__((swift_name("removeListener(listener:)")));
@property (readonly) RowType (^mapper)(id<XNetworking_fearlesswalletSqlCursor>) __attribute__((swift_name("mapper")));
@end

__attribute__((swift_name("QueryListener")))
@protocol XNetworking_fearlesswalletQueryListener
@required
- (void)queryResultsChanged __attribute__((swift_name("queryResultsChanged()")));
@end

__attribute__((swift_name("TransactionCallbacks")))
@protocol XNetworking_fearlesswalletTransactionCallbacks
@required
- (void)afterCommitFunction:(void (^)(void))function __attribute__((swift_name("afterCommit(function:)")));
- (void)afterRollbackFunction:(void (^)(void))function __attribute__((swift_name("afterRollback(function:)")));
@end

__attribute__((swift_name("TransacterTransaction")))
@interface XNetworking_fearlesswalletTransacterTransaction : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletTransactionCallbacks>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)afterCommitFunction:(void (^)(void))function __attribute__((swift_name("afterCommit(function:)")));
- (void)afterRollbackFunction:(void (^)(void))function __attribute__((swift_name("afterRollback(function:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)endTransactionSuccessful:(BOOL)successful __attribute__((swift_name("endTransaction(successful:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) XNetworking_fearlesswalletTransacterTransaction * _Nullable enclosingTransaction __attribute__((swift_name("enclosingTransaction")));
@end

__attribute__((swift_name("TransacterImpl")))
@interface XNetworking_fearlesswalletTransacterImpl : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletTransacter>
- (instancetype)initWithDriver:(id<XNetworking_fearlesswalletSqlDriver>)driver __attribute__((swift_name("init(driver:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)createArgumentsCount:(int32_t)count __attribute__((swift_name("createArguments(count:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)notifyQueriesIdentifier:(int32_t)identifier queryList:(NSArray<XNetworking_fearlesswalletQuery<id> *> *(^)(void))queryList __attribute__((swift_name("notifyQueries(identifier:queryList:)")));
- (void)transactionNoEnclosing:(BOOL)noEnclosing body:(void (^)(id<XNetworking_fearlesswalletTransactionWithoutReturn>))body __attribute__((swift_name("transaction(noEnclosing:body:)")));
- (id _Nullable)transactionWithResultNoEnclosing:(BOOL)noEnclosing bodyWithReturn:(id _Nullable (^)(id<XNetworking_fearlesswalletTransactionWithReturn>))bodyWithReturn __attribute__((swift_name("transactionWithResult(noEnclosing:bodyWithReturn:)")));
@end

__attribute__((swift_name("TransactionWithReturn")))
@protocol XNetworking_fearlesswalletTransactionWithReturn <XNetworking_fearlesswalletTransactionCallbacks>
@required
- (void)rollbackReturnValue:(id _Nullable)returnValue __attribute__((swift_name("rollback(returnValue:)")));
- (id _Nullable)transactionBody:(id _Nullable (^)(id<XNetworking_fearlesswalletTransactionWithReturn>))body __attribute__((swift_name("transaction(body:)")));
@end

__attribute__((swift_name("TransactionWithoutReturn")))
@protocol XNetworking_fearlesswalletTransactionWithoutReturn <XNetworking_fearlesswalletTransactionCallbacks>
@required
- (void)rollback __attribute__((swift_name("rollback()")));
- (void)transactionBody_:(void (^)(id<XNetworking_fearlesswalletTransactionWithoutReturn>))body __attribute__((swift_name("transaction(body_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AfterVersion")))
@interface XNetworking_fearlesswalletAfterVersion : XNetworking_fearlesswalletBase
- (instancetype)initWithAfterVersion:(int32_t)afterVersion block:(void (^)(void))block __attribute__((swift_name("init(afterVersion:block:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AfterVersionWithDriver")))
@interface XNetworking_fearlesswalletAfterVersionWithDriver : XNetworking_fearlesswalletBase
- (instancetype)initWithAfterVersion:(int32_t)afterVersion block:(void (^)(id<XNetworking_fearlesswalletSqlDriver>))block __attribute__((swift_name("init(afterVersion:block:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("SqlCursor")))
@protocol XNetworking_fearlesswalletSqlCursor <XNetworking_fearlesswalletCloseable_>
@required
- (XNetworking_fearlesswalletKotlinByteArray * _Nullable)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (XNetworking_fearlesswalletDouble * _Nullable)getDoubleIndex:(int32_t)index __attribute__((swift_name("getDouble(index:)")));
- (XNetworking_fearlesswalletLong * _Nullable)getLongIndex:(int32_t)index __attribute__((swift_name("getLong(index:)")));
- (NSString * _Nullable)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@end

__attribute__((swift_name("SqlDriverSchema")))
@protocol XNetworking_fearlesswalletSqlDriverSchema
@required
- (void)createDriver:(id<XNetworking_fearlesswalletSqlDriver>)driver __attribute__((swift_name("create(driver:)")));
- (void)migrateDriver:(id<XNetworking_fearlesswalletSqlDriver>)driver oldVersion:(int32_t)oldVersion newVersion:(int32_t)newVersion __attribute__((swift_name("migrate(driver:oldVersion:newVersion:)")));
@property (readonly) int32_t version_ __attribute__((swift_name("version_")));
@end

__attribute__((swift_name("SqlPreparedStatement")))
@protocol XNetworking_fearlesswalletSqlPreparedStatement
@required
- (void)bindBytesIndex:(int32_t)index bytes:(XNetworking_fearlesswalletKotlinByteArray * _Nullable)bytes __attribute__((swift_name("bindBytes(index:bytes:)")));
- (void)bindDoubleIndex:(int32_t)index double:(XNetworking_fearlesswalletDouble * _Nullable)double_ __attribute__((swift_name("bindDouble(index:double:)")));
- (void)bindLongIndex:(int32_t)index long:(XNetworking_fearlesswalletLong * _Nullable)long_ __attribute__((swift_name("bindLong(index:long:)")));
- (void)bindStringIndex:(int32_t)index string:(NSString * _Nullable)string __attribute__((swift_name("bindString(index:string:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Atomic")))
@interface XNetworking_fearlesswalletAtomic<V> : XNetworking_fearlesswalletBase
- (instancetype)initWithValue:(V _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (V _Nullable)get __attribute__((swift_name("get()")));
- (void)setValue:(V _Nullable)value __attribute__((swift_name("set(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicBoolean")))
@interface XNetworking_fearlesswalletAtomicBoolean : XNetworking_fearlesswalletBase
- (instancetype)initWithValue:(BOOL)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
- (BOOL)get __attribute__((swift_name("get()")));
- (void)setValue:(BOOL)value __attribute__((swift_name("set(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LogSqliteDriver")))
@interface XNetworking_fearlesswalletLogSqliteDriver : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSqlDriver>
- (instancetype)initWithSqlDriver:(id<XNetworking_fearlesswalletSqlDriver>)sqlDriver logger:(void (^)(NSString *))logger __attribute__((swift_name("init(sqlDriver:logger:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (XNetworking_fearlesswalletTransacterTransaction * _Nullable)currentTransaction __attribute__((swift_name("currentTransaction()")));
- (void)executeIdentifier:(XNetworking_fearlesswalletInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<XNetworking_fearlesswalletSqlPreparedStatement>))binders __attribute__((swift_name("execute(identifier:sql:parameters:binders:)")));
- (id<XNetworking_fearlesswalletSqlCursor>)executeQueryIdentifier:(XNetworking_fearlesswalletInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<XNetworking_fearlesswalletSqlPreparedStatement>))binders __attribute__((swift_name("executeQuery(identifier:sql:parameters:binders:)")));
- (XNetworking_fearlesswalletTransacterTransaction *)doNewTransaction __attribute__((swift_name("doNewTransaction()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatementParameterInterceptor")))
@interface XNetworking_fearlesswalletStatementParameterInterceptor : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSqlPreparedStatement>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)bindBytesIndex:(int32_t)index bytes:(XNetworking_fearlesswalletKotlinByteArray * _Nullable)bytes __attribute__((swift_name("bindBytes(index:bytes:)")));
- (void)bindDoubleIndex:(int32_t)index double:(XNetworking_fearlesswalletDouble * _Nullable)double_ __attribute__((swift_name("bindDouble(index:double:)")));
- (void)bindLongIndex:(int32_t)index long:(XNetworking_fearlesswalletLong * _Nullable)long_ __attribute__((swift_name("bindLong(index:long:)")));
- (void)bindStringIndex:(int32_t)index string:(NSString * _Nullable)string __attribute__((swift_name("bindString(index:string:)")));
- (NSArray<id> *)getAndClearParameters __attribute__((swift_name("getAndClearParameters()")));
@end

__attribute__((swift_name("Settings")))
@protocol XNetworking_fearlesswalletSettings
@required
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)getBooleanKey:(NSString *)key defaultValue:(BOOL)defaultValue __attribute__((swift_name("getBoolean(key:defaultValue:)")));
- (XNetworking_fearlesswalletBoolean * _Nullable)getBooleanOrNullKey:(NSString *)key __attribute__((swift_name("getBooleanOrNull(key:)")));
- (double)getDoubleKey:(NSString *)key defaultValue:(double)defaultValue __attribute__((swift_name("getDouble(key:defaultValue:)")));
- (XNetworking_fearlesswalletDouble * _Nullable)getDoubleOrNullKey:(NSString *)key __attribute__((swift_name("getDoubleOrNull(key:)")));
- (float)getFloatKey:(NSString *)key defaultValue:(float)defaultValue __attribute__((swift_name("getFloat(key:defaultValue:)")));
- (XNetworking_fearlesswalletFloat * _Nullable)getFloatOrNullKey:(NSString *)key __attribute__((swift_name("getFloatOrNull(key:)")));
- (int32_t)getIntKey:(NSString *)key defaultValue:(int32_t)defaultValue __attribute__((swift_name("getInt(key:defaultValue:)")));
- (XNetworking_fearlesswalletInt * _Nullable)getIntOrNullKey:(NSString *)key __attribute__((swift_name("getIntOrNull(key:)")));
- (int64_t)getLongKey:(NSString *)key defaultValue:(int64_t)defaultValue __attribute__((swift_name("getLong(key:defaultValue:)")));
- (XNetworking_fearlesswalletLong * _Nullable)getLongOrNullKey:(NSString *)key __attribute__((swift_name("getLongOrNull(key:)")));
- (NSString *)getStringKey:(NSString *)key defaultValue:(NSString *)defaultValue __attribute__((swift_name("getString(key:defaultValue:)")));
- (NSString * _Nullable)getStringOrNullKey:(NSString *)key __attribute__((swift_name("getStringOrNull(key:)")));
- (BOOL)hasKeyKey:(NSString *)key __attribute__((swift_name("hasKey(key:)")));
- (void)putBooleanKey:(NSString *)key value:(BOOL)value __attribute__((swift_name("putBoolean(key:value:)")));
- (void)putDoubleKey:(NSString *)key value:(double)value __attribute__((swift_name("putDouble(key:value:)")));
- (void)putFloatKey:(NSString *)key value:(float)value __attribute__((swift_name("putFloat(key:value:)")));
- (void)putIntKey:(NSString *)key value:(int32_t)value __attribute__((swift_name("putInt(key:value:)")));
- (void)putLongKey:(NSString *)key value:(int64_t)value __attribute__((swift_name("putLong(key:value:)")));
- (void)putStringKey:(NSString *)key value:(NSString *)value __attribute__((swift_name("putString(key:value:)")));
- (void)removeKey_:(NSString *)key __attribute__((swift_name("remove(key_:)")));
@property (readonly) NSSet<NSString *> *keys __attribute__((swift_name("keys")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KeychainSettings")))
@interface XNetworking_fearlesswalletKeychainSettings : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSettings>
- (instancetype)initWithService:(NSString *)service __attribute__((swift_name("init(service:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithDefaultProperties:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletKotlinPair<id, id> *> *)defaultProperties __attribute__((swift_name("init(defaultProperties:)"))) __attribute__((objc_designated_initializer));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)getBooleanKey:(NSString *)key defaultValue:(BOOL)defaultValue __attribute__((swift_name("getBoolean(key:defaultValue:)")));
- (XNetworking_fearlesswalletBoolean * _Nullable)getBooleanOrNullKey:(NSString *)key __attribute__((swift_name("getBooleanOrNull(key:)")));
- (double)getDoubleKey:(NSString *)key defaultValue:(double)defaultValue __attribute__((swift_name("getDouble(key:defaultValue:)")));
- (XNetworking_fearlesswalletDouble * _Nullable)getDoubleOrNullKey:(NSString *)key __attribute__((swift_name("getDoubleOrNull(key:)")));
- (float)getFloatKey:(NSString *)key defaultValue:(float)defaultValue __attribute__((swift_name("getFloat(key:defaultValue:)")));
- (XNetworking_fearlesswalletFloat * _Nullable)getFloatOrNullKey:(NSString *)key __attribute__((swift_name("getFloatOrNull(key:)")));
- (int32_t)getIntKey:(NSString *)key defaultValue:(int32_t)defaultValue __attribute__((swift_name("getInt(key:defaultValue:)")));
- (XNetworking_fearlesswalletInt * _Nullable)getIntOrNullKey:(NSString *)key __attribute__((swift_name("getIntOrNull(key:)")));
- (int64_t)getLongKey:(NSString *)key defaultValue:(int64_t)defaultValue __attribute__((swift_name("getLong(key:defaultValue:)")));
- (XNetworking_fearlesswalletLong * _Nullable)getLongOrNullKey:(NSString *)key __attribute__((swift_name("getLongOrNull(key:)")));
- (NSString *)getStringKey:(NSString *)key defaultValue:(NSString *)defaultValue __attribute__((swift_name("getString(key:defaultValue:)")));
- (NSString * _Nullable)getStringOrNullKey:(NSString *)key __attribute__((swift_name("getStringOrNull(key:)")));
- (BOOL)hasKeyKey:(NSString *)key __attribute__((swift_name("hasKey(key:)")));
- (void)putBooleanKey:(NSString *)key value:(BOOL)value __attribute__((swift_name("putBoolean(key:value:)")));
- (void)putDoubleKey:(NSString *)key value:(double)value __attribute__((swift_name("putDouble(key:value:)")));
- (void)putFloatKey:(NSString *)key value:(float)value __attribute__((swift_name("putFloat(key:value:)")));
- (void)putIntKey:(NSString *)key value:(int32_t)value __attribute__((swift_name("putInt(key:value:)")));
- (void)putLongKey:(NSString *)key value:(int64_t)value __attribute__((swift_name("putLong(key:value:)")));
- (void)putStringKey:(NSString *)key value:(NSString *)value __attribute__((swift_name("putString(key:value:)")));
- (void)removeKey_:(NSString *)key __attribute__((swift_name("remove(key_:)")));
@property (readonly) NSSet<NSString *> *keys __attribute__((swift_name("keys")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("SettingsFactory")))
@protocol XNetworking_fearlesswalletSettingsFactory
@required
- (id<XNetworking_fearlesswalletSettings>)createName:(NSString * _Nullable)name __attribute__((swift_name("create(name:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KeychainSettings.Factory")))
@interface XNetworking_fearlesswalletKeychainSettingsFactory : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSettingsFactory>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletKeychainSettings *)createName:(NSString * _Nullable)name __attribute__((swift_name("create(name:)")));
@end

__attribute__((swift_name("ObservableSettings")))
@protocol XNetworking_fearlesswalletObservableSettings <XNetworking_fearlesswalletSettings>
@required
- (id<XNetworking_fearlesswalletSettingsListener>)addBooleanListenerKey:(NSString *)key defaultValue:(BOOL)defaultValue callback:(void (^)(XNetworking_fearlesswalletBoolean *))callback __attribute__((swift_name("addBooleanListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addBooleanOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable))callback __attribute__((swift_name("addBooleanOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addDoubleListenerKey:(NSString *)key defaultValue:(double)defaultValue callback:(void (^)(XNetworking_fearlesswalletDouble *))callback __attribute__((swift_name("addDoubleListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addDoubleOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletDouble * _Nullable))callback __attribute__((swift_name("addDoubleOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addFloatListenerKey:(NSString *)key defaultValue:(float)defaultValue callback:(void (^)(XNetworking_fearlesswalletFloat *))callback __attribute__((swift_name("addFloatListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addFloatOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletFloat * _Nullable))callback __attribute__((swift_name("addFloatOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addIntListenerKey:(NSString *)key defaultValue:(int32_t)defaultValue callback:(void (^)(XNetworking_fearlesswalletInt *))callback __attribute__((swift_name("addIntListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addIntOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletInt * _Nullable))callback __attribute__((swift_name("addIntOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addLongListenerKey:(NSString *)key defaultValue:(int64_t)defaultValue callback:(void (^)(XNetworking_fearlesswalletLong *))callback __attribute__((swift_name("addLongListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addLongOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletLong * _Nullable))callback __attribute__((swift_name("addLongOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addStringListenerKey:(NSString *)key defaultValue:(NSString *)defaultValue callback:(void (^)(NSString *))callback __attribute__((swift_name("addStringListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addStringOrNullListenerKey:(NSString *)key callback:(void (^)(NSString * _Nullable))callback __attribute__((swift_name("addStringOrNullListener(key:callback:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NSUserDefaultsSettings")))
@interface XNetworking_fearlesswalletNSUserDefaultsSettings : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletObservableSettings>
- (instancetype)initWithDelegate:(NSUserDefaults *)delegate __attribute__((swift_name("init(delegate:)"))) __attribute__((objc_designated_initializer));
- (id<XNetworking_fearlesswalletSettingsListener>)addBooleanListenerKey:(NSString *)key defaultValue:(BOOL)defaultValue callback:(void (^)(XNetworking_fearlesswalletBoolean *))callback __attribute__((swift_name("addBooleanListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addBooleanOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable))callback __attribute__((swift_name("addBooleanOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addDoubleListenerKey:(NSString *)key defaultValue:(double)defaultValue callback:(void (^)(XNetworking_fearlesswalletDouble *))callback __attribute__((swift_name("addDoubleListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addDoubleOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletDouble * _Nullable))callback __attribute__((swift_name("addDoubleOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addFloatListenerKey:(NSString *)key defaultValue:(float)defaultValue callback:(void (^)(XNetworking_fearlesswalletFloat *))callback __attribute__((swift_name("addFloatListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addFloatOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletFloat * _Nullable))callback __attribute__((swift_name("addFloatOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addIntListenerKey:(NSString *)key defaultValue:(int32_t)defaultValue callback:(void (^)(XNetworking_fearlesswalletInt *))callback __attribute__((swift_name("addIntListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addIntOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletInt * _Nullable))callback __attribute__((swift_name("addIntOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addLongListenerKey:(NSString *)key defaultValue:(int64_t)defaultValue callback:(void (^)(XNetworking_fearlesswalletLong *))callback __attribute__((swift_name("addLongListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addLongOrNullListenerKey:(NSString *)key callback:(void (^)(XNetworking_fearlesswalletLong * _Nullable))callback __attribute__((swift_name("addLongOrNullListener(key:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addStringListenerKey:(NSString *)key defaultValue:(NSString *)defaultValue callback:(void (^)(NSString *))callback __attribute__((swift_name("addStringListener(key:defaultValue:callback:)")));
- (id<XNetworking_fearlesswalletSettingsListener>)addStringOrNullListenerKey:(NSString *)key callback:(void (^)(NSString * _Nullable))callback __attribute__((swift_name("addStringOrNullListener(key:callback:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)getBooleanKey:(NSString *)key defaultValue:(BOOL)defaultValue __attribute__((swift_name("getBoolean(key:defaultValue:)")));
- (XNetworking_fearlesswalletBoolean * _Nullable)getBooleanOrNullKey:(NSString *)key __attribute__((swift_name("getBooleanOrNull(key:)")));
- (double)getDoubleKey:(NSString *)key defaultValue:(double)defaultValue __attribute__((swift_name("getDouble(key:defaultValue:)")));
- (XNetworking_fearlesswalletDouble * _Nullable)getDoubleOrNullKey:(NSString *)key __attribute__((swift_name("getDoubleOrNull(key:)")));
- (float)getFloatKey:(NSString *)key defaultValue:(float)defaultValue __attribute__((swift_name("getFloat(key:defaultValue:)")));
- (XNetworking_fearlesswalletFloat * _Nullable)getFloatOrNullKey:(NSString *)key __attribute__((swift_name("getFloatOrNull(key:)")));
- (int32_t)getIntKey:(NSString *)key defaultValue:(int32_t)defaultValue __attribute__((swift_name("getInt(key:defaultValue:)")));
- (XNetworking_fearlesswalletInt * _Nullable)getIntOrNullKey:(NSString *)key __attribute__((swift_name("getIntOrNull(key:)")));
- (int64_t)getLongKey:(NSString *)key defaultValue:(int64_t)defaultValue __attribute__((swift_name("getLong(key:defaultValue:)")));
- (XNetworking_fearlesswalletLong * _Nullable)getLongOrNullKey:(NSString *)key __attribute__((swift_name("getLongOrNull(key:)")));
- (NSString *)getStringKey:(NSString *)key defaultValue:(NSString *)defaultValue __attribute__((swift_name("getString(key:defaultValue:)")));
- (NSString * _Nullable)getStringOrNullKey:(NSString *)key __attribute__((swift_name("getStringOrNull(key:)")));
- (BOOL)hasKeyKey:(NSString *)key __attribute__((swift_name("hasKey(key:)")));
- (void)putBooleanKey:(NSString *)key value:(BOOL)value __attribute__((swift_name("putBoolean(key:value:)")));
- (void)putDoubleKey:(NSString *)key value:(double)value __attribute__((swift_name("putDouble(key:value:)")));
- (void)putFloatKey:(NSString *)key value:(float)value __attribute__((swift_name("putFloat(key:value:)")));
- (void)putIntKey:(NSString *)key value:(int32_t)value __attribute__((swift_name("putInt(key:value:)")));
- (void)putLongKey:(NSString *)key value:(int64_t)value __attribute__((swift_name("putLong(key:value:)")));
- (void)putStringKey:(NSString *)key value:(NSString *)value __attribute__((swift_name("putString(key:value:)")));
- (void)removeKey_:(NSString *)key __attribute__((swift_name("remove(key_:)")));
@property (readonly) NSSet<NSString *> *keys __attribute__((swift_name("keys")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NSUserDefaultsSettings.Factory")))
@interface XNetworking_fearlesswalletNSUserDefaultsSettingsFactory : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSettingsFactory>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletNSUserDefaultsSettings *)createName:(NSString * _Nullable)name __attribute__((swift_name("create(name:)")));
@end

__attribute__((swift_name("SettingsListener")))
@protocol XNetworking_fearlesswalletSettingsListener
@required
- (void)deactivate __attribute__((swift_name("deactivate()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NSUserDefaultsSettings.Listener")))
@interface XNetworking_fearlesswalletNSUserDefaultsSettingsListener : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSettingsListener>
- (void)deactivate __attribute__((swift_name("deactivate()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingsCompanion")))
@interface XNetworking_fearlesswalletSettingsCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSettingsCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("AbstractSharedLinkedList")))
@interface XNetworking_fearlesswalletAbstractSharedLinkedList : NSObject
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CopyOnIterateLinkedList")))
@interface XNetworking_fearlesswalletCopyOnIterateLinkedList : NSObject
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("CopyOnWriteList")))
@interface XNetworking_fearlesswalletCopyOnWriteList : NSObject
@end

__attribute__((swift_name("LruCache")))
@protocol XNetworking_fearlesswalletLruCache
@required
- (BOOL)existsKey:(id _Nullable)key __attribute__((swift_name("exists(key:)")));
- (id _Nullable)getKey__:(id _Nullable)key __attribute__((swift_name("get(key__:)")));
- (id _Nullable)putKey:(id _Nullable)key value_:(id _Nullable)value __attribute__((swift_name("put(key:value_:)")));
- (id _Nullable)removeKey:(id _Nullable)key skipCallback:(BOOL)skipCallback __attribute__((swift_name("remove(key:skipCallback:)")));
- (void)removeAllSkipCallback:(BOOL)skipCallback __attribute__((swift_name("removeAll(skipCallback:)")));
@property (readonly, getter=entries_) XNetworking_fearlesswalletMutableSet<id<XNetworking_fearlesswalletKotlinMutableMapMutableEntry>> *entries __attribute__((swift_name("entries")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ObjectPool_")))
@interface XNetworking_fearlesswalletObjectPool<T> : XNetworking_fearlesswalletBase
- (instancetype)initWithMaxSize:(int32_t)maxSize createBlock:(T _Nullable (^)(void))createBlock cleanupBlock:(void (^ _Nullable)(T _Nullable))cleanupBlock __attribute__((swift_name("init(maxSize:createBlock:cleanupBlock:)"))) __attribute__((objc_designated_initializer));
- (void)clear __attribute__((swift_name("clear()")));
- (T _Nullable)pop __attribute__((swift_name("pop()")));
- (BOOL)pushT:(T _Nullable)t __attribute__((swift_name("push(t:)")));
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("SharedHashMap")))
@interface XNetworking_fearlesswalletSharedHashMap : NSObject
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("SharedLinkedList")))
@interface XNetworking_fearlesswalletSharedLinkedList : NSObject
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedLruCache")))
@interface XNetworking_fearlesswalletSharedLruCache<K, V> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletLruCache>
- (instancetype)initWithMaxCacheSize:(int32_t)maxCacheSize onRemove:(void (^)(id<XNetworking_fearlesswalletKotlinMutableMapMutableEntry>))onRemove __attribute__((swift_name("init(maxCacheSize:onRemove:)"))) __attribute__((objc_designated_initializer));
- (BOOL)existsKey:(K _Nullable)key __attribute__((swift_name("exists(key:)")));
- (V _Nullable)getKey__:(K _Nullable)key __attribute__((swift_name("get(key__:)")));
- (V _Nullable)putKey:(K _Nullable)key value_:(V _Nullable)value __attribute__((swift_name("put(key:value_:)")));
- (V _Nullable)removeKey:(K _Nullable)key skipCallback:(BOOL)skipCallback __attribute__((swift_name("remove(key:skipCallback:)")));
- (void)removeAllSkipCallback:(BOOL)skipCallback __attribute__((swift_name("removeAll(skipCallback:)")));
@property (readonly, getter=entries_) XNetworking_fearlesswalletMutableSet<id<XNetworking_fearlesswalletKotlinMutableMapMutableEntry>> *entries __attribute__((swift_name("entries")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedLruCacheCacheEntry")))
@interface XNetworking_fearlesswalletSharedLruCacheCacheEntry<K, V> : XNetworking_fearlesswalletBase
- (instancetype)initWithV:(V _Nullable)v node:(XNetworking_fearlesswalletAbstractSharedLinkedListNode<K> *)node __attribute__((swift_name("init(v:node:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletSharedLruCacheCacheEntry<K, V> *)doCopyV:(V _Nullable)v node:(XNetworking_fearlesswalletAbstractSharedLinkedListNode<K> *)node __attribute__((swift_name("doCopy(v:node:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletAbstractSharedLinkedListNode<K> *node __attribute__((swift_name("node")));
@property (readonly) V _Nullable v __attribute__((swift_name("v")));
@end

__attribute__((swift_name("KotlinMapEntry")))
@protocol XNetworking_fearlesswalletKotlinMapEntry
@required
@property (readonly) id _Nullable key __attribute__((swift_name("key")));
@property (readonly) id _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("KotlinMutableDictionaryMutableEntry")))
@protocol XNetworking_fearlesswalletKotlinMutableMapMutableEntry <XNetworking_fearlesswalletKotlinMapEntry>
@required
- (id _Nullable)setValueNewValue:(id _Nullable)newValue __attribute__((swift_name("setValue(newValue:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedLruCacheLruEntry")))
@interface XNetworking_fearlesswalletSharedLruCacheLruEntry<K, V> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinMutableMapMutableEntry>
- (instancetype)initWithKey:(K _Nullable)key value:(V _Nullable)value __attribute__((swift_name("init(key:value:)"))) __attribute__((objc_designated_initializer));
- (V _Nullable)setValueNewValue:(V _Nullable)newValue __attribute__((swift_name("setValue(newValue:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) K _Nullable key __attribute__((swift_name("key")));
@property (readonly) V _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((unavailable("can't be imported")))
__attribute__((swift_name("SharedSet")))
@interface XNetworking_fearlesswalletSharedSet : NSObject
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicBoolean_")))
@interface XNetworking_fearlesswalletAtomicBoolean_ : XNetworking_fearlesswalletBase
- (instancetype)initWithValue_:(BOOL)value_ __attribute__((swift_name("init(value_:)"))) __attribute__((objc_designated_initializer));
- (BOOL)compareAndSetExpected:(BOOL)expected new:(BOOL)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
@property BOOL value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicInt")))
@interface XNetworking_fearlesswalletAtomicInt : XNetworking_fearlesswalletBase
- (instancetype)initWithInitialValue:(int32_t)initialValue __attribute__((swift_name("init(initialValue:)"))) __attribute__((objc_designated_initializer));
- (int32_t)addAndGetDelta:(int32_t)delta __attribute__((swift_name("addAndGet(delta:)")));
- (BOOL)compareAndSetExpected:(int32_t)expected new:(int32_t)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (int32_t)decrementAndGet __attribute__((swift_name("decrementAndGet()")));
- (int32_t)get __attribute__((swift_name("get()")));
- (int32_t)incrementAndGet __attribute__((swift_name("incrementAndGet()")));
- (void)setNewValue:(int32_t)newValue __attribute__((swift_name("set(newValue:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicLong")))
@interface XNetworking_fearlesswalletAtomicLong : XNetworking_fearlesswalletBase
- (instancetype)initWithInitialValue:(int64_t)initialValue __attribute__((swift_name("init(initialValue:)"))) __attribute__((objc_designated_initializer));
- (int64_t)addAndGetDelta:(int64_t)delta __attribute__((swift_name("addAndGet(delta:)")));
- (BOOL)compareAndSetExpected:(int64_t)expected new:(int64_t)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (int64_t)decrementAndGet __attribute__((swift_name("decrementAndGet()")));
- (int64_t)get __attribute__((swift_name("get()")));
- (int64_t)incrementAndGet __attribute__((swift_name("incrementAndGet()")));
- (void)setNewValue:(int64_t)newValue __attribute__((swift_name("set(newValue:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicReference")))
@interface XNetworking_fearlesswalletAtomicReference<V> : XNetworking_fearlesswalletBase
- (instancetype)initWithInitialValue:(V _Nullable)initialValue __attribute__((swift_name("init(initialValue:)"))) __attribute__((objc_designated_initializer));
- (BOOL)compareAndSetExpected:(V _Nullable)expected new:(V _Nullable)new_ __attribute__((swift_name("compareAndSet(expected:new:)")));
- (V _Nullable)get __attribute__((swift_name("get()")));
- (void)setValue_:(V _Nullable)value_ __attribute__((swift_name("set(value_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GuardedStableRef")))
@interface XNetworking_fearlesswalletGuardedStableRef<T> : XNetworking_fearlesswalletBase
- (instancetype)initWithT:(T)t __attribute__((swift_name("init(t:)"))) __attribute__((objc_designated_initializer));
- (void)dispose __attribute__((swift_name("dispose()")));
@property (readonly) BOOL isDisposed __attribute__((swift_name("isDisposed")));
@property (readonly) T state __attribute__((swift_name("state")));
@end

__attribute__((swift_name("ThreadLocalRef")))
@interface XNetworking_fearlesswalletThreadLocalRef<T> : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (T _Nullable)get __attribute__((swift_name("get()")));
- (void)remove __attribute__((swift_name("remove()")));
- (void)setValue_:(T _Nullable)value __attribute__((swift_name("set(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ThreadRef")))
@interface XNetworking_fearlesswalletThreadRef : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)same __attribute__((swift_name("same()")));
@end

__attribute__((swift_name("BinaryFormat")))
@protocol XNetworking_fearlesswalletBinaryFormat <XNetworking_fearlesswalletSerialFormat>
@required
- (id _Nullable)decodeFromByteArrayDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer bytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("decodeFromByteArray(deserializer:bytes:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)encodeToByteArraySerializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToByteArray(serializer:value:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContextualSerializer")))
@interface XNetworking_fearlesswalletContextualSerializer<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKSerializer>
- (instancetype)initWithSerializableClass:(id<XNetworking_fearlesswalletKotlinKClass>)serializableClass __attribute__((swift_name("init(serializableClass:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSerializableClass:(id<XNetworking_fearlesswalletKotlinKClass>)serializableClass fallbackSerializer:(id<XNetworking_fearlesswalletKSerializer> _Nullable)fallbackSerializer typeArgumentsSerializers:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("init(serializableClass:fallbackSerializer:typeArgumentsSerializers:)"))) __attribute__((objc_designated_initializer));
- (T)deserializeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("SerializationException")))
@interface XNetworking_fearlesswalletSerializationException : XNetworking_fearlesswalletKotlinIllegalArgumentException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MissingFieldException")))
@interface XNetworking_fearlesswalletMissingFieldException : XNetworking_fearlesswalletSerializationException
- (instancetype)initWithMissingFields:(NSArray<NSString *> *)missingFields serialName:(NSString *)serialName __attribute__((swift_name("init(missingFields:serialName:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMissingField:(NSString *)missingField serialName:(NSString *)serialName __attribute__((swift_name("init(missingField:serialName:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMissingFields:(NSArray<NSString *> *)missingFields message:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(missingFields:message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSArray<NSString *> *missingFields __attribute__((swift_name("missingFields")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("AbstractPolymorphicSerializer")))
@interface XNetworking_fearlesswalletAbstractPolymorphicSerializer<T> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKSerializer>
- (T)deserializeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable)findPolymorphicSerializerOrNullDecoder:(id<XNetworking_fearlesswalletCompositeDecoder>)decoder klassName:(NSString * _Nullable)klassName __attribute__((swift_name("findPolymorphicSerializerOrNull(decoder:klassName:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (id<XNetworking_fearlesswalletSerializationStrategy> _Nullable)findPolymorphicSerializerOrNullEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(T)value __attribute__((swift_name("findPolymorphicSerializerOrNull(encoder:value:)")));
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(T)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKClass> baseClass __attribute__((swift_name("baseClass")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicSerializer")))
@interface XNetworking_fearlesswalletPolymorphicSerializer<T> : XNetworking_fearlesswalletAbstractPolymorphicSerializer<T>
- (instancetype)initWithBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass __attribute__((swift_name("init(baseClass:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKClass> baseClass __attribute__((swift_name("baseClass")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SealedClassSerializer")))
@interface XNetworking_fearlesswalletSealedClassSerializer<T> : XNetworking_fearlesswalletAbstractPolymorphicSerializer<T>
- (instancetype)initWithSerialName:(NSString *)serialName baseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass subclasses:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletKotlinKClass>> *)subclasses subclassSerializers:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletKSerializer>> *)subclassSerializers __attribute__((swift_name("init(serialName:baseClass:subclasses:subclassSerializers:)"))) __attribute__((objc_designated_initializer));
- (id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable)findPolymorphicSerializerOrNullDecoder:(id<XNetworking_fearlesswalletCompositeDecoder>)decoder klassName:(NSString * _Nullable)klassName __attribute__((swift_name("findPolymorphicSerializerOrNull(decoder:klassName:)")));
- (id<XNetworking_fearlesswalletSerializationStrategy> _Nullable)findPolymorphicSerializerOrNullEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(T)value __attribute__((swift_name("findPolymorphicSerializerOrNull(encoder:value:)")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKClass> baseClass __attribute__((swift_name("baseClass")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("AbstractCollectionSerializer")))
@interface XNetworking_fearlesswalletAbstractCollectionSerializer<Element, Collection, Builder> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKSerializer>

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (Builder _Nullable)builder __attribute__((swift_name("builder()")));
- (Collection _Nullable)deserializeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (Collection _Nullable)mergeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder previous:(Collection _Nullable)previous __attribute__((swift_name("merge(decoder:previous:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)readAllDecoder:(id<XNetworking_fearlesswalletCompositeDecoder>)decoder builder:(Builder _Nullable)builder startIndex:(int32_t)startIndex size:(int32_t)size __attribute__((swift_name("readAll(decoder:builder:startIndex:size:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)readElementDecoder:(id<XNetworking_fearlesswalletCompositeDecoder>)decoder index:(int32_t)index builder:(Builder _Nullable)builder checkIndex:(BOOL)checkIndex __attribute__((swift_name("readElement(decoder:index:builder:checkIndex:)")));
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(Collection _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)builderSize:(Builder _Nullable)receiver __attribute__((swift_name("builderSize(_:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)checkCapacity:(Builder _Nullable)receiver size:(int32_t)size __attribute__((swift_name("checkCapacity(_:size:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id<XNetworking_fearlesswalletKotlinIterator>)collectionIterator:(Collection _Nullable)receiver __attribute__((swift_name("collectionIterator(_:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)collectionSize:(Collection _Nullable)receiver __attribute__((swift_name("collectionSize(_:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (Builder _Nullable)toBuilder:(Collection _Nullable)receiver __attribute__((swift_name("toBuilder(_:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (Collection _Nullable)toResult:(Builder _Nullable)receiver __attribute__((swift_name("toResult(_:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("GeneratedSerializer")))
@protocol XNetworking_fearlesswalletGeneratedSerializer <XNetworking_fearlesswalletKSerializer>
@required
- (XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletKSerializer>> *)childSerializers __attribute__((swift_name("childSerializers()")));
- (XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletKSerializer>> *)typeParametersSerializers __attribute__((swift_name("typeParametersSerializers()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("MapLikeSerializer")))
@interface XNetworking_fearlesswalletMapLikeSerializer<Key, Value, Collection, Builder> : XNetworking_fearlesswalletAbstractCollectionSerializer<id<XNetworking_fearlesswalletKotlinMapEntry>, Collection, XNetworking_fearlesswalletMutableDictionary<id, id> *>

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)readAllDecoder:(id<XNetworking_fearlesswalletCompositeDecoder>)decoder builder:(XNetworking_fearlesswalletMutableDictionary<id, id> *)builder startIndex:(int32_t)startIndex size:(int32_t)size __attribute__((swift_name("readAll(decoder:builder:startIndex:size:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)readElementDecoder:(id<XNetworking_fearlesswalletCompositeDecoder>)decoder index:(int32_t)index builder:(XNetworking_fearlesswalletMutableDictionary<id, id> *)builder checkIndex:(BOOL)checkIndex __attribute__((swift_name("readElement(decoder:index:builder:checkIndex:)")));
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(Collection _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)insertKeyValuePair:(XNetworking_fearlesswalletMutableDictionary<id, id> *)receiver index:(int32_t)index key:(Key _Nullable)key value:(Value _Nullable)value __attribute__((swift_name("insertKeyValuePair(_:index:key:value:)")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@property (readonly) id<XNetworking_fearlesswalletKSerializer> keySerializer __attribute__((swift_name("keySerializer")));
@property (readonly) id<XNetworking_fearlesswalletKSerializer> valueSerializer __attribute__((swift_name("valueSerializer")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("TaggedDecoder")))
@interface XNetworking_fearlesswalletTaggedDecoder<Tag> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletDecoder, XNetworking_fearlesswalletCompositeDecoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletCompositeDecoder>)beginStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)doCopyTagsToOther:(XNetworking_fearlesswalletTaggedDecoder<Tag> *)other __attribute__((swift_name("doCopyTagsTo(other:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (BOOL)decodeBooleanElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (int8_t)decodeByteElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (unichar)decodeCharElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (double)decodeDoubleElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeEnumEnumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (float)decodeFloatElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<XNetworking_fearlesswalletDecoder>)decodeInlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("decodeInline(descriptor:)")));
- (id<XNetworking_fearlesswalletDecoder>)decodeInlineElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int32_t)decodeIntElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));
- (int64_t)decodeLongElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));
- (XNetworking_fearlesswalletKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)decodeSerializableValueDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableValue(deserializer:previousValue:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (int16_t)decodeShortElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
- (NSString *)decodeStringElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)decodeTaggedBooleanTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedBoolean(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int8_t)decodeTaggedByteTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedByte(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (unichar)decodeTaggedCharTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedChar(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (double)decodeTaggedDoubleTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedDouble(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)decodeTaggedEnumTag:(Tag _Nullable)tag enumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeTaggedEnum(tag:enumDescriptor:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (float)decodeTaggedFloatTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedFloat(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id<XNetworking_fearlesswalletDecoder>)decodeTaggedInlineTag:(Tag _Nullable)tag inlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)inlineDescriptor __attribute__((swift_name("decodeTaggedInline(tag:inlineDescriptor:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)decodeTaggedIntTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedInt(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int64_t)decodeTaggedLongTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedLong(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)decodeTaggedNotNullMarkTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedNotNullMark(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (XNetworking_fearlesswalletKotlinNothing * _Nullable)decodeTaggedNullTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedNull(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int16_t)decodeTaggedShortTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedShort(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)decodeTaggedStringTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedString(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id)decodeTaggedValueTag:(Tag _Nullable)tag __attribute__((swift_name("decodeTaggedValue(tag:)")));
- (void)endStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (Tag _Nullable)popTag __attribute__((swift_name("popTag()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)pushTagName:(Tag _Nullable)name __attribute__((swift_name("pushTag(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (Tag _Nullable)getTag:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) Tag _Nullable currentTag __attribute__((swift_name("currentTag")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) Tag _Nullable currentTagOrNull __attribute__((swift_name("currentTagOrNull")));
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("NamedValueDecoder")))
@interface XNetworking_fearlesswalletNamedValueDecoder : XNetworking_fearlesswalletTaggedDecoder<NSString *>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)composeNameParentName:(NSString *)parentName childName:(NSString *)childName __attribute__((swift_name("composeName(parentName:childName:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)elementNameDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("elementName(descriptor:index:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)nestedNestedName:(NSString *)nestedName __attribute__((swift_name("nested(nestedName:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)getTag:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("TaggedEncoder")))
@interface XNetworking_fearlesswalletTaggedEncoder<Tag> : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletEncoder_, XNetworking_fearlesswalletCompositeEncoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletCompositeEncoder>)beginStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeBooleanElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeByteElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeCharElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeDoubleElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeEnumEnumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (void)encodeFloatElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<XNetworking_fearlesswalletEncoder_>)encodeInlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("encodeInline(descriptor:)")));
- (id<XNetworking_fearlesswalletEncoder_>)encodeInlineElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeIntElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));
- (void)encodeLongElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));
- (void)encodeNull __attribute__((swift_name("encodeNull()")));
- (void)encodeNullableSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeShortElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
- (void)encodeStringElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedBooleanTag:(Tag _Nullable)tag value:(BOOL)value __attribute__((swift_name("encodeTaggedBoolean(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedByteTag:(Tag _Nullable)tag value:(int8_t)value __attribute__((swift_name("encodeTaggedByte(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedCharTag:(Tag _Nullable)tag value:(unichar)value __attribute__((swift_name("encodeTaggedChar(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedDoubleTag:(Tag _Nullable)tag value:(double)value __attribute__((swift_name("encodeTaggedDouble(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedEnumTag:(Tag _Nullable)tag enumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor ordinal:(int32_t)ordinal __attribute__((swift_name("encodeTaggedEnum(tag:enumDescriptor:ordinal:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedFloatTag:(Tag _Nullable)tag value:(float)value __attribute__((swift_name("encodeTaggedFloat(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id<XNetworking_fearlesswalletEncoder_>)encodeTaggedInlineTag:(Tag _Nullable)tag inlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)inlineDescriptor __attribute__((swift_name("encodeTaggedInline(tag:inlineDescriptor:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedIntTag:(Tag _Nullable)tag value:(int32_t)value __attribute__((swift_name("encodeTaggedInt(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedLongTag:(Tag _Nullable)tag value:(int64_t)value __attribute__((swift_name("encodeTaggedLong(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedNonNullMarkTag:(Tag _Nullable)tag __attribute__((swift_name("encodeTaggedNonNullMark(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedNullTag:(Tag _Nullable)tag __attribute__((swift_name("encodeTaggedNull(tag:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedShortTag:(Tag _Nullable)tag value:(int16_t)value __attribute__((swift_name("encodeTaggedShort(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedStringTag:(Tag _Nullable)tag value:(NSString *)value __attribute__((swift_name("encodeTaggedString(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)encodeTaggedValueTag:(Tag _Nullable)tag value:(id)value __attribute__((swift_name("encodeTaggedValue(tag:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)endEncodeDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("endEncode(descriptor:)")));
- (void)endStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (Tag _Nullable)popTag __attribute__((swift_name("popTag()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)pushTagName:(Tag _Nullable)name __attribute__((swift_name("pushTag(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (Tag _Nullable)getTag:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) Tag _Nullable currentTag __attribute__((swift_name("currentTag")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) Tag _Nullable currentTagOrNull __attribute__((swift_name("currentTagOrNull")));
@property (readonly) XNetworking_fearlesswalletSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
__attribute__((swift_name("NamedValueEncoder")))
@interface XNetworking_fearlesswalletNamedValueEncoder : XNetworking_fearlesswalletTaggedEncoder<NSString *>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)composeNameParentName:(NSString *)parentName childName:(NSString *)childName __attribute__((swift_name("composeName(parentName:childName:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)elementNameDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("elementName(descriptor:index:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)nestedNestedName:(NSString *)nestedName __attribute__((swift_name("nested(nestedName:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (NSString *)getTag:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver index:(int32_t)index __attribute__((swift_name("getTag(_:index:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicModuleBuilder")))
@interface XNetworking_fearlesswalletPolymorphicModuleBuilder<__contravariant Base> : XNetworking_fearlesswalletBase
- (void)defaultDefaultSerializerProvider:(id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultSerializerProvider __attribute__((swift_name("default(defaultSerializerProvider:)"))) __attribute__((deprecated("Deprecated in favor of function with more precise name: defaultDeserializer")));
- (void)defaultDeserializerDefaultDeserializerProvider:(id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("defaultDeserializer(defaultDeserializerProvider:)")));
- (void)subclassSubclass:(id<XNetworking_fearlesswalletKotlinKClass>)subclass serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("subclass(subclass:serializer:)")));
@end

__attribute__((swift_name("SerializersModule")))
@interface XNetworking_fearlesswalletSerializersModule : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)dumpToCollector:(id<XNetworking_fearlesswalletSerializersModuleCollector>)collector __attribute__((swift_name("dumpTo(collector:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<XNetworking_fearlesswalletKSerializer> _Nullable)getContextualKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<XNetworking_fearlesswalletKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("getContextual(kClass:typeArgumentsSerializers:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<XNetworking_fearlesswalletSerializationStrategy> _Nullable)getPolymorphicBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass value:(id)value __attribute__((swift_name("getPolymorphic(baseClass:value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable)getPolymorphicBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass serializedClassName:(NSString * _Nullable)serializedClassName __attribute__((swift_name("getPolymorphic(baseClass:serializedClassName:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("SerializersModuleCollector")))
@protocol XNetworking_fearlesswalletSerializersModuleCollector
@required
- (void)contextualKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass provider:(id<XNetworking_fearlesswalletKSerializer> (^)(NSArray<id<XNetworking_fearlesswalletKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)polymorphicBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass actualClass:(id<XNetworking_fearlesswalletKotlinKClass>)actualClass actualSerializer:(id<XNetworking_fearlesswalletKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass defaultDeserializerProvider:(id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefault(baseClass:defaultDeserializerProvider:)"))) __attribute__((deprecated("Deprecated in favor of function with more precise name: polymorphicDefaultDeserializer")));
- (void)polymorphicDefaultDeserializerBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass defaultDeserializerProvider:(id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefaultDeserializer(baseClass:defaultDeserializerProvider:)")));
- (void)polymorphicDefaultSerializerBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass defaultSerializerProvider:(id<XNetworking_fearlesswalletSerializationStrategy> _Nullable (^)(id))defaultSerializerProvider __attribute__((swift_name("polymorphicDefaultSerializer(baseClass:defaultSerializerProvider:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersModuleBuilder")))
@interface XNetworking_fearlesswalletSerializersModuleBuilder : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSerializersModuleCollector>
- (void)contextualKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass provider:(id<XNetworking_fearlesswalletKSerializer> (^)(NSArray<id<XNetworking_fearlesswalletKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)includeModule:(XNetworking_fearlesswalletSerializersModule *)module __attribute__((swift_name("include(module:)")));
- (void)polymorphicBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass actualClass:(id<XNetworking_fearlesswalletKotlinKClass>)actualClass actualSerializer:(id<XNetworking_fearlesswalletKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultDeserializerBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass defaultDeserializerProvider:(id<XNetworking_fearlesswalletDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefaultDeserializer(baseClass:defaultDeserializerProvider:)")));
- (void)polymorphicDefaultSerializerBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass defaultSerializerProvider:(id<XNetworking_fearlesswalletSerializationStrategy> _Nullable (^)(id))defaultSerializerProvider __attribute__((swift_name("polymorphicDefaultSerializer(baseClass:defaultSerializerProvider:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClassSerialDescriptorBuilder")))
@interface XNetworking_fearlesswalletClassSerialDescriptorBuilder : XNetworking_fearlesswalletBase
- (void)elementElementName:(NSString *)elementName descriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor annotations:(NSArray<id<XNetworking_fearlesswalletKotlinAnnotation>> *)annotations isOptional:(BOOL)isOptional __attribute__((swift_name("element(elementName:descriptor:annotations:isOptional:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property NSArray<id<XNetworking_fearlesswalletKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property BOOL isNullable __attribute__((swift_name("isNullable"))) __attribute__((unavailable("isNullable inside buildSerialDescriptor is deprecated. Please use SerialDescriptor.nullable extension on a builder result.")));
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("SerialKind")))
@interface XNetworking_fearlesswalletSerialKind : XNetworking_fearlesswalletBase
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("PolymorphicKind")))
@interface XNetworking_fearlesswalletPolymorphicKind : XNetworking_fearlesswalletSerialKind
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicKind.OPEN")))
@interface XNetworking_fearlesswalletPolymorphicKindOPEN : XNetworking_fearlesswalletPolymorphicKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)oPEN __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPolymorphicKindOPEN *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PolymorphicKind.SEALED")))
@interface XNetworking_fearlesswalletPolymorphicKindSEALED : XNetworking_fearlesswalletPolymorphicKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)sEALED __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPolymorphicKindSEALED *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("PrimitiveKind")))
@interface XNetworking_fearlesswalletPrimitiveKind : XNetworking_fearlesswalletSerialKind
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.BOOLEAN")))
@interface XNetworking_fearlesswalletPrimitiveKindBOOLEAN : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)bOOLEAN __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindBOOLEAN *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.BYTE")))
@interface XNetworking_fearlesswalletPrimitiveKindBYTE : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)bYTE __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindBYTE *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.CHAR")))
@interface XNetworking_fearlesswalletPrimitiveKindCHAR : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cHAR __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindCHAR *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.DOUBLE")))
@interface XNetworking_fearlesswalletPrimitiveKindDOUBLE : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)dOUBLE __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindDOUBLE *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.FLOAT")))
@interface XNetworking_fearlesswalletPrimitiveKindFLOAT : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)fLOAT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindFLOAT *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.INT")))
@interface XNetworking_fearlesswalletPrimitiveKindINT : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)iNT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindINT *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.LONG")))
@interface XNetworking_fearlesswalletPrimitiveKindLONG : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)lONG __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindLONG *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.SHORT")))
@interface XNetworking_fearlesswalletPrimitiveKindSHORT : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)sHORT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindSHORT *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrimitiveKind.STRING")))
@interface XNetworking_fearlesswalletPrimitiveKindSTRING : XNetworking_fearlesswalletPrimitiveKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)sTRING __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletPrimitiveKindSTRING *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("SerialDescriptor")))
@protocol XNetworking_fearlesswalletSerialDescriptor
@required

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (NSArray<id<XNetworking_fearlesswalletKotlinAnnotation>> *)getElementAnnotationsIndex:(int32_t)index __attribute__((swift_name("getElementAnnotations(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<XNetworking_fearlesswalletSerialDescriptor>)getElementDescriptorIndex:(int32_t)index __attribute__((swift_name("getElementDescriptor(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (int32_t)getElementIndexName:(NSString *)name __attribute__((swift_name("getElementIndex(name:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (NSString *)getElementNameIndex:(int32_t)index __attribute__((swift_name("getElementName(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)isElementOptionalIndex:(int32_t)index __attribute__((swift_name("isElementOptional(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSArray<id<XNetworking_fearlesswalletKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) int32_t elementsCount __attribute__((swift_name("elementsCount")));
@property (readonly) BOOL isInline __attribute__((swift_name("isInline")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) BOOL isNullable __attribute__((swift_name("isNullable")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) XNetworking_fearlesswalletSerialKind *kind __attribute__((swift_name("kind")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialKind.CONTEXTUAL")))
@interface XNetworking_fearlesswalletSerialKindCONTEXTUAL : XNetworking_fearlesswalletSerialKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cONTEXTUAL __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSerialKindCONTEXTUAL *shared __attribute__((swift_name("shared")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialKind.ENUM")))
@interface XNetworking_fearlesswalletSerialKindENUM : XNetworking_fearlesswalletSerialKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)eNUM __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletSerialKindENUM *shared __attribute__((swift_name("shared")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("StructureKind")))
@interface XNetworking_fearlesswalletStructureKind : XNetworking_fearlesswalletSerialKind
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.CLASS")))
@interface XNetworking_fearlesswalletStructureKindCLASS : XNetworking_fearlesswalletStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cLASS __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletStructureKindCLASS *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.LIST")))
@interface XNetworking_fearlesswalletStructureKindLIST : XNetworking_fearlesswalletStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)lIST __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletStructureKindLIST *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.MAP")))
@interface XNetworking_fearlesswalletStructureKindMAP : XNetworking_fearlesswalletStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)mAP __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletStructureKindMAP *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StructureKind.OBJECT")))
@interface XNetworking_fearlesswalletStructureKindOBJECT : XNetworking_fearlesswalletStructureKind
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)oBJECT __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletStructureKindOBJECT *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LongAsStringSerializer")))
@interface XNetworking_fearlesswalletLongAsStringSerializer : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKSerializer>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)longAsStringSerializer __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletLongAsStringSerializer *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletLong *)deserializeDecoder:(id<XNetworking_fearlesswalletDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
- (void)serializeEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(XNetworking_fearlesswalletLong *)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<XNetworking_fearlesswalletSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("AbstractDecoder")))
@interface XNetworking_fearlesswalletAbstractDecoder : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletDecoder, XNetworking_fearlesswalletCompositeDecoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletCompositeDecoder>)beginStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (BOOL)decodeBooleanElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (int8_t)decodeByteElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (unichar)decodeCharElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (double)decodeDoubleElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeEnumEnumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (float)decodeFloatElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<XNetworking_fearlesswalletDecoder>)decodeInlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("decodeInline(descriptor:)")));
- (id<XNetworking_fearlesswalletDecoder>)decodeInlineElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int32_t)decodeIntElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));
- (int64_t)decodeLongElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));
- (XNetworking_fearlesswalletKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableValue(deserializer:previousValue:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (int16_t)decodeShortElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
- (NSString *)decodeStringElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (id)decodeValue __attribute__((swift_name("decodeValue()")));
- (void)endStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("AbstractEncoder")))
@interface XNetworking_fearlesswalletAbstractEncoder : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletEncoder_, XNetworking_fearlesswalletCompositeEncoder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<XNetworking_fearlesswalletCompositeEncoder>)beginStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeBooleanElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeByteElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeCharElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeDoubleElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (BOOL)encodeElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeElement(descriptor:index:)")));
- (void)encodeEnumEnumDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (void)encodeFloatElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<XNetworking_fearlesswalletEncoder_>)encodeInlineDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("encodeInline(descriptor:)")));
- (id<XNetworking_fearlesswalletEncoder_>)encodeInlineElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeIntElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));
- (void)encodeLongElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));
- (void)encodeNull __attribute__((swift_name("encodeNull()")));
- (void)encodeNullableSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeShortElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
- (void)encodeStringElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)encodeValueValue:(id)value __attribute__((swift_name("encodeValue(value:)")));
- (void)endStructureDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("ChunkedDecoder")))
@protocol XNetworking_fearlesswalletChunkedDecoder
@required

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)decodeStringChunkedConsumeChunk:(void (^)(NSString *))consumeChunk __attribute__((swift_name("decodeStringChunked(consumeChunk:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompositeDecoderCompanion")))
@interface XNetworking_fearlesswalletCompositeDecoderCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletCompositeDecoderCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t DECODE_DONE __attribute__((swift_name("DECODE_DONE")));
@property (readonly) int32_t UNKNOWN_NAME __attribute__((swift_name("UNKNOWN_NAME")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicArray")))
@interface XNetworking_fearlesswalletAtomicArray<T> : XNetworking_fearlesswalletBase
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicBooleanArray")))
@interface XNetworking_fearlesswalletAtomicBooleanArray : XNetworking_fearlesswalletBase
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicIntArray")))
@interface XNetworking_fearlesswalletAtomicIntArray : XNetworking_fearlesswalletBase
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicLongArray")))
@interface XNetworking_fearlesswalletAtomicLongArray : XNetworking_fearlesswalletBase
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (id)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("TraceBase")))
@interface XNetworking_fearlesswalletTraceBase : XNetworking_fearlesswalletBase
- (void)appendEvent:(id)event __attribute__((swift_name("append(event:)")));
- (void)appendEvent1:(id)event1 event2:(id)event2 __attribute__((swift_name("append(event1:event2:)")));
- (void)appendEvent1:(id)event1 event2:(id)event2 event3:(id)event3 __attribute__((swift_name("append(event1:event2:event3:)")));
- (void)appendEvent1:(id)event1 event2:(id)event2 event3:(id)event3 event4:(id)event4 __attribute__((swift_name("append(event1:event2:event3:event4:)")));
- (void)invokeEvent:(id (^)(void))event __attribute__((swift_name("invoke(event:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TraceBase.None")))
@interface XNetworking_fearlesswalletTraceBaseNone : XNetworking_fearlesswalletTraceBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)none __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletTraceBaseNone *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("TraceFormat")))
@interface XNetworking_fearlesswalletTraceFormat : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)formatIndex:(int32_t)index event:(id)event __attribute__((swift_name("format(index:event:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MutexPool")))
@interface XNetworking_fearlesswalletMutexPool : XNetworking_fearlesswalletBase
- (instancetype)initWithCapacity:(int32_t)capacity __attribute__((swift_name("init(capacity:)"))) __attribute__((objc_designated_initializer));
- (void *)allocate __attribute__((swift_name("allocate()")));
- (void)releaseMutexNode:(void *)mutexNode __attribute__((swift_name("release(mutexNode:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedObject.LockState")))
@interface XNetworking_fearlesswalletSynchronizedObjectLockState : XNetworking_fearlesswalletBase
- (instancetype)initWithStatus:(XNetworking_fearlesswalletSynchronizedObjectStatus *)status nestedLocks:(int32_t)nestedLocks waiters:(int32_t)waiters ownerThreadId:(void * _Nullable)ownerThreadId mutex:(void * _Nullable)mutex __attribute__((swift_name("init(status:nestedLocks:waiters:ownerThreadId:mutex:)"))) __attribute__((objc_designated_initializer));
@property (readonly) void * _Nullable mutex __attribute__((swift_name("mutex")));
@property (readonly) int32_t nestedLocks __attribute__((swift_name("nestedLocks")));
@property (readonly) void * _Nullable ownerThreadId __attribute__((swift_name("ownerThreadId")));
@property (readonly) XNetworking_fearlesswalletSynchronizedObjectStatus *status __attribute__((swift_name("status")));
@property (readonly) int32_t waiters __attribute__((swift_name("waiters")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedObject.Status")))
@interface XNetworking_fearlesswalletSynchronizedObjectStatus : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletSynchronizedObjectStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletSynchronizedObjectStatus *unlocked __attribute__((swift_name("unlocked")));
@property (class, readonly) XNetworking_fearlesswalletSynchronizedObjectStatus *thin __attribute__((swift_name("thin")));
@property (class, readonly) XNetworking_fearlesswalletSynchronizedObjectStatus *fat __attribute__((swift_name("fat")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletSynchronizedObjectStatus *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("Cursor")))
@protocol XNetworking_fearlesswalletCursor
@required
- (NSString *)columnNameIndex:(int32_t)index __attribute__((swift_name("columnName(index:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (double)getDoubleIndex_:(int32_t)index __attribute__((swift_name("getDouble(index_:)")));
- (int64_t)getLongIndex_:(int32_t)index __attribute__((swift_name("getLong(index_:)")));
- (NSString *)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (XNetworking_fearlesswalletFieldType *)getTypeIndex:(int32_t)index __attribute__((swift_name("getType(index:)")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@property (readonly) int32_t columnCount __attribute__((swift_name("columnCount")));
@property (readonly) NSDictionary<NSString *, XNetworking_fearlesswalletInt *> *columnNames __attribute__((swift_name("columnNames")));
@property (readonly) id<XNetworking_fearlesswalletStatement> statement __attribute__((swift_name("statement")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration")))
@interface XNetworking_fearlesswalletDatabaseConfiguration : XNetworking_fearlesswalletBase
- (instancetype)initWithName:(NSString * _Nullable)name version:(int32_t)version create:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>))create upgrade:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>, XNetworking_fearlesswalletInt *, XNetworking_fearlesswalletInt *))upgrade inMemory:(BOOL)inMemory journalMode:(XNetworking_fearlesswalletJournalMode *)journalMode extendedConfig:(XNetworking_fearlesswalletDatabaseConfigurationExtended *)extendedConfig loggingConfig:(XNetworking_fearlesswalletDatabaseConfigurationLogging *)loggingConfig lifecycleConfig:(XNetworking_fearlesswalletDatabaseConfigurationLifecycle *)lifecycleConfig encryptionConfig:(XNetworking_fearlesswalletDatabaseConfigurationEncryption *)encryptionConfig __attribute__((swift_name("init(name:version:create:upgrade:inMemory:journalMode:extendedConfig:loggingConfig:lifecycleConfig:encryptionConfig:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletDatabaseConfiguration *)doCopyName:(NSString * _Nullable)name version:(int32_t)version create:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>))create upgrade:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>, XNetworking_fearlesswalletInt *, XNetworking_fearlesswalletInt *))upgrade inMemory:(BOOL)inMemory journalMode:(XNetworking_fearlesswalletJournalMode *)journalMode extendedConfig:(XNetworking_fearlesswalletDatabaseConfigurationExtended *)extendedConfig loggingConfig:(XNetworking_fearlesswalletDatabaseConfigurationLogging *)loggingConfig lifecycleConfig:(XNetworking_fearlesswalletDatabaseConfigurationLifecycle *)lifecycleConfig encryptionConfig:(XNetworking_fearlesswalletDatabaseConfigurationEncryption *)encryptionConfig __attribute__((swift_name("doCopy(name:version:create:upgrade:inMemory:journalMode:extendedConfig:loggingConfig:lifecycleConfig:encryptionConfig:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) void (^create)(id<XNetworking_fearlesswalletDatabaseConnection>) __attribute__((swift_name("create")));
@property (readonly) XNetworking_fearlesswalletDatabaseConfigurationEncryption *encryptionConfig __attribute__((swift_name("encryptionConfig")));
@property (readonly) XNetworking_fearlesswalletDatabaseConfigurationExtended *extendedConfig __attribute__((swift_name("extendedConfig")));
@property (readonly) BOOL inMemory __attribute__((swift_name("inMemory")));
@property (readonly) XNetworking_fearlesswalletJournalMode *journalMode __attribute__((swift_name("journalMode")));
@property (readonly) XNetworking_fearlesswalletDatabaseConfigurationLifecycle *lifecycleConfig __attribute__((swift_name("lifecycleConfig")));
@property (readonly) XNetworking_fearlesswalletDatabaseConfigurationLogging *loggingConfig __attribute__((swift_name("loggingConfig")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) void (^upgrade)(id<XNetworking_fearlesswalletDatabaseConnection>, XNetworking_fearlesswalletInt *, XNetworking_fearlesswalletInt *) __attribute__((swift_name("upgrade")));
@property (readonly) int32_t version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Encryption")))
@interface XNetworking_fearlesswalletDatabaseConfigurationEncryption : XNetworking_fearlesswalletBase
- (instancetype)initWithKey:(NSString * _Nullable)key rekey:(NSString * _Nullable)rekey __attribute__((swift_name("init(key:rekey:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletDatabaseConfigurationEncryption *)doCopyKey:(NSString * _Nullable)key rekey:(NSString * _Nullable)rekey __attribute__((swift_name("doCopy(key:rekey:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable rekey __attribute__((swift_name("rekey")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Extended")))
@interface XNetworking_fearlesswalletDatabaseConfigurationExtended : XNetworking_fearlesswalletBase
- (instancetype)initWithForeignKeyConstraints:(BOOL)foreignKeyConstraints busyTimeout:(int32_t)busyTimeout pageSize:(XNetworking_fearlesswalletInt * _Nullable)pageSize basePath:(NSString * _Nullable)basePath synchronousFlag:(XNetworking_fearlesswalletSynchronousFlag * _Nullable)synchronousFlag recursiveTriggers:(BOOL)recursiveTriggers __attribute__((swift_name("init(foreignKeyConstraints:busyTimeout:pageSize:basePath:synchronousFlag:recursiveTriggers:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletDatabaseConfigurationExtended *)doCopyForeignKeyConstraints:(BOOL)foreignKeyConstraints busyTimeout:(int32_t)busyTimeout pageSize:(XNetworking_fearlesswalletInt * _Nullable)pageSize basePath:(NSString * _Nullable)basePath synchronousFlag:(XNetworking_fearlesswalletSynchronousFlag * _Nullable)synchronousFlag recursiveTriggers:(BOOL)recursiveTriggers __attribute__((swift_name("doCopy(foreignKeyConstraints:busyTimeout:pageSize:basePath:synchronousFlag:recursiveTriggers:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable basePath __attribute__((swift_name("basePath")));
@property (readonly) int32_t busyTimeout __attribute__((swift_name("busyTimeout")));
@property (readonly) BOOL foreignKeyConstraints __attribute__((swift_name("foreignKeyConstraints")));
@property (readonly) XNetworking_fearlesswalletInt * _Nullable pageSize __attribute__((swift_name("pageSize")));
@property (readonly) BOOL recursiveTriggers __attribute__((swift_name("recursiveTriggers")));
@property (readonly) XNetworking_fearlesswalletSynchronousFlag * _Nullable synchronousFlag __attribute__((swift_name("synchronousFlag")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Lifecycle")))
@interface XNetworking_fearlesswalletDatabaseConfigurationLifecycle : XNetworking_fearlesswalletBase
- (instancetype)initWithOnCreateConnection:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>))onCreateConnection onCloseConnection:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>))onCloseConnection __attribute__((swift_name("init(onCreateConnection:onCloseConnection:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletDatabaseConfigurationLifecycle *)doCopyOnCreateConnection:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>))onCreateConnection onCloseConnection:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>))onCloseConnection __attribute__((swift_name("doCopy(onCreateConnection:onCloseConnection:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) void (^onCloseConnection)(id<XNetworking_fearlesswalletDatabaseConnection>) __attribute__((swift_name("onCloseConnection")));
@property (readonly) void (^onCreateConnection)(id<XNetworking_fearlesswalletDatabaseConnection>) __attribute__((swift_name("onCreateConnection")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConfiguration.Logging")))
@interface XNetworking_fearlesswalletDatabaseConfigurationLogging : XNetworking_fearlesswalletBase
- (instancetype)initWithLogger:(id<XNetworking_fearlesswalletLogger__>)logger verboseDataCalls:(BOOL)verboseDataCalls __attribute__((swift_name("init(logger:verboseDataCalls:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletDatabaseConfigurationLogging *)doCopyLogger:(id<XNetworking_fearlesswalletLogger__>)logger verboseDataCalls:(BOOL)verboseDataCalls __attribute__((swift_name("doCopy(logger:verboseDataCalls:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletLogger__> logger __attribute__((swift_name("logger")));
@property (readonly) BOOL verboseDataCalls __attribute__((swift_name("verboseDataCalls")));
@end

__attribute__((swift_name("DatabaseConnection")))
@protocol XNetworking_fearlesswalletDatabaseConnection
@required
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<XNetworking_fearlesswalletStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseFileContext")))
@interface XNetworking_fearlesswalletDatabaseFileContext : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)databaseFileContext __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletDatabaseFileContext *shared __attribute__((swift_name("shared")));
- (NSString *)databasePathDatabaseName:(NSString *)databaseName datapathPath:(NSString * _Nullable)datapathPath __attribute__((swift_name("databasePath(databaseName:datapathPath:)")));
- (void)deleteDatabaseName:(NSString *)name basePath:(NSString * _Nullable)basePath __attribute__((swift_name("deleteDatabase(name:basePath:)")));
@end

__attribute__((swift_name("DatabaseManager")))
@protocol XNetworking_fearlesswalletDatabaseManager
@required
- (id<XNetworking_fearlesswalletDatabaseConnection>)createMultiThreadedConnection __attribute__((swift_name("createMultiThreadedConnection()")));
- (id<XNetworking_fearlesswalletDatabaseConnection>)createSingleThreadedConnection __attribute__((swift_name("createSingleThreadedConnection()")));
@property (readonly) XNetworking_fearlesswalletDatabaseConfiguration *configuration __attribute__((swift_name("configuration")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FieldType")))
@interface XNetworking_fearlesswalletFieldType : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletFieldType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFieldTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) XNetworking_fearlesswalletFieldType *typeInteger __attribute__((swift_name("typeInteger")));
@property (class, readonly) XNetworking_fearlesswalletFieldType *typeFloat __attribute__((swift_name("typeFloat")));
@property (class, readonly) XNetworking_fearlesswalletFieldType *typeBlob __attribute__((swift_name("typeBlob")));
@property (class, readonly) XNetworking_fearlesswalletFieldType *typeNull __attribute__((swift_name("typeNull")));
@property (class, readonly) XNetworking_fearlesswalletFieldType *typeText __attribute__((swift_name("typeText")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletFieldType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t nativeCode __attribute__((swift_name("nativeCode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FieldType.Companion")))
@interface XNetworking_fearlesswalletFieldTypeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFieldTypeCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletFieldType *)forCodeNativeCode:(int32_t)nativeCode __attribute__((swift_name("forCode(nativeCode:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JournalMode")))
@interface XNetworking_fearlesswalletJournalMode : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletJournalMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletJournalModeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) XNetworking_fearlesswalletJournalMode *delete_ __attribute__((swift_name("delete_")));
@property (class, readonly) XNetworking_fearlesswalletJournalMode *wal __attribute__((swift_name("wal")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletJournalMode *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JournalMode.Companion")))
@interface XNetworking_fearlesswalletJournalModeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletJournalModeCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletJournalMode *)forStringS:(NSString *)s __attribute__((swift_name("forString(s:)")));
@end

__attribute__((swift_name("Statement")))
@protocol XNetworking_fearlesswalletStatement
@required
- (void)bindBlobIndex:(int32_t)index value:(XNetworking_fearlesswalletKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int64_t)executeInsert __attribute__((swift_name("executeInsert()")));
- (int32_t)executeUpdateDelete __attribute__((swift_name("executeUpdateDelete()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (id<XNetworking_fearlesswalletCursor>)query __attribute__((swift_name("query()")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronousFlag")))
@interface XNetworking_fearlesswalletSynchronousFlag : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletSynchronousFlag *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletSynchronousFlag *off __attribute__((swift_name("off")));
@property (class, readonly) XNetworking_fearlesswalletSynchronousFlag *normal __attribute__((swift_name("normal")));
@property (class, readonly) XNetworking_fearlesswalletSynchronousFlag *full __attribute__((swift_name("full")));
@property (class, readonly) XNetworking_fearlesswalletSynchronousFlag *extra __attribute__((swift_name("extra")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletSynchronousFlag *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value_ __attribute__((swift_name("value_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConcurrentDatabaseConnection")))
@interface XNetworking_fearlesswalletConcurrentDatabaseConnection : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletDatabaseConnection>
- (instancetype)initWithDelegateConnection:(id<XNetworking_fearlesswalletDatabaseConnection>)delegateConnection __attribute__((swift_name("init(delegateConnection:)"))) __attribute__((objc_designated_initializer));
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<XNetworking_fearlesswalletStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConcurrentDatabaseConnection.ConcurrentCursor")))
@interface XNetworking_fearlesswalletConcurrentDatabaseConnectionConcurrentCursor : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCursor>
- (instancetype)initWith:(XNetworking_fearlesswalletConcurrentDatabaseConnection *)receiver delegateCursor:(id<XNetworking_fearlesswalletCursor>)delegateCursor __attribute__((swift_name("init(_:delegateCursor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)columnNameIndex:(int32_t)index __attribute__((swift_name("columnName(index:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (double)getDoubleIndex_:(int32_t)index __attribute__((swift_name("getDouble(index_:)")));
- (int64_t)getLongIndex_:(int32_t)index __attribute__((swift_name("getLong(index_:)")));
- (NSString *)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (XNetworking_fearlesswalletFieldType *)getTypeIndex:(int32_t)index __attribute__((swift_name("getType(index:)")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@property (readonly) int32_t columnCount __attribute__((swift_name("columnCount")));
@property (readonly) NSDictionary<NSString *, XNetworking_fearlesswalletInt *> *columnNames __attribute__((swift_name("columnNames")));
@property (readonly) id<XNetworking_fearlesswalletStatement> statement __attribute__((swift_name("statement")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConcurrentDatabaseConnection.ConcurrentStatement")))
@interface XNetworking_fearlesswalletConcurrentDatabaseConnectionConcurrentStatement : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletStatement>
- (instancetype)initWith:(XNetworking_fearlesswalletConcurrentDatabaseConnection *)receiver delegateStatement:(id<XNetworking_fearlesswalletStatement>)delegateStatement __attribute__((swift_name("init(_:delegateStatement:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(XNetworking_fearlesswalletKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int64_t)executeInsert __attribute__((swift_name("executeInsert()")));
- (int32_t)executeUpdateDelete __attribute__((swift_name("executeUpdateDelete()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (id<XNetworking_fearlesswalletCursor>)query __attribute__((swift_name("query()")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SingleThreadDatabaseConnection")))
@interface XNetworking_fearlesswalletSingleThreadDatabaseConnection : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletDatabaseConnection>
- (instancetype)initWithDelegateConnection:(id<XNetworking_fearlesswalletDatabaseConnection>)delegateConnection __attribute__((swift_name("init(delegateConnection:)"))) __attribute__((objc_designated_initializer));
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<XNetworking_fearlesswalletStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@end

__attribute__((swift_name("SqliteStatement")))
@protocol XNetworking_fearlesswalletSqliteStatement
@required
- (void)bindBlobIndex:(int32_t)index value:(XNetworking_fearlesswalletKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (int32_t)columnCount_ __attribute__((swift_name("columnCount()")));
- (XNetworking_fearlesswalletKotlinByteArray *)columnGetBlobColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetBlob(columnIndex:)")));
- (double)columnGetDoubleColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetDouble(columnIndex:)")));
- (int64_t)columnGetLongColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetLong(columnIndex:)")));
- (NSString *)columnGetStringColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetString(columnIndex:)")));
- (NSString *)columnNameColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnName(columnIndex:)")));
- (int32_t)columnTypeColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnType(columnIndex:)")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int32_t)executeForChangedRowCount __attribute__((swift_name("executeForChangedRowCount()")));
- (int64_t)executeForLastInsertedRowId __attribute__((swift_name("executeForLastInsertedRowId()")));
- (int32_t)executeNonQuery __attribute__((swift_name("executeNonQuery()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
- (BOOL)step __attribute__((swift_name("step()")));
- (void)traceLogCallbackMessage:(NSString *)message __attribute__((swift_name("traceLogCallback(message:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ActualSqliteStatement")))
@interface XNetworking_fearlesswalletActualSqliteStatement : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSqliteStatement>
- (instancetype)initWithDb:(XNetworking_fearlesswalletSqliteDatabase *)db stmtPointer:(void *)stmtPointer __attribute__((swift_name("init(db:stmtPointer:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(XNetworking_fearlesswalletKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (int32_t)columnCount_ __attribute__((swift_name("columnCount()")));
- (XNetworking_fearlesswalletKotlinByteArray *)columnGetBlobColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetBlob(columnIndex:)")));
- (double)columnGetDoubleColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetDouble(columnIndex:)")));
- (int64_t)columnGetLongColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetLong(columnIndex:)")));
- (NSString *)columnGetStringColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetString(columnIndex:)")));
- (NSString *)columnNameColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnName(columnIndex:)")));
- (int32_t)columnTypeColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnType(columnIndex:)")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int32_t)executeForChangedRowCount __attribute__((swift_name("executeForChangedRowCount()")));
- (int64_t)executeForLastInsertedRowId __attribute__((swift_name("executeForLastInsertedRowId()")));
- (int32_t)executeNonQuery __attribute__((swift_name("executeNonQuery()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
- (BOOL)step __attribute__((swift_name("step()")));
- (void)traceLogCallbackMessage:(NSString *)message __attribute__((swift_name("traceLogCallback(message:)")));
@end

__attribute__((swift_name("Logger__")))
@protocol XNetworking_fearlesswalletLogger__
@required
- (void)eWriteMessage:(NSString *)message exception:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)exception __attribute__((swift_name("eWrite(message:exception:)")));
- (void)traceMessage:(NSString *)message __attribute__((swift_name("trace(message:)")));
- (void)vWriteMessage:(NSString *)message __attribute__((swift_name("vWrite(message:)")));
@property (readonly) BOOL eActive __attribute__((swift_name("eActive")));
@property (readonly) BOOL vActive __attribute__((swift_name("vActive")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OpenFlags")))
@interface XNetworking_fearlesswalletOpenFlags : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletOpenFlags *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletOpenFlags *createIfNecessary __attribute__((swift_name("createIfNecessary")));
@property (class, readonly) XNetworking_fearlesswalletOpenFlags *openReadonly __attribute__((swift_name("openReadonly")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletOpenFlags *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("SQLiteException")))
@interface XNetworking_fearlesswalletSQLiteException : XNetworking_fearlesswalletKotlinException
- (instancetype)initWithMessage:(NSString *)message config:(XNetworking_fearlesswalletSqliteDatabaseConfig *)config __attribute__((swift_name("init(message:config:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SQLiteExceptionErrorCode")))
@interface XNetworking_fearlesswalletSQLiteExceptionErrorCode : XNetworking_fearlesswalletSQLiteException
- (instancetype)initWithMessage:(NSString *)message config:(XNetworking_fearlesswalletSqliteDatabaseConfig *)config errorCode:(int32_t)errorCode __attribute__((swift_name("init(message:config:errorCode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString *)message config:(XNetworking_fearlesswalletSqliteDatabaseConfig *)config __attribute__((swift_name("init(message:config:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) XNetworking_fearlesswalletSqliteErrorType *errorType __attribute__((swift_name("errorType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteDatabase")))
@interface XNetworking_fearlesswalletSqliteDatabase : XNetworking_fearlesswalletBase
- (instancetype)initWithPath:(NSString *)path label:(NSString *)label logger:(id<XNetworking_fearlesswalletLogger__>)logger verboseDataCalls:(BOOL)verboseDataCalls dbPointer:(void *)dbPointer __attribute__((swift_name("init(path:label:logger:verboseDataCalls:dbPointer:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (id<XNetworking_fearlesswalletSqliteStatement>)prepareStatementSqlString:(NSString *)sqlString __attribute__((swift_name("prepareStatement(sqlString:)")));
@property (readonly) XNetworking_fearlesswalletSqliteDatabaseConfig *config __attribute__((swift_name("config")));
@property (readonly) void *dbPointer __attribute__((swift_name("dbPointer")));
@property (readonly) id<XNetworking_fearlesswalletLogger__> logger __attribute__((swift_name("logger")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteDatabaseConfig")))
@interface XNetworking_fearlesswalletSqliteDatabaseConfig : XNetworking_fearlesswalletBase
- (instancetype)initWithPath:(NSString *)path label:(NSString *)label __attribute__((swift_name("init(path:label:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletSqliteDatabaseConfig *)doCopyPath:(NSString *)path label:(NSString *)label __attribute__((swift_name("doCopy(path:label:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *label __attribute__((swift_name("label")));
@property (readonly) NSString *path __attribute__((swift_name("path")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteErrorType")))
@interface XNetworking_fearlesswalletSqliteErrorType : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletSqliteErrorType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteOk __attribute__((swift_name("sqliteOk")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteError __attribute__((swift_name("sqliteError")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteInternal __attribute__((swift_name("sqliteInternal")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqlitePerm __attribute__((swift_name("sqlitePerm")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteAbort __attribute__((swift_name("sqliteAbort")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteBusy __attribute__((swift_name("sqliteBusy")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteLocked __attribute__((swift_name("sqliteLocked")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteNomem __attribute__((swift_name("sqliteNomem")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteReadonly __attribute__((swift_name("sqliteReadonly")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteInterrupt __attribute__((swift_name("sqliteInterrupt")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteIoerr __attribute__((swift_name("sqliteIoerr")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteCorrupt __attribute__((swift_name("sqliteCorrupt")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteNotfound __attribute__((swift_name("sqliteNotfound")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteFull __attribute__((swift_name("sqliteFull")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteCantopen __attribute__((swift_name("sqliteCantopen")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteProtocol __attribute__((swift_name("sqliteProtocol")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteEmpty __attribute__((swift_name("sqliteEmpty")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteSchema __attribute__((swift_name("sqliteSchema")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteToobig __attribute__((swift_name("sqliteToobig")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteConstraint __attribute__((swift_name("sqliteConstraint")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteMismatch __attribute__((swift_name("sqliteMismatch")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteMisuse __attribute__((swift_name("sqliteMisuse")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteNolfs __attribute__((swift_name("sqliteNolfs")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteAuth __attribute__((swift_name("sqliteAuth")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteFormat __attribute__((swift_name("sqliteFormat")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteRange __attribute__((swift_name("sqliteRange")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteNotadb __attribute__((swift_name("sqliteNotadb")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteNotice __attribute__((swift_name("sqliteNotice")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteWarning __attribute__((swift_name("sqliteWarning")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteRow __attribute__((swift_name("sqliteRow")));
@property (class, readonly) XNetworking_fearlesswalletSqliteErrorType *sqliteDone __attribute__((swift_name("sqliteDone")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletSqliteErrorType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t code __attribute__((swift_name("code")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TracingSqliteStatement")))
@interface XNetworking_fearlesswalletTracingSqliteStatement : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletSqliteStatement>
- (instancetype)initWithLogger:(id<XNetworking_fearlesswalletLogger__>)logger delegate:(id<XNetworking_fearlesswalletSqliteStatement>)delegate __attribute__((swift_name("init(logger:delegate:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(XNetworking_fearlesswalletKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (int32_t)columnCount_ __attribute__((swift_name("columnCount()")));
- (XNetworking_fearlesswalletKotlinByteArray *)columnGetBlobColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetBlob(columnIndex:)")));
- (double)columnGetDoubleColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetDouble(columnIndex:)")));
- (int64_t)columnGetLongColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetLong(columnIndex:)")));
- (NSString *)columnGetStringColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnGetString(columnIndex:)")));
- (NSString *)columnNameColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnName(columnIndex:)")));
- (int32_t)columnTypeColumnIndex:(int32_t)columnIndex __attribute__((swift_name("columnType(columnIndex:)")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int32_t)executeForChangedRowCount __attribute__((swift_name("executeForChangedRowCount()")));
- (int64_t)executeForLastInsertedRowId __attribute__((swift_name("executeForLastInsertedRowId()")));
- (int32_t)executeNonQuery __attribute__((swift_name("executeNonQuery()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
- (BOOL)step __attribute__((swift_name("step()")));
- (void)traceLogCallbackMessage:(NSString *)message __attribute__((swift_name("traceLogCallback(message:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeCursor")))
@interface XNetworking_fearlesswalletNativeCursor : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletCursor>
- (instancetype)initWithStatement:(XNetworking_fearlesswalletNativeStatement *)statement __attribute__((swift_name("init(statement:)"))) __attribute__((objc_designated_initializer));
- (NSString *)columnNameIndex:(int32_t)index __attribute__((swift_name("columnName(index:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (double)getDoubleIndex_:(int32_t)index __attribute__((swift_name("getDouble(index_:)")));
- (int64_t)getLongIndex_:(int32_t)index __attribute__((swift_name("getLong(index_:)")));
- (NSString *)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (XNetworking_fearlesswalletFieldType *)getTypeIndex:(int32_t)index __attribute__((swift_name("getType(index:)")));
- (BOOL)isNullIndex:(int32_t)index __attribute__((swift_name("isNull(index:)")));
- (BOOL)next__ __attribute__((swift_name("next_()")));
@property (readonly) int32_t columnCount __attribute__((swift_name("columnCount")));
@property (readonly) NSDictionary<NSString *, XNetworking_fearlesswalletInt *> *columnNames __attribute__((swift_name("columnNames")));
@property (readonly) XNetworking_fearlesswalletNativeStatement *statement __attribute__((swift_name("statement")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeDatabaseConnection")))
@interface XNetworking_fearlesswalletNativeDatabaseConnection : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletDatabaseConnection>
- (instancetype)initWithDbManager:(XNetworking_fearlesswalletNativeDatabaseManager *)dbManager sqliteDatabase:(XNetworking_fearlesswalletSqliteDatabase *)sqliteDatabase __attribute__((swift_name("init(dbManager:sqliteDatabase:)"))) __attribute__((objc_designated_initializer));
- (void)beginTransaction __attribute__((swift_name("beginTransaction()")));
- (void)close __attribute__((swift_name("close()")));
- (id<XNetworking_fearlesswalletStatement>)createStatementSql:(NSString *)sql __attribute__((swift_name("createStatement(sql:)")));
- (void)endTransaction __attribute__((swift_name("endTransaction()")));
- (void)migrateIfNeededCreate:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>))create upgrade:(void (^)(id<XNetworking_fearlesswalletDatabaseConnection>, XNetworking_fearlesswalletInt *, XNetworking_fearlesswalletInt *))upgrade version:(int32_t)version __attribute__((swift_name("migrateIfNeeded(create:upgrade:version:)")));
- (void)setTransactionSuccessful __attribute__((swift_name("setTransactionSuccessful()")));
@property (readonly) BOOL closed __attribute__((swift_name("closed")));
@property (readonly) XNetworking_fearlesswalletNativeDatabaseManager *dbManager __attribute__((swift_name("dbManager")));
@property (readonly) XNetworking_fearlesswalletSqliteDatabase *sqliteDatabase __attribute__((swift_name("sqliteDatabase")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeDatabaseConnection.Transaction")))
@interface XNetworking_fearlesswalletNativeDatabaseConnectionTransaction : XNetworking_fearlesswalletBase
- (instancetype)initWithSuccessful:(BOOL)successful __attribute__((swift_name("init(successful:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletNativeDatabaseConnectionTransaction *)doCopySuccessful:(BOOL)successful __attribute__((swift_name("doCopy(successful:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL successful __attribute__((swift_name("successful")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeDatabaseManager")))
@interface XNetworking_fearlesswalletNativeDatabaseManager : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletDatabaseManager>
- (instancetype)initWithPath:(NSString *)path configuration:(XNetworking_fearlesswalletDatabaseConfiguration *)configuration __attribute__((swift_name("init(path:configuration:)"))) __attribute__((objc_designated_initializer));
- (id<XNetworking_fearlesswalletDatabaseConnection>)createMultiThreadedConnection __attribute__((swift_name("createMultiThreadedConnection()")));
- (id<XNetworking_fearlesswalletDatabaseConnection>)createSingleThreadedConnection __attribute__((swift_name("createSingleThreadedConnection()")));
@property (readonly) XNetworking_fearlesswalletDatabaseConfiguration *configuration __attribute__((swift_name("configuration")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeStatement")))
@interface XNetworking_fearlesswalletNativeStatement : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletStatement>
- (instancetype)initWithConnection:(XNetworking_fearlesswalletNativeDatabaseConnection *)connection sqliteStatement:(id<XNetworking_fearlesswalletSqliteStatement>)sqliteStatement sql:(NSString *)sql __attribute__((swift_name("init(connection:sqliteStatement:sql:)"))) __attribute__((objc_designated_initializer));
- (void)bindBlobIndex:(int32_t)index value:(XNetworking_fearlesswalletKotlinByteArray *)value __attribute__((swift_name("bindBlob(index:value:)")));
- (void)bindDoubleIndex:(int32_t)index value:(double)value __attribute__((swift_name("bindDouble(index:value:)")));
- (void)bindLongIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("bindLong(index:value:)")));
- (void)bindNullIndex:(int32_t)index __attribute__((swift_name("bindNull(index:)")));
- (int32_t)bindParameterIndexParamName:(NSString *)paramName __attribute__((swift_name("bindParameterIndex(paramName:)")));
- (void)bindStringIndex:(int32_t)index value:(NSString *)value __attribute__((swift_name("bindString(index:value:)")));
- (void)clearBindings __attribute__((swift_name("clearBindings()")));
- (void)execute_ __attribute__((swift_name("execute_()")));
- (int64_t)executeInsert __attribute__((swift_name("executeInsert()")));
- (int32_t)executeUpdateDelete __attribute__((swift_name("executeUpdateDelete()")));
- (void)finalizeStatement __attribute__((swift_name("finalizeStatement()")));
- (id<XNetworking_fearlesswalletCursor>)query __attribute__((swift_name("query()")));
- (void)resetStatement __attribute__((swift_name("resetStatement()")));
@end

__attribute__((swift_name("ChainBuilderException")))
@interface XNetworking_fearlesswalletChainBuilderException : XNetworking_fearlesswalletKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChainModel")))
@interface XNetworking_fearlesswalletChainModel : XNetworking_fearlesswalletBase
- (instancetype)initWithChainId:(NSString *)chainId hash:(NSString *)hash content:(NSString *)content __attribute__((swift_name("init(chainId:hash:content:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletChainModelCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletChainModel *)doCopyChainId:(NSString *)chainId hash:(NSString *)hash content:(NSString *)content __attribute__((swift_name("doCopy(chainId:hash:content:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *chainId __attribute__((swift_name("chainId")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly, getter=hash_) NSString *hash __attribute__((swift_name("hash")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChainModel.Companion")))
@interface XNetworking_fearlesswalletChainModelCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletChainModelCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChainResponse")))
@interface XNetworking_fearlesswalletChainResponse : XNetworking_fearlesswalletBase
- (instancetype)initWithChain:(NSString *)chain hash:(NSString *)hash id:(NSString *)id __attribute__((swift_name("init(chain:hash:id:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletChainResponseCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletChainResponse *)doCopyChain:(NSString *)chain hash:(NSString *)hash id:(NSString *)id __attribute__((swift_name("doCopy(chain:hash:id:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *chain __attribute__((swift_name("chain")));
@property (readonly, getter=hash_) NSString *hash __attribute__((swift_name("hash")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChainResponse.Companion")))
@interface XNetworking_fearlesswalletChainResponseCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletChainResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessChainsBuilder")))
@interface XNetworking_fearlesswalletFearlessChainsBuilder : XNetworking_fearlesswalletBase
- (instancetype)initWithNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)networkClient baseUrl:(NSString *)baseUrl indexFile:(NSString *)indexFile __attribute__((swift_name("init(networkClient:baseUrl:indexFile:)"))) __attribute__((objc_designated_initializer));

/**
 * @note This method converts instances of SoramitsuNetworkException, ChainBuilderException, CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChainsVersion:(NSString *)version existedChains:(NSArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *> *)existedChains completionHandler:(void (^)(XNetworking_fearlesswalletResultChainInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChains(version:existedChains:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResultChainInfo")))
@interface XNetworking_fearlesswalletResultChainInfo : XNetworking_fearlesswalletBase
- (instancetype)initWithNewChains:(NSArray<XNetworking_fearlesswalletChainModel *> *)newChains updatedChains:(NSArray<XNetworking_fearlesswalletChainModel *> *)updatedChains removedChains:(NSArray<NSString *> *)removedChains __attribute__((swift_name("init(newChains:updatedChains:removedChains:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletResultChainInfo *)doCopyNewChains:(NSArray<XNetworking_fearlesswalletChainModel *> *)newChains updatedChains:(NSArray<XNetworking_fearlesswalletChainModel *> *)updatedChains removedChains:(NSArray<NSString *> *)removedChains __attribute__((swift_name("doCopy(newChains:updatedChains:removedChains:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly, getter=doNewChains) NSArray<XNetworking_fearlesswalletChainModel *> *newChains __attribute__((swift_name("newChains")));
@property (readonly) NSArray<NSString *> *removedChains __attribute__((swift_name("removedChains")));
@property (readonly) NSArray<XNetworking_fearlesswalletChainModel *> *updatedChains __attribute__((swift_name("updatedChains")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VersionNotFoundException")))
@interface XNetworking_fearlesswalletVersionNotFoundException : XNetworking_fearlesswalletChainBuilderException
- (instancetype)initWithMessage:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SubQueryClientForFearlessWallet")))
@interface XNetworking_fearlesswalletSubQueryClientForFearlessWallet : XNetworking_fearlesswalletBase
- (instancetype)initWithNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)networkClient pageSize:(int32_t)pageSize historyDatabaseProvider:(XNetworking_fearlesswalletHistoryDatabaseProvider *)historyDatabaseProvider __attribute__((swift_name("init(networkClient:pageSize:historyDatabaseProvider:)"))) __attribute__((objc_designated_initializer));
- (void)clearAllData __attribute__((swift_name("clearAllData()")));
- (void)clearDataAddress:(NSString *)address networkName:(NSString *)networkName __attribute__((swift_name("clearData(address:networkName:)")));
- (XNetworking_fearlesswalletTxHistoryInfo *)getTransactionCachedAddress:(NSString *)address networkName:(NSString *)networkName txHash:(NSString *)txHash __attribute__((swift_name("getTransactionCached(address:networkName:txHash:)")));
- (NSArray<XNetworking_fearlesswalletTxHistoryItem *> *)getTransactionHistoryCachedAddress:(NSString *)address networkName:(NSString *)networkName count:(int32_t)count filter:(XNetworking_fearlesswalletBoolean *(^ _Nullable)(XNetworking_fearlesswalletTxHistoryItem *))filter __attribute__((swift_name("getTransactionHistoryCached(address:networkName:count:filter:)")));

/**
 * @note This method converts instances of CancellationException, IllegalArgumentException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTransactionHistoryPagedAddress:(NSString *)address networkName:(NSString *)networkName page:(int64_t)page url:(NSString *)url filter:(XNetworking_fearlesswalletBoolean *(^ _Nullable)(XNetworking_fearlesswalletTxHistoryItem *))filter completionHandler:(void (^)(XNetworking_fearlesswalletTxHistoryResult<XNetworking_fearlesswalletTxHistoryItem *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTransactionHistoryPaged(address:networkName:page:url:filter:completionHandler:)")));
- (NSArray<NSString *> *)getTransactionPeersQuery:(NSString *)query networkName:(NSString *)networkName __attribute__((swift_name("getTransactionPeers(query:networkName:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SubSquidClientForFearlessWallet")))
@interface XNetworking_fearlesswalletSubSquidClientForFearlessWallet : XNetworking_fearlesswalletBase
- (instancetype)initWithNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)networkClient pageSize:(int32_t)pageSize historyDatabaseProvider:(XNetworking_fearlesswalletHistoryDatabaseProvider *)historyDatabaseProvider __attribute__((swift_name("init(networkClient:pageSize:historyDatabaseProvider:)"))) __attribute__((objc_designated_initializer));
- (void)clearAllData __attribute__((swift_name("clearAllData()")));
- (void)clearDataAddress:(NSString *)address networkName:(NSString *)networkName __attribute__((swift_name("clearData(address:networkName:)")));
- (XNetworking_fearlesswalletTxHistoryInfo *)getTransactionCachedAddress:(NSString *)address networkName:(NSString *)networkName txHash:(NSString *)txHash __attribute__((swift_name("getTransactionCached(address:networkName:txHash:)")));
- (NSArray<XNetworking_fearlesswalletTxHistoryItem *> *)getTransactionHistoryCachedAddress:(NSString *)address networkName:(NSString *)networkName count:(int32_t)count filter:(XNetworking_fearlesswalletBoolean *(^ _Nullable)(XNetworking_fearlesswalletTxHistoryItem *))filter __attribute__((swift_name("getTransactionHistoryCached(address:networkName:count:filter:)")));

/**
 * @note This method converts instances of CancellationException, IllegalArgumentException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTransactionHistoryPagedAddress:(NSString *)address networkName:(NSString *)networkName page:(int64_t)page url:(NSString *)url filter:(XNetworking_fearlesswalletBoolean *(^ _Nullable)(XNetworking_fearlesswalletTxHistoryItem *))filter completionHandler:(void (^)(XNetworking_fearlesswalletTxHistoryResult<XNetworking_fearlesswalletTxHistoryItem *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTransactionHistoryPaged(address:networkName:page:url:filter:completionHandler:)")));
- (NSArray<NSString *> *)getTransactionPeersQuery:(NSString *)query networkName:(NSString *)networkName __attribute__((swift_name("getTransactionPeers(query:networkName:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TxHistoryClientForFearlessWalletFactory")))
@interface XNetworking_fearlesswalletTxHistoryClientForFearlessWalletFactory : XNetworking_fearlesswalletBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletSubQueryClientForFearlessWallet *)createSubQuerySoramitsuNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)soramitsuNetworkClient pageSize:(int32_t)pageSize __attribute__((swift_name("createSubQuery(soramitsuNetworkClient:pageSize:)")));
- (XNetworking_fearlesswalletSubSquidClientForFearlessWallet *)createSubSquidSoramitsuNetworkClient:(XNetworking_fearlesswalletSoramitsuNetworkClient *)soramitsuNetworkClient pageSize:(int32_t)pageSize __attribute__((swift_name("createSubSquid(soramitsuNetworkClient:pageSize:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Error")))
@interface XNetworking_fearlesswalletError : XNetworking_fearlesswalletBase
- (instancetype)initWithModuleErrorId:(NSString * _Nullable)moduleErrorId moduleErrorIndex:(XNetworking_fearlesswalletInt * _Nullable)moduleErrorIndex nonModuleErrorMessage:(NSString * _Nullable)nonModuleErrorMessage __attribute__((swift_name("init(moduleErrorId:moduleErrorIndex:nonModuleErrorMessage:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletErrorCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletError *)doCopyModuleErrorId:(NSString * _Nullable)moduleErrorId moduleErrorIndex:(XNetworking_fearlesswalletInt * _Nullable)moduleErrorIndex nonModuleErrorMessage:(NSString * _Nullable)nonModuleErrorMessage __attribute__((swift_name("doCopy(moduleErrorId:moduleErrorIndex:nonModuleErrorMessage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable moduleErrorId __attribute__((swift_name("moduleErrorId")));
@property (readonly) XNetworking_fearlesswalletInt * _Nullable moduleErrorIndex __attribute__((swift_name("moduleErrorIndex")));
@property (readonly) NSString * _Nullable nonModuleErrorMessage __attribute__((swift_name("nonModuleErrorMessage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Error.Companion")))
@interface XNetworking_fearlesswalletErrorCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletErrorCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExecutionResult")))
@interface XNetworking_fearlesswalletExecutionResult : XNetworking_fearlesswalletBase
- (instancetype)initWithSuccess:(BOOL)success error:(XNetworking_fearlesswalletError * _Nullable)error __attribute__((swift_name("init(success:error:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletExecutionResultCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletExecutionResult *)doCopySuccess:(BOOL)success error:(XNetworking_fearlesswalletError * _Nullable)error __attribute__((swift_name("doCopy(success:error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletError * _Nullable error __attribute__((swift_name("error")));
@property (readonly) BOOL success __attribute__((swift_name("success")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExecutionResult.Companion")))
@interface XNetworking_fearlesswalletExecutionResultCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletExecutionResultCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessHistorySubSquidResponseDataElements")))
@interface XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElements : XNetworking_fearlesswalletBase
- (instancetype)initWithNodes:(NSArray<XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItem *> *)nodes pageInfo:(XNetworking_fearlesswalletResponsePageInfo *)pageInfo __attribute__((swift_name("init(nodes:pageInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElementsCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElements *)doCopyNodes:(NSArray<XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItem *> *)nodes pageInfo:(XNetworking_fearlesswalletResponsePageInfo *)pageInfo __attribute__((swift_name("doCopy(nodes:pageInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItem *> *nodes __attribute__((swift_name("nodes")));
@property (readonly) XNetworking_fearlesswalletResponsePageInfo *pageInfo __attribute__((swift_name("pageInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessHistorySubSquidResponseDataElements.Companion")))
@interface XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElementsCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElementsCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidHistoryNode")))
@interface XNetworking_fearlesswalletFearlessSubSquidHistoryNode : XNetworking_fearlesswalletBase
- (instancetype)initWithId:(NSString *)id timestamp:(NSString *)timestamp networkFee:(NSString * _Nullable)networkFee module:(NSString *)module method:(NSString *)method execution:(XNetworking_fearlesswalletExecutionResult * _Nullable)execution address:(NSString *)address blockHash:(NSString *)blockHash data:(XNetworking_fearlesswalletJsonElement *)data __attribute__((swift_name("init(id:timestamp:networkFee:module:method:execution:address:blockHash:data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessSubSquidHistoryNodeCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessSubSquidHistoryNode *)doCopyId:(NSString *)id timestamp:(NSString *)timestamp networkFee:(NSString * _Nullable)networkFee module:(NSString *)module method:(NSString *)method execution:(XNetworking_fearlesswalletExecutionResult * _Nullable)execution address:(NSString *)address blockHash:(NSString *)blockHash data:(XNetworking_fearlesswalletJsonElement *)data __attribute__((swift_name("doCopy(id:timestamp:networkFee:module:method:execution:address:blockHash:data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address __attribute__((swift_name("address")));
@property (readonly) NSString *blockHash __attribute__((swift_name("blockHash")));
@property (readonly) XNetworking_fearlesswalletJsonElement *data __attribute__((swift_name("data")));
@property (readonly) XNetworking_fearlesswalletExecutionResult * _Nullable execution __attribute__((swift_name("execution")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *method __attribute__((swift_name("method")));
@property (readonly) NSString *module __attribute__((swift_name("module")));
@property (readonly) NSString * _Nullable networkFee __attribute__((swift_name("networkFee")));
@property (readonly) NSString *timestamp __attribute__((swift_name("timestamp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidHistoryNode.Companion")))
@interface XNetworking_fearlesswalletFearlessSubSquidHistoryNodeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessSubSquidHistoryNodeCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidHistoryResponseItem")))
@interface XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItem : XNetworking_fearlesswalletBase
- (instancetype)initWithNode:(XNetworking_fearlesswalletFearlessSubSquidHistoryNode *)node __attribute__((swift_name("init(node:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItemCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItem *)doCopyNode:(XNetworking_fearlesswalletFearlessSubSquidHistoryNode *)node __attribute__((swift_name("doCopy(node:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletFearlessSubSquidHistoryNode *node __attribute__((swift_name("node")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidHistoryResponseItem.Companion")))
@interface XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItemCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessSubSquidHistoryResponseItemCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidResponse")))
@interface XNetworking_fearlesswalletFearlessSubSquidResponse : XNetworking_fearlesswalletBase
- (instancetype)initWithData:(XNetworking_fearlesswalletFearlessSubSquidResponseData *)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessSubSquidResponseCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessSubSquidResponse *)doCopyData:(XNetworking_fearlesswalletFearlessSubSquidResponseData *)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletFearlessSubSquidResponseData *data __attribute__((swift_name("data")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidResponse.Companion")))
@interface XNetworking_fearlesswalletFearlessSubSquidResponseCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessSubSquidResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidResponseData")))
@interface XNetworking_fearlesswalletFearlessSubSquidResponseData : XNetworking_fearlesswalletBase
- (instancetype)initWithHistoryElements:(XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElements *)historyElements __attribute__((swift_name("init(historyElements:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessSubSquidResponseDataCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessSubSquidResponseData *)doCopyHistoryElements:(XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElements *)historyElements __attribute__((swift_name("doCopy(historyElements:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletFearlessHistorySubSquidResponseDataElements *historyElements __attribute__((swift_name("historyElements")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubSquidResponseData.Companion")))
@interface XNetworking_fearlesswalletFearlessSubSquidResponseDataCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessSubSquidResponseDataCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessExtrinsicItem")))
@interface XNetworking_fearlesswalletFearlessExtrinsicItem : XNetworking_fearlesswalletBase
- (instancetype)initWithHash:(NSString *)hash module:(NSString *)module call:(NSString *)call fee:(NSString *)fee success:(BOOL)success __attribute__((swift_name("init(hash:module:call:fee:success:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessExtrinsicItemCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessExtrinsicItem *)doCopyHash:(NSString *)hash module:(NSString *)module call:(NSString *)call fee:(NSString *)fee success:(BOOL)success __attribute__((swift_name("doCopy(hash:module:call:fee:success:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *call __attribute__((swift_name("call")));
@property (readonly) NSString *fee __attribute__((swift_name("fee")));
@property (readonly, getter=hash_) NSString *hash __attribute__((swift_name("hash")));
@property (readonly) NSString *module __attribute__((swift_name("module")));
@property (readonly) BOOL success __attribute__((swift_name("success")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessExtrinsicItem.Companion")))
@interface XNetworking_fearlesswalletFearlessExtrinsicItemCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessExtrinsicItemCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessHistoryResponseDataElements")))
@interface XNetworking_fearlesswalletFearlessHistoryResponseDataElements : XNetworking_fearlesswalletBase
- (instancetype)initWithNodes:(NSArray<XNetworking_fearlesswalletFearlessHistoryResponseItem *> *)nodes pageInfo:(XNetworking_fearlesswalletResponsePageInfo *)pageInfo __attribute__((swift_name("init(nodes:pageInfo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessHistoryResponseDataElementsCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessHistoryResponseDataElements *)doCopyNodes:(NSArray<XNetworking_fearlesswalletFearlessHistoryResponseItem *> *)nodes pageInfo:(XNetworking_fearlesswalletResponsePageInfo *)pageInfo __attribute__((swift_name("doCopy(nodes:pageInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<XNetworking_fearlesswalletFearlessHistoryResponseItem *> *nodes __attribute__((swift_name("nodes")));
@property (readonly) XNetworking_fearlesswalletResponsePageInfo *pageInfo __attribute__((swift_name("pageInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessHistoryResponseDataElements.Companion")))
@interface XNetworking_fearlesswalletFearlessHistoryResponseDataElementsCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessHistoryResponseDataElementsCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessHistoryResponseItem")))
@interface XNetworking_fearlesswalletFearlessHistoryResponseItem : XNetworking_fearlesswalletBase
- (instancetype)initWithId:(NSString *)id timestamp:(NSString *)timestamp address:(NSString *)address reward:(XNetworking_fearlesswalletFearlessRewardItem * _Nullable)reward transfer:(XNetworking_fearlesswalletFearlessTransferItem * _Nullable)transfer extrinsic:(XNetworking_fearlesswalletFearlessExtrinsicItem * _Nullable)extrinsic __attribute__((swift_name("init(id:timestamp:address:reward:transfer:extrinsic:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessHistoryResponseItemCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessHistoryResponseItem *)doCopyId:(NSString *)id timestamp:(NSString *)timestamp address:(NSString *)address reward:(XNetworking_fearlesswalletFearlessRewardItem * _Nullable)reward transfer:(XNetworking_fearlesswalletFearlessTransferItem * _Nullable)transfer extrinsic:(XNetworking_fearlesswalletFearlessExtrinsicItem * _Nullable)extrinsic __attribute__((swift_name("doCopy(id:timestamp:address:reward:transfer:extrinsic:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address __attribute__((swift_name("address")));
@property (readonly) XNetworking_fearlesswalletFearlessExtrinsicItem * _Nullable extrinsic __attribute__((swift_name("extrinsic")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) XNetworking_fearlesswalletFearlessRewardItem * _Nullable reward __attribute__((swift_name("reward")));
@property (readonly) NSString *timestamp __attribute__((swift_name("timestamp")));
@property (readonly) XNetworking_fearlesswalletFearlessTransferItem * _Nullable transfer __attribute__((swift_name("transfer")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessHistoryResponseItem.Companion")))
@interface XNetworking_fearlesswalletFearlessHistoryResponseItemCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessHistoryResponseItemCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessRewardItem")))
@interface XNetworking_fearlesswalletFearlessRewardItem : XNetworking_fearlesswalletBase
- (instancetype)initWithEra:(int32_t)era amount:(NSString *)amount isReward:(BOOL)isReward validator:(NSString *)validator __attribute__((swift_name("init(era:amount:isReward:validator:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessRewardItemCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessRewardItem *)doCopyEra:(int32_t)era amount:(NSString *)amount isReward:(BOOL)isReward validator:(NSString *)validator __attribute__((swift_name("doCopy(era:amount:isReward:validator:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *amount __attribute__((swift_name("amount")));
@property (readonly) int32_t era __attribute__((swift_name("era")));
@property (readonly) BOOL isReward __attribute__((swift_name("isReward")));
@property (readonly) NSString *validator __attribute__((swift_name("validator")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessRewardItem.Companion")))
@interface XNetworking_fearlesswalletFearlessRewardItemCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessRewardItemCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubQueryResponse")))
@interface XNetworking_fearlesswalletFearlessSubQueryResponse : XNetworking_fearlesswalletBase
- (instancetype)initWithData:(XNetworking_fearlesswalletFearlessSubQueryResponseData *)data __attribute__((swift_name("init(data:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessSubQueryResponseCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessSubQueryResponse *)doCopyData:(XNetworking_fearlesswalletFearlessSubQueryResponseData *)data __attribute__((swift_name("doCopy(data:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletFearlessSubQueryResponseData *data __attribute__((swift_name("data")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubQueryResponse.Companion")))
@interface XNetworking_fearlesswalletFearlessSubQueryResponseCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessSubQueryResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubQueryResponseData")))
@interface XNetworking_fearlesswalletFearlessSubQueryResponseData : XNetworking_fearlesswalletBase
- (instancetype)initWithHistoryElements:(XNetworking_fearlesswalletFearlessHistoryResponseDataElements *)historyElements __attribute__((swift_name("init(historyElements:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessSubQueryResponseDataCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessSubQueryResponseData *)doCopyHistoryElements:(XNetworking_fearlesswalletFearlessHistoryResponseDataElements *)historyElements __attribute__((swift_name("doCopy(historyElements:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) XNetworking_fearlesswalletFearlessHistoryResponseDataElements *historyElements __attribute__((swift_name("historyElements")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessSubQueryResponseData.Companion")))
@interface XNetworking_fearlesswalletFearlessSubQueryResponseDataCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessSubQueryResponseDataCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessTransferItem")))
@interface XNetworking_fearlesswalletFearlessTransferItem : XNetworking_fearlesswalletBase
- (instancetype)initWithAmount:(NSString *)amount to:(NSString *)to from:(NSString *)from fee:(NSString *)fee block:(NSString * _Nullable)block success:(BOOL)success extrinsicHash:(NSString * _Nullable)extrinsicHash __attribute__((swift_name("init(amount:to:from:fee:block:success:extrinsicHash:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletFearlessTransferItemCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletFearlessTransferItem *)doCopyAmount:(NSString *)amount to:(NSString *)to from:(NSString *)from fee:(NSString *)fee block:(NSString * _Nullable)block success:(BOOL)success extrinsicHash:(NSString * _Nullable)extrinsicHash __attribute__((swift_name("doCopy(amount:to:from:fee:block:success:extrinsicHash:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *amount __attribute__((swift_name("amount")));
@property (readonly) NSString * _Nullable block __attribute__((swift_name("block")));
@property (readonly) NSString * _Nullable extrinsicHash __attribute__((swift_name("extrinsicHash")));
@property (readonly) NSString *fee __attribute__((swift_name("fee")));
@property (readonly) NSString *from __attribute__((swift_name("from")));
@property (readonly) BOOL success __attribute__((swift_name("success")));
@property (readonly) NSString *to __attribute__((swift_name("to")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FearlessTransferItem.Companion")))
@interface XNetworking_fearlesswalletFearlessTransferItemCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletFearlessTransferItemCompanion *shared __attribute__((swift_name("shared")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

@interface XNetworking_fearlesswalletLoggerCompanion (Extensions)
@property (readonly) id<XNetworking_fearlesswalletLogger> DEFAULT __attribute__((swift_name("DEFAULT")));
@property (readonly) id<XNetworking_fearlesswalletLogger> EMPTY __attribute__((swift_name("EMPTY")));
@property (readonly) id<XNetworking_fearlesswalletLogger> SIMPLE __attribute__((swift_name("SIMPLE")));
@end

@interface XNetworking_fearlesswalletHttpClientConfig (Extensions)
- (void)LoggingBlock:(void (^)(XNetworking_fearlesswalletLoggingConfig *))block __attribute__((swift_name("Logging(block:)")));
- (void)BrowserUserAgent __attribute__((swift_name("BrowserUserAgent()")));
- (void)CharsetsBlock:(void (^)(XNetworking_fearlesswalletHttpPlainTextConfig *))block __attribute__((swift_name("Charsets(block:)")));
- (void)CurlUserAgent __attribute__((swift_name("CurlUserAgent()")));
- (void)HttpResponseValidatorBlock:(void (^)(XNetworking_fearlesswalletHttpCallValidatorConfig *))block __attribute__((swift_name("HttpResponseValidator(block:)")));
- (void)addDefaultResponseValidation __attribute__((swift_name("addDefaultResponseValidation()")));
- (void)defaultRequestBlock:(void (^)(XNetworking_fearlesswalletDefaultRequestDefaultRequestBuilder *))block __attribute__((swift_name("defaultRequest(block:)")));
- (void)WebSocketsConfig:(void (^)(XNetworking_fearlesswalletWebSocketsConfig *))config __attribute__((swift_name("WebSockets(config:)")));
- (void)ResponseObserverBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("ResponseObserver(block:)")));
@end

@interface XNetworking_fearlesswalletHttpClientCall (Extensions)

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("body(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler_:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler_:)"))) __attribute__((unavailable("Use `body` method instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveInfo:(XNetworking_fearlesswalletTypeInfo *)info completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(info:completionHandler:)"))) __attribute__((unavailable("Use `body` method instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveWithCompletionHandler:(void (^)(XNetworking_fearlesswalletHttpClientCall * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("save(completionHandler:)")));
- (XNetworking_fearlesswalletHttpClientCall *)wrapWithContentContent:(id<XNetworking_fearlesswalletByteReadChannel>)content __attribute__((swift_name("wrapWithContent(content:)")));
- (XNetworking_fearlesswalletHttpClientCall *)wrapWithContentContent:(id<XNetworking_fearlesswalletByteReadChannel>)content shouldCloseOrigin:(BOOL)shouldCloseOrigin __attribute__((swift_name("wrapWithContent(content:shouldCloseOrigin:)"))) __attribute__((unavailable("Parameter [shouldCloseOrigin] is deprecated")));
@end

@interface XNetworking_fearlesswalletHttpResponse (Extensions)

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("body(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyTypeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("body(typeInfo:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler_:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler_:)"))) __attribute__((unavailable("Use `body` method instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyAsChannelWithCompletionHandler:(void (^)(id<XNetworking_fearlesswalletByteReadChannel> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("bodyAsChannel(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyAsTextFallbackCharset:(XNetworking_fearlesswalletCharset *)fallbackCharset completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("bodyAsText(fallbackCharset:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardRemainingWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("discardRemaining(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBytesWithCompletionHandler:(void (^)(XNetworking_fearlesswalletKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBytes(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBytesCount:(int32_t)count completionHandler:(void (^)(XNetworking_fearlesswalletKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBytes(count:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readTextFallbackCharset:(XNetworking_fearlesswalletCharset * _Nullable)fallbackCharset completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readText(fallbackCharset:completionHandler:)"))) __attribute__((unavailable("Use `bodyAsText` method instead")));
@property (readonly) id<XNetworking_fearlesswalletHttpRequest> request __attribute__((swift_name("request")));
@end

@interface XNetworking_fearlesswalletDispatchers (Extensions)
- (XNetworking_fearlesswalletCoroutineDispatcher *)clientDispatcherThreadCount:(int32_t)threadCount dispatcherName:(NSString *)dispatcherName __attribute__((swift_name("clientDispatcher(threadCount:dispatcherName:)")));
- (XNetworking_fearlesswalletCloseableCoroutineDispatcher *)createFixedThreadDispatcherName:(NSString *)name threads:(int32_t)threads __attribute__((swift_name("createFixedThreadDispatcher(name:threads:)")));
@property (readonly) XNetworking_fearlesswalletCoroutineDispatcher *IO __attribute__((swift_name("IO")));
@end

@interface XNetworking_fearlesswalletKotlinThrowable (Extensions)
- (XNetworking_fearlesswalletKotlinThrowable *)unwrapCancellationException __attribute__((swift_name("unwrapCancellationException()")));
- (void)doInitCauseBridgeCause:(XNetworking_fearlesswalletKotlinThrowable *)cause __attribute__((swift_name("doInitCauseBridge(cause:)")));
- (void)printStack __attribute__((swift_name("printStack()")));
@property (readonly) XNetworking_fearlesswalletKotlinThrowable * _Nullable rootCause __attribute__((swift_name("rootCause")));
@end

@interface XNetworking_fearlesswalletOutgoingContent (Extensions)
- (XNetworking_fearlesswalletOutgoingContent *)wrapHeadersBlock:(id<XNetworking_fearlesswalletHeaders> (^)(id<XNetworking_fearlesswalletHeaders>))block __attribute__((swift_name("wrapHeaders(block:)")));
@property XNetworking_fearlesswalletCachingOptions * _Nullable caching __attribute__((swift_name("caching")));
@property NSArray<id<XNetworking_fearlesswalletVersion>> *versions __attribute__((swift_name("versions")));
@end

@interface XNetworking_fearlesswalletHttpRequestBuilder (Extensions)
- (void)parameterKey:(NSString *)key value:(id _Nullable)value __attribute__((swift_name("parameter(key:value:)")));
- (void)setBodyBody:(id _Nullable)body __attribute__((swift_name("setBody(body:)")));
- (void)setBodyBody:(id _Nullable)body bodyType:(XNetworking_fearlesswalletTypeInfo *)bodyType __attribute__((swift_name("setBody(body:bodyType:)")));
- (XNetworking_fearlesswalletHttpRequestBuilder *)takeFromRequest:(id<XNetworking_fearlesswalletHttpRequest>)request __attribute__((swift_name("takeFrom(request:)")));
- (XNetworking_fearlesswalletHttpRequestBuilder *)takeFromRequest_:(XNetworking_fearlesswalletHttpRequestData *)request __attribute__((swift_name("takeFrom(request_:)")));
- (void)urlBlock_:(void (^)(XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("url(block_:)")));
- (void)urlUrl:(XNetworking_fearlesswalletUrl *)url __attribute__((swift_name("url(url:)")));
- (void)urlUrlString:(NSString *)urlString __attribute__((swift_name("url(urlString:)")));
- (void)urlScheme:(NSString * _Nullable)scheme host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path block:(void (^)(XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("url(scheme:host:port:path:block:)")));
- (void)onDownloadListener:(id<XNetworking_fearlesswalletKotlinSuspendFunction2> _Nullable)listener __attribute__((swift_name("onDownload(listener:)")));
- (void)onUploadListener:(id<XNetworking_fearlesswalletKotlinSuspendFunction2> _Nullable)listener __attribute__((swift_name("onUpload(listener:)")));
- (void)retryBlock:(void (^)(XNetworking_fearlesswalletHttpRequestRetryConfiguration *))block __attribute__((swift_name("retry(block:)")));
- (void)timeoutBlock:(void (^)(XNetworking_fearlesswalletHttpTimeoutHttpTimeoutCapabilityConfiguration *))block __attribute__((swift_name("timeout(block:)")));
@property NSString *host __attribute__((swift_name("host")));
@property int32_t port __attribute__((swift_name("port")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess")));
@end

@interface XNetworking_fearlesswalletHttpClient (Extensions)

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("delete(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("get(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)headBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("head(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)headBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("head(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)headUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("head(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)headUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("head(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("options(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("options(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("options(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)optionsUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("options(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)patchUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("patch(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("post(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("post(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("post(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("post(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareDeleteBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareDelete(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareDeleteBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareDelete(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareDeleteUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareDelete(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareDeleteUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareDelete(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareGetBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareGet(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareGetBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareGet(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareGetUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareGet(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareGetUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareGet(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareHeadBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareHead(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareHeadBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareHead(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareHeadUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareHead(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareHeadUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareHead(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareOptionsBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareOptions(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareOptionsBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareOptions(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareOptionsUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareOptions(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareOptionsUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareOptions(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePatchBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePatch(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePatchBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePatch(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePatchUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePatch(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePatchUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePatch(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePostBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePost(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePostBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePost(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePostUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePost(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePostUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePost(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePutBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePut(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePutBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePut(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePutUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePut(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)preparePutUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("preparePut(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareRequestBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareRequest(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareRequestBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareRequest(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareRequestUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareRequest(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareRequestUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareRequest(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)putBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("put(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)putBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("put(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)putUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("put(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)putUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("put(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestBuilder:(XNetworking_fearlesswalletHttpRequestBuilder *)builder completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("request(builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("request(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestUrl:(XNetworking_fearlesswalletUrl *)url block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("request(url:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)requestUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("request(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareFormFormParameters:(id<XNetworking_fearlesswalletParameters>)formParameters encodeInQuery:(BOOL)encodeInQuery block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareForm(formParameters:encodeInQuery:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareFormUrl:(NSString *)url formParameters:(id<XNetworking_fearlesswalletParameters>)formParameters encodeInQuery:(BOOL)encodeInQuery block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareForm(url:formParameters:encodeInQuery:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareFormWithBinaryDataUrl:(NSString *)url formData:(NSArray<XNetworking_fearlesswalletPartData *> *)formData block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareFormWithBinaryData(url:formData:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)prepareFormWithBinaryDataFormData:(NSArray<XNetworking_fearlesswalletPartData *> *)formData block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpStatement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("prepareFormWithBinaryData(formData:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormFormParameters:(id<XNetworking_fearlesswalletParameters>)formParameters encodeInQuery:(BOOL)encodeInQuery block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("submitForm(formParameters:encodeInQuery:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormUrl:(NSString *)url formParameters:(id<XNetworking_fearlesswalletParameters>)formParameters encodeInQuery:(BOOL)encodeInQuery block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("submitForm(url:formParameters:encodeInQuery:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormWithBinaryDataUrl:(NSString *)url formData:(NSArray<XNetworking_fearlesswalletPartData *> *)formData block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("submitFormWithBinaryData(url:formData:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)submitFormWithBinaryDataFormData:(NSArray<XNetworking_fearlesswalletPartData *> *)formData block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletHttpResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("submitFormWithBinaryData(formData:block:completionHandler:)")));
- (void)defaultTransformers __attribute__((swift_name("defaultTransformers()")));
- (id)pluginPlugin:(id<XNetworking_fearlesswalletHttpClientPlugin>)plugin __attribute__((swift_name("plugin(plugin:)")));
- (id _Nullable)pluginOrNullPlugin:(id<XNetworking_fearlesswalletHttpClientPlugin>)plugin __attribute__((swift_name("pluginOrNull(plugin:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketRequest:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("webSocket(request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketMethod:(XNetworking_fearlesswalletHttpMethod *)method host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path request:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("webSocket(method:host:port:path:request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketUrlString:(NSString *)urlString request:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("webSocket(urlString:request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketSessionBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletDefaultClientWebSocketSession * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocketSession(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketSessionMethod:(XNetworking_fearlesswalletHttpMethod *)method host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletDefaultClientWebSocketSession * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocketSession(method:host:port:path:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)webSocketSessionUrlString:(NSString *)urlString block:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block completionHandler:(void (^)(XNetworking_fearlesswalletDefaultClientWebSocketSession * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("webSocketSession(urlString:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)wsRequest:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("ws(request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)wsMethod:(XNetworking_fearlesswalletHttpMethod *)method host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path request:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("ws(method:host:port:path:request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)wsUrlString:(NSString *)urlString request:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("ws(urlString:request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)wssRequest:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("wss(request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)wssMethod:(XNetworking_fearlesswalletHttpMethod *)method host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path request:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("wss(method:host:port:path:request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)wssUrlString:(NSString *)urlString request:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))request block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("wss(urlString:request:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)cookiesUrl:(XNetworking_fearlesswalletUrl *)url completionHandler:(void (^)(NSArray<XNetworking_fearlesswalletCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("cookies(url:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)cookiesUrlString:(NSString *)urlString completionHandler:(void (^)(NSArray<XNetworking_fearlesswalletCookie *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("cookies(urlString:completionHandler:)")));
@end

@interface XNetworking_fearlesswalletHttpRequestBuilderCompanion (Extensions)
- (XNetworking_fearlesswalletHttpRequestBuilder *)invokeBlock:(void (^)(XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("invoke(block:)")));
- (XNetworking_fearlesswalletHttpRequestBuilder *)invokeScheme:(NSString * _Nullable)scheme host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path block:(void (^)(XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("invoke(scheme:host:port:path:block:)")));
@end

@interface XNetworking_fearlesswalletHttpRequestData (Extensions)
- (BOOL)isUpgradeRequest __attribute__((swift_name("isUpgradeRequest()")));
@end

@interface XNetworking_fearlesswalletFormBuilder (Extensions)
- (void)appendKey:(NSString *)key headers:(id<XNetworking_fearlesswalletHeaders>)headers size:(XNetworking_fearlesswalletLong * _Nullable)size bodyBuilder:(void (^)(XNetworking_fearlesswalletBytePacketBuilder *))bodyBuilder __attribute__((swift_name("append(key:headers:size:bodyBuilder:)")));
- (void)appendKey:(NSString *)key filename:(NSString *)filename contentType:(XNetworking_fearlesswalletContentType * _Nullable)contentType size:(XNetworking_fearlesswalletLong * _Nullable)size bodyBuilder:(void (^)(XNetworking_fearlesswalletBytePacketBuilder *))bodyBuilder __attribute__((swift_name("append(key:filename:contentType:size:bodyBuilder:)")));
@end

@interface XNetworking_fearlesswalletHttpStatement (Extensions)

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler:)"))) __attribute__((unavailable("Use `body` method instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(block:completionHandler:)"))) __attribute__((unavailable("Use `body` method instead")));
@end

@interface XNetworking_fearlesswalletProxyConfig (Extensions)
- (XNetworking_fearlesswalletNetworkAddress *)resolveAddress __attribute__((swift_name("resolveAddress()")));
@property (readonly) XNetworking_fearlesswalletProxyType *type __attribute__((swift_name("type")));
@end

@interface XNetworking_fearlesswalletProxyBuilder (Extensions)
- (XNetworking_fearlesswalletProxyConfig *)httpUrlString:(NSString *)urlString __attribute__((swift_name("http(urlString:)")));
@end

@interface XNetworking_fearlesswalletDefaultClientWebSocketSession (Extensions)

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveDeserializedWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveDeserialized(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveDeserializedTypeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveDeserialized(typeInfo:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendSerializedData:(id _Nullable)data completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("sendSerialized(data:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sendSerializedData:(id _Nullable)data typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("sendSerialized(data:typeInfo:completionHandler:)")));
@property (readonly) id<XNetworking_fearlesswalletWebsocketContentConverter> _Nullable converter __attribute__((swift_name("converter")));
@end

@interface XNetworking_fearlesswalletEvents (Extensions)
- (void)raiseCatchingDefinition:(XNetworking_fearlesswalletEventDefinition<id> *)definition value:(id _Nullable)value logger:(id<XNetworking_fearlesswalletLogger_> _Nullable)logger __attribute__((swift_name("raiseCatching(definition:value:logger:)")));
@end

@interface XNetworking_fearlesswalletSerializersModule (Extensions)

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<XNetworking_fearlesswalletKSerializer>)serializerForTypeInfoTypeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo __attribute__((swift_name("serializerForTypeInfo(typeInfo:)")));
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<XNetworking_fearlesswalletKSerializer>)serializerKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<XNetworking_fearlesswalletKSerializer>> *)typeArgumentsSerializers isNullable:(BOOL)isNullable __attribute__((swift_name("serializer(kClass:typeArgumentsSerializers:isNullable:)")));
- (id<XNetworking_fearlesswalletKSerializer>)serializerType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("serializer(type:)")));
- (id<XNetworking_fearlesswalletKSerializer> _Nullable)serializerOrNullType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("serializerOrNull(type:)")));
- (XNetworking_fearlesswalletSerializersModule *)overwriteWithOther:(XNetworking_fearlesswalletSerializersModule *)other __attribute__((swift_name("overwriteWith(other:)")));
- (XNetworking_fearlesswalletSerializersModule *)plusOther_:(XNetworking_fearlesswalletSerializersModule *)other __attribute__((swift_name("plus(other_:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<XNetworking_fearlesswalletSerialDescriptor> _Nullable)getContextualDescriptorDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("getContextualDescriptor(descriptor:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (NSArray<id<XNetworking_fearlesswalletSerialDescriptor>> *)getPolymorphicDescriptorsDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("getPolymorphicDescriptors(descriptor:)")));
@end

@interface XNetworking_fearlesswalletFrame (Extensions)
- (XNetworking_fearlesswalletKotlinByteArray *)readBytes __attribute__((swift_name("readBytes()")));
@end

@interface XNetworking_fearlesswalletFrameClose (Extensions)
- (XNetworking_fearlesswalletCloseReason * _Nullable)readReason __attribute__((swift_name("readReason()")));
@end

@interface XNetworking_fearlesswalletFrameText (Extensions)
- (NSString *)readText __attribute__((swift_name("readText()")));
@end

@interface XNetworking_fearlesswalletHttpStatusCodeCompanion (Extensions)
@property (readonly) XNetworking_fearlesswalletHttpStatusCode *ExceptionFailed __attribute__((swift_name("ExceptionFailed"))) __attribute__((unavailable("Use ExpectationFailed instead")));
@end

@interface XNetworking_fearlesswalletURLBuilder (Extensions)
- (XNetworking_fearlesswalletURLBuilder *)appendEncodedPathSegmentsComponents:(XNetworking_fearlesswalletKotlinArray<NSString *> *)components __attribute__((swift_name("appendEncodedPathSegments(components:)")));
- (XNetworking_fearlesswalletURLBuilder *)appendEncodedPathSegmentsSegments:(NSArray<NSString *> *)segments __attribute__((swift_name("appendEncodedPathSegments(segments:)")));
- (XNetworking_fearlesswalletURLBuilder *)appendPathSegmentsComponents:(XNetworking_fearlesswalletKotlinArray<NSString *> *)components encodeSlash:(BOOL)encodeSlash __attribute__((swift_name("appendPathSegments(components:encodeSlash:)")));
- (XNetworking_fearlesswalletURLBuilder *)appendPathSegmentsSegments:(NSArray<NSString *> *)segments encodeSlash:(BOOL)encodeSlash __attribute__((swift_name("appendPathSegments(segments:encodeSlash:)")));
- (XNetworking_fearlesswalletURLBuilder *)clone __attribute__((swift_name("clone()")));
- (void)pathPath:(XNetworking_fearlesswalletKotlinArray<NSString *> *)path __attribute__((swift_name("path(path:)")));
- (XNetworking_fearlesswalletURLBuilder *)pathComponentsComponents:(XNetworking_fearlesswalletKotlinArray<NSString *> *)components __attribute__((swift_name("pathComponents(components:)"))) __attribute__((deprecated("Please use appendPathSegments method")));
- (XNetworking_fearlesswalletURLBuilder *)pathComponentsComponents_:(NSArray<NSString *> *)components __attribute__((swift_name("pathComponents(components_:)"))) __attribute__((deprecated("Please use appendPathSegments method")));
- (void)setScheme:(NSString * _Nullable)scheme host:(NSString * _Nullable)host port:(XNetworking_fearlesswalletInt * _Nullable)port path:(NSString * _Nullable)path block:(void (^)(XNetworking_fearlesswalletURLBuilder *))block __attribute__((swift_name("set(scheme:host:port:path:block:)")));
- (XNetworking_fearlesswalletURLBuilder *)takeFromUrl:(XNetworking_fearlesswalletURLBuilder *)url __attribute__((swift_name("takeFrom(url:)")));
- (XNetworking_fearlesswalletURLBuilder *)takeFromUrl_:(XNetworking_fearlesswalletUrl *)url __attribute__((swift_name("takeFrom(url_:)")));
- (XNetworking_fearlesswalletURLBuilder *)takeFromUrlString:(NSString *)urlString __attribute__((swift_name("takeFrom(urlString:)")));
@property (readonly) NSString *authority __attribute__((swift_name("authority")));
@property NSString *encodedPath __attribute__((swift_name("encodedPath")));
@property (readonly) BOOL isAbsolutePath __attribute__((swift_name("isAbsolutePath")));
@property (readonly) BOOL isRelativePath __attribute__((swift_name("isRelativePath")));
@end

@interface XNetworking_fearlesswalletUrl (Extensions)
- (XNetworking_fearlesswalletUrl *)doCopyProtocol:(XNetworking_fearlesswalletURLProtocol *)protocol host:(NSString *)host specifiedPort:(int32_t)specifiedPort encodedPath:(NSString *)encodedPath parameters:(id<XNetworking_fearlesswalletParameters>)parameters fragment:(NSString *)fragment user:(NSString * _Nullable)user password:(NSString * _Nullable)password trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("doCopy(protocol:host:specifiedPort:encodedPath:parameters:fragment:user:password:trailingQuery:)"))) __attribute__((unavailable("Url is not a data class anymore. Please use URLBuilder(url)")));
@property (readonly) NSString *authority __attribute__((swift_name("authority")));
@property (readonly) NSString *fullPath __attribute__((swift_name("fullPath")));
@property (readonly) NSString *hostWithPort __attribute__((swift_name("hostWithPort")));
@property (readonly) BOOL isAbsolutePath __attribute__((swift_name("isAbsolutePath")));
@property (readonly) BOOL isRelativePath __attribute__((swift_name("isRelativePath")));
@property (readonly) NSString *protocolWithAuthority __attribute__((swift_name("protocolWithAuthority")));
@end

@interface XNetworking_fearlesswalletURLBuilderCompanion (Extensions)
@property (readonly) NSString *origin __attribute__((swift_name("origin")));
@end

@interface XNetworking_fearlesswalletHeaderValueWithParameters (Extensions)
- (XNetworking_fearlesswalletCharset * _Nullable)charset __attribute__((swift_name("charset()")));
@end

@interface XNetworking_fearlesswalletContentTypeCompanion (Extensions)
- (XNetworking_fearlesswalletContentType *)defaultForFileExtensionExtension:(NSString *)extension __attribute__((swift_name("defaultForFileExtension(extension:)")));
- (XNetworking_fearlesswalletContentType *)defaultForFilePathPath:(NSString *)path __attribute__((swift_name("defaultForFilePath(path:)")));
- (NSArray<XNetworking_fearlesswalletContentType *> *)fromFileExtensionExt:(NSString *)ext __attribute__((swift_name("fromFileExtension(ext:)")));
- (NSArray<XNetworking_fearlesswalletContentType *> *)fromFilePathPath:(NSString *)path __attribute__((swift_name("fromFilePath(path:)")));
@end

@interface XNetworking_fearlesswalletHeadersBuilder (Extensions)
- (void)etagEntityTag:(NSString *)entityTag __attribute__((swift_name("etag(entityTag:)")));
@end

@interface XNetworking_fearlesswalletContentType (Extensions)
- (NSArray<NSString *> *)fileExtensions __attribute__((swift_name("fileExtensions()")));
- (XNetworking_fearlesswalletContentType *)withCharsetCharset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("withCharset(charset:)")));
- (XNetworking_fearlesswalletContentType *)withCharsetIfNeededCharset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("withCharsetIfNeeded(charset:)")));
@end

@interface XNetworking_fearlesswalletURLProtocol (Extensions)
- (BOOL)isSecure __attribute__((swift_name("isSecure()")));
- (BOOL)isWebsocket __attribute__((swift_name("isWebsocket()")));
@end

@interface XNetworking_fearlesswalletHttpStatusCode (Extensions)
- (BOOL)isSuccess __attribute__((swift_name("isSuccess()")));
@end

@interface XNetworking_fearlesswalletGMTDate (Extensions)
- (NSString *)toHttpDate __attribute__((swift_name("toHttpDate()")));
- (XNetworking_fearlesswalletGMTDate *)minusMilliseconds:(int64_t)milliseconds __attribute__((swift_name("minus(milliseconds:)")));
- (XNetworking_fearlesswalletGMTDate *)minusDuration:(int64_t)duration __attribute__((swift_name("minus(duration:)")));
- (XNetworking_fearlesswalletGMTDate *)plusMilliseconds:(int64_t)milliseconds __attribute__((swift_name("plus(milliseconds:)")));
- (XNetworking_fearlesswalletGMTDate *)plusDuration:(int64_t)duration __attribute__((swift_name("plus(duration:)")));
- (XNetworking_fearlesswalletGMTDate *)truncateToSeconds __attribute__((swift_name("truncateToSeconds()")));
@end

__attribute__((swift_name("KotlinLongProgression")))
@interface XNetworking_fearlesswalletKotlinLongProgression : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterable>
@property (class, readonly, getter=companion) XNetworking_fearlesswalletKotlinLongProgressionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (XNetworking_fearlesswalletKotlinLongIterator *)iterator __attribute__((swift_name("iterator()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t first __attribute__((swift_name("first")));
@property (readonly) int64_t last __attribute__((swift_name("last")));
@property (readonly, getter=step_) int64_t step __attribute__((swift_name("step")));
@end

__attribute__((swift_name("KotlinClosedRange")))
@protocol XNetworking_fearlesswalletKotlinClosedRange
@required
- (BOOL)containsValue:(id)value __attribute__((swift_name("contains(value:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
@property (readonly) id endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) id start __attribute__((swift_name("start")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.9")
*/
__attribute__((swift_name("KotlinOpenEndRange")))
@protocol XNetworking_fearlesswalletKotlinOpenEndRange
@required
- (BOOL)containsValue_:(id)value __attribute__((swift_name("contains(value_:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
@property (readonly) id endExclusive __attribute__((swift_name("endExclusive")));
@property (readonly, getter=start_) id start __attribute__((swift_name("start")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongRange")))
@interface XNetworking_fearlesswalletKotlinLongRange : XNetworking_fearlesswalletKotlinLongProgression <XNetworking_fearlesswalletKotlinClosedRange, XNetworking_fearlesswalletKotlinOpenEndRange>
- (instancetype)initWithStart:(int64_t)start endInclusive:(int64_t)endInclusive __attribute__((swift_name("init(start:endInclusive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletKotlinLongRangeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsValue:(XNetworking_fearlesswalletLong *)value __attribute__((swift_name("contains(value:)")));
- (BOOL)containsValue_:(XNetworking_fearlesswalletLong *)value __attribute__((swift_name("contains(value_:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.9")
*/
@property (readonly) XNetworking_fearlesswalletLong *endExclusive __attribute__((swift_name("endExclusive"))) __attribute__((deprecated("Can throw an exception when it's impossible to represent the value with Long type, for example, when the range includes MAX_VALUE. It's recommended to use 'endInclusive' property that doesn't throw.")));
@property (readonly) XNetworking_fearlesswalletLong *endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) XNetworking_fearlesswalletLong *start __attribute__((swift_name("start")));
@end

@interface XNetworking_fearlesswalletKotlinLongRange (Extensions)
- (BOOL)containsOther:(XNetworking_fearlesswalletKotlinLongRange *)other __attribute__((swift_name("contains(other:)")));
- (id<XNetworking_fearlesswalletFlow>)asFlow __attribute__((swift_name("asFlow()")));
@property (readonly) int64_t length __attribute__((swift_name("length"))) __attribute__((unavailable("Not supported anymore.")));
@end

@interface XNetworking_fearlesswalletPlatformUtils (Extensions)
@property (readonly) XNetworking_fearlesswalletPlatform *platform __attribute__((swift_name("platform")));
@end

@interface XNetworking_fearlesswalletByteReadPacket (Extensions)
- (XNetworking_fearlesswalletInput *)decodeBase64Bytes __attribute__((swift_name("decodeBase64Bytes()")));
- (NSString *)encodeBase64 __attribute__((swift_name("encodeBase64()")));
- (int32_t)readAvailableDst:(void *)dst limit:(int32_t)limit __attribute__((swift_name("readAvailable(dst:limit:)")));
- (int64_t)readAvailableDst:(void *)dst limit_:(int64_t)limit __attribute__((swift_name("readAvailable(dst:limit_:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)readBytesN:(int32_t)n __attribute__((swift_name("readBytes(n:)")));
- (int32_t)readFullyDst:(void *)dst size:(int32_t)size __attribute__((swift_name("readFully(dst:size:)")));
- (int64_t)readFullyDst:(void *)dst size_:(int64_t)size __attribute__((swift_name("readFully(dst:size_:)")));
- (NSString * _Nullable)readUTF8LineEstimate:(int32_t)estimate limit:(int32_t)limit __attribute__((swift_name("readUTF8Line(estimate:limit:)")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) BOOL isNotEmpty __attribute__((swift_name("isNotEmpty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByteArray")))
@interface XNetworking_fearlesswalletKotlinByteArray : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(XNetworking_fearlesswalletByte *(^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (XNetworking_fearlesswalletKotlinByteIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

@interface XNetworking_fearlesswalletKotlinByteArray (Extensions)
- (NSString *)encodeBase64 __attribute__((swift_name("encodeBase64()")));
- (int16_t)readShortOffset:(int32_t)offset __attribute__((swift_name("readShort(offset:)")));
- (id _Nullable)useMemoryOffset:(int32_t)offset length:(int32_t)length block:(id _Nullable (^)(XNetworking_fearlesswalletMemory *))block __attribute__((swift_name("useMemory(offset:length:block:)")));
@end

@interface XNetworking_fearlesswalletNetworkAddress (Extensions)
@property (readonly) NSString *address __attribute__((swift_name("address")));
@property (readonly) NSString *hostname_ __attribute__((swift_name("hostname_")));
@property (readonly) int32_t port_ __attribute__((swift_name("port_")));
@end

@interface XNetworking_fearlesswalletPipeline (Extensions)

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeContext:(id)context completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("execute(context:completionHandler:)")));
- (void)interceptPhase:(XNetworking_fearlesswalletPipelinePhase *)phase block_:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(phase:block_:)")));
@end

@interface XNetworking_fearlesswalletMemory (Extensions)
- (void)doCopyToDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("doCopyTo(destination:offset:length:)")));
- (void)doCopyToDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset__:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset__:)")));
- (void)doCopyToDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("doCopyTo(destination:offset:length_:)")));
- (void)doCopyToDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int64_t)offset length:(int32_t)length destinationOffset___:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset___:)")));
- (void)doCopyToDestination:(void *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset____:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset____:)")));
- (void)doCopyToDestination:(void *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_____:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset_____:)")));
- (void)fillOffset:(int32_t)offset count:(int32_t)count value:(int8_t)value __attribute__((swift_name("fill(offset:count:value:)")));
- (void)fillOffset:(int64_t)offset count:(int64_t)count value_:(int8_t)value __attribute__((swift_name("fill(offset:count:value_:)")));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (int8_t)getIndex_:(int64_t)index __attribute__((swift_name("get(index_:)")));
- (void)loadByteArrayOffset:(int32_t)offset destination:(XNetworking_fearlesswalletKotlinByteArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadByteArray(offset:destination:destinationOffset:count:)")));
- (void)loadByteArrayOffset:(int64_t)offset destination:(XNetworking_fearlesswalletKotlinByteArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadByteArray(offset:destination:destinationOffset:count_:)")));
- (void)loadDoubleArrayOffset:(int32_t)offset destination:(XNetworking_fearlesswalletKotlinDoubleArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadDoubleArray(offset:destination:destinationOffset:count:)")));
- (void)loadDoubleArrayOffset:(int64_t)offset destination:(XNetworking_fearlesswalletKotlinDoubleArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadDoubleArray(offset:destination:destinationOffset:count_:)")));
- (double)loadDoubleAtOffset:(int32_t)offset __attribute__((swift_name("loadDoubleAt(offset:)")));
- (double)loadDoubleAtOffset_:(int64_t)offset __attribute__((swift_name("loadDoubleAt(offset_:)")));
- (void)loadFloatArrayOffset:(int32_t)offset destination:(XNetworking_fearlesswalletKotlinFloatArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadFloatArray(offset:destination:destinationOffset:count:)")));
- (void)loadFloatArrayOffset:(int64_t)offset destination:(XNetworking_fearlesswalletKotlinFloatArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadFloatArray(offset:destination:destinationOffset:count_:)")));
- (float)loadFloatAtOffset:(int32_t)offset __attribute__((swift_name("loadFloatAt(offset:)")));
- (float)loadFloatAtOffset_:(int64_t)offset __attribute__((swift_name("loadFloatAt(offset_:)")));
- (void)loadIntArrayOffset:(int32_t)offset destination:(XNetworking_fearlesswalletKotlinIntArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadIntArray(offset:destination:destinationOffset:count:)")));
- (void)loadIntArrayOffset:(int64_t)offset destination:(XNetworking_fearlesswalletKotlinIntArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadIntArray(offset:destination:destinationOffset:count_:)")));
- (int32_t)loadIntAtOffset:(int32_t)offset __attribute__((swift_name("loadIntAt(offset:)")));
- (int32_t)loadIntAtOffset_:(int64_t)offset __attribute__((swift_name("loadIntAt(offset_:)")));
- (void)loadLongArrayOffset:(int32_t)offset destination:(XNetworking_fearlesswalletKotlinLongArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadLongArray(offset:destination:destinationOffset:count:)")));
- (void)loadLongArrayOffset:(int64_t)offset destination:(XNetworking_fearlesswalletKotlinLongArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadLongArray(offset:destination:destinationOffset:count_:)")));
- (int64_t)loadLongAtOffset:(int32_t)offset __attribute__((swift_name("loadLongAt(offset:)")));
- (int64_t)loadLongAtOffset_:(int64_t)offset __attribute__((swift_name("loadLongAt(offset_:)")));
- (void)loadShortArrayOffset:(int32_t)offset destination:(XNetworking_fearlesswalletKotlinShortArray *)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadShortArray(offset:destination:destinationOffset:count:)")));
- (void)loadShortArrayOffset:(int64_t)offset destination:(XNetworking_fearlesswalletKotlinShortArray *)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadShortArray(offset:destination:destinationOffset:count_:)")));
- (int16_t)loadShortAtOffset:(int32_t)offset __attribute__((swift_name("loadShortAt(offset:)")));
- (int16_t)loadShortAtOffset_:(int64_t)offset __attribute__((swift_name("loadShortAt(offset_:)")));
- (void)loadUByteArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadUByteArray(offset:destination:destinationOffset:count:)")));
- (void)loadUByteArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadUByteArray(offset:destination:destinationOffset:count_:)")));
- (void)loadUIntArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadUIntArray(offset:destination:destinationOffset:count:)")));
- (void)loadUIntArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadUIntArray(offset:destination:destinationOffset:count_:)")));
- (uint32_t)loadUIntAtOffset:(int32_t)offset __attribute__((swift_name("loadUIntAt(offset:)")));
- (uint32_t)loadUIntAtOffset_:(int64_t)offset __attribute__((swift_name("loadUIntAt(offset_:)")));
- (void)loadULongArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadULongArray(offset:destination:destinationOffset:count:)")));
- (void)loadULongArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadULongArray(offset:destination:destinationOffset:count_:)")));
- (uint64_t)loadULongAtOffset:(int32_t)offset __attribute__((swift_name("loadULongAt(offset:)")));
- (uint64_t)loadULongAtOffset_:(int64_t)offset __attribute__((swift_name("loadULongAt(offset_:)")));
- (void)loadUShortArrayOffset:(int32_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count:(int32_t)count __attribute__((swift_name("loadUShortArray(offset:destination:destinationOffset:count:)")));
- (void)loadUShortArrayOffset:(int64_t)offset destination:(id)destination destinationOffset:(int32_t)destinationOffset count_:(int32_t)count __attribute__((swift_name("loadUShortArray(offset:destination:destinationOffset:count_:)")));
- (uint16_t)loadUShortAtOffset:(int32_t)offset __attribute__((swift_name("loadUShortAt(offset:)")));
- (uint16_t)loadUShortAtOffset_:(int64_t)offset __attribute__((swift_name("loadUShortAt(offset_:)")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
- (void)setIndex:(int64_t)index value_:(int8_t)value __attribute__((swift_name("set(index:value_:)")));
- (void)storeAtIndex:(int32_t)index value__:(uint8_t)value __attribute__((swift_name("storeAt(index:value__:)")));
- (void)storeAtIndex:(int64_t)index value___:(uint8_t)value __attribute__((swift_name("storeAt(index:value___:)")));
- (void)storeByteArrayOffset:(int32_t)offset source:(XNetworking_fearlesswalletKotlinByteArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeByteArray(offset:source:sourceOffset:count:)")));
- (void)storeByteArrayOffset:(int64_t)offset source:(XNetworking_fearlesswalletKotlinByteArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeByteArray(offset:source:sourceOffset:count_:)")));
- (void)storeDoubleArrayOffset:(int32_t)offset source:(XNetworking_fearlesswalletKotlinDoubleArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeDoubleArray(offset:source:sourceOffset:count:)")));
- (void)storeDoubleArrayOffset:(int64_t)offset source:(XNetworking_fearlesswalletKotlinDoubleArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeDoubleArray(offset:source:sourceOffset:count_:)")));
- (void)storeDoubleAtOffset:(int32_t)offset value:(double)value __attribute__((swift_name("storeDoubleAt(offset:value:)")));
- (void)storeDoubleAtOffset:(int64_t)offset value_:(double)value __attribute__((swift_name("storeDoubleAt(offset:value_:)")));
- (void)storeFloatArrayOffset:(int32_t)offset source:(XNetworking_fearlesswalletKotlinFloatArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeFloatArray(offset:source:sourceOffset:count:)")));
- (void)storeFloatArrayOffset:(int64_t)offset source:(XNetworking_fearlesswalletKotlinFloatArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeFloatArray(offset:source:sourceOffset:count_:)")));
- (void)storeFloatAtOffset:(int32_t)offset value:(float)value __attribute__((swift_name("storeFloatAt(offset:value:)")));
- (void)storeFloatAtOffset:(int64_t)offset value_:(float)value __attribute__((swift_name("storeFloatAt(offset:value_:)")));
- (void)storeIntArrayOffset:(int32_t)offset source:(XNetworking_fearlesswalletKotlinIntArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeIntArray(offset:source:sourceOffset:count:)")));
- (void)storeIntArrayOffset:(int64_t)offset source:(XNetworking_fearlesswalletKotlinIntArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeIntArray(offset:source:sourceOffset:count_:)")));
- (void)storeIntAtOffset:(int32_t)offset value:(int32_t)value __attribute__((swift_name("storeIntAt(offset:value:)")));
- (void)storeIntAtOffset:(int64_t)offset value_:(int32_t)value __attribute__((swift_name("storeIntAt(offset:value_:)")));
- (void)storeLongArrayOffset:(int32_t)offset source:(XNetworking_fearlesswalletKotlinLongArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeLongArray(offset:source:sourceOffset:count:)")));
- (void)storeLongArrayOffset:(int64_t)offset source:(XNetworking_fearlesswalletKotlinLongArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeLongArray(offset:source:sourceOffset:count_:)")));
- (void)storeLongAtOffset:(int32_t)offset value:(int64_t)value __attribute__((swift_name("storeLongAt(offset:value:)")));
- (void)storeLongAtOffset:(int64_t)offset value_:(int64_t)value __attribute__((swift_name("storeLongAt(offset:value_:)")));
- (void)storeShortArrayOffset:(int32_t)offset source:(XNetworking_fearlesswalletKotlinShortArray *)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeShortArray(offset:source:sourceOffset:count:)")));
- (void)storeShortArrayOffset:(int64_t)offset source:(XNetworking_fearlesswalletKotlinShortArray *)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeShortArray(offset:source:sourceOffset:count_:)")));
- (void)storeShortAtOffset:(int32_t)offset value:(int16_t)value __attribute__((swift_name("storeShortAt(offset:value:)")));
- (void)storeShortAtOffset:(int64_t)offset value_:(int16_t)value __attribute__((swift_name("storeShortAt(offset:value_:)")));
- (void)storeUByteArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeUByteArray(offset:source:sourceOffset:count:)")));
- (void)storeUByteArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeUByteArray(offset:source:sourceOffset:count_:)")));
- (void)storeUIntArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeUIntArray(offset:source:sourceOffset:count:)")));
- (void)storeUIntArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeUIntArray(offset:source:sourceOffset:count_:)")));
- (void)storeUIntAtOffset:(int32_t)offset value:(uint32_t)value __attribute__((swift_name("storeUIntAt(offset:value:)")));
- (void)storeUIntAtOffset:(int64_t)offset value_:(uint32_t)value __attribute__((swift_name("storeUIntAt(offset:value_:)")));
- (void)storeULongArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeULongArray(offset:source:sourceOffset:count:)")));
- (void)storeULongArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeULongArray(offset:source:sourceOffset:count_:)")));
- (void)storeULongAtOffset:(int32_t)offset value:(uint64_t)value __attribute__((swift_name("storeULongAt(offset:value:)")));
- (void)storeULongAtOffset:(int64_t)offset value_:(uint64_t)value __attribute__((swift_name("storeULongAt(offset:value_:)")));
- (void)storeUShortArrayOffset:(int32_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count:(int32_t)count __attribute__((swift_name("storeUShortArray(offset:source:sourceOffset:count:)")));
- (void)storeUShortArrayOffset:(int64_t)offset source:(id)source sourceOffset:(int32_t)sourceOffset count_:(int32_t)count __attribute__((swift_name("storeUShortArray(offset:source:sourceOffset:count_:)")));
- (void)storeUShortAtOffset:(int32_t)offset value:(uint16_t)value __attribute__((swift_name("storeUShortAt(offset:value:)")));
- (void)storeUShortAtOffset:(int64_t)offset value_:(uint16_t)value __attribute__((swift_name("storeUShortAt(offset:value_:)")));
@end

@interface XNetworking_fearlesswalletMemoryCompanion (Extensions)
- (XNetworking_fearlesswalletMemory *)ofPointer:(void *)pointer size:(int32_t)size __attribute__((swift_name("of(pointer:size:)")));
- (XNetworking_fearlesswalletMemory *)ofPointer:(void *)pointer size_:(int64_t)size __attribute__((swift_name("of(pointer:size_:)")));
- (XNetworking_fearlesswalletMemory *)ofPointer:(void *)pointer size__:(uint64_t)size __attribute__((swift_name("of(pointer:size__:)")));
@end

@interface XNetworking_fearlesswalletInput (Extensions)
- (int64_t)doCopyToOutput:(XNetworking_fearlesswalletOutput *)output __attribute__((swift_name("doCopyTo(output:)")));
- (int64_t)discard __attribute__((swift_name("discard()")));
- (void)discardExactN_:(int32_t)n __attribute__((swift_name("discardExact(n_:)")));
- (void)discardExactN__:(int64_t)n __attribute__((swift_name("discardExact(n__:)")));
- (int64_t)discardUntilDelimiterDelimiter:(int8_t)delimiter __attribute__((swift_name("discardUntilDelimiter(delimiter:)")));
- (int64_t)discardUntilDelimitersDelimiter1:(int8_t)delimiter1 delimiter2:(int8_t)delimiter2 __attribute__((swift_name("discardUntilDelimiters(delimiter1:delimiter2:)")));
- (unichar)peekCharUtf8 __attribute__((swift_name("peekCharUtf8()")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletMemory *)destination destinationOffset:(int32_t)destinationOffset length:(int32_t)length __attribute__((swift_name("readAvailable(destination:destinationOffset:length:)")));
- (int64_t)readAvailableDestination:(XNetworking_fearlesswalletMemory *)destination destinationOffset:(int64_t)destinationOffset length_:(int64_t)length __attribute__((swift_name("readAvailable(destination:destinationOffset:length_:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletBuffer *)dst length:(int32_t)length __attribute__((swift_name("readAvailable(dst:length:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailable(dst:offset:length:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletKotlinDoubleArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailable(dst:offset:length_:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletKotlinFloatArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailable(dst:offset:length__:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletKotlinIntArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailable(dst:offset:length___:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletKotlinLongArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailable(dst:offset:length____:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletKotlinShortArray *)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailable(dst:offset:length_____:)")));
- (int32_t)readAvailableDst:(void *)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readAvailable(dst:offset:length______:)")));
- (int64_t)readAvailableDst:(void *)dst offset:(int64_t)offset length_______:(int64_t)length __attribute__((swift_name("readAvailable(dst:offset:length_______:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length__:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length___:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length____:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_____:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length______:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_______:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)readBytes __attribute__((swift_name("readBytes()")));
- (XNetworking_fearlesswalletKotlinByteArray *)readBytesN_:(int32_t)n __attribute__((swift_name("readBytes(n_:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)readBytesOfMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("readBytesOf(min:max:)")));
- (double)readDouble __attribute__((swift_name("readDouble()")));
- (double)readDoubleByteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("readDouble(byteOrder:)")));
- (double)readDoubleFallback __attribute__((swift_name("readDoubleFallback()")));
- (double)readDoubleLittleEndian __attribute__((swift_name("readDoubleLittleEndian()")));
- (float)readFloat __attribute__((swift_name("readFloat()")));
- (float)readFloatByteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("readFloat(byteOrder:)")));
- (float)readFloatFallback __attribute__((swift_name("readFloatFallback()")));
- (float)readFloatLittleEndian __attribute__((swift_name("readFloatLittleEndian()")));
- (void)readFullyDestination:(XNetworking_fearlesswalletMemory *)destination destinationOffset:(int32_t)destinationOffset length:(int32_t)length __attribute__((swift_name("readFully(destination:destinationOffset:length:)")));
- (void)readFullyDestination:(XNetworking_fearlesswalletMemory *)destination destinationOffset:(int64_t)destinationOffset length_:(int64_t)length __attribute__((swift_name("readFully(destination:destinationOffset:length_:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletBuffer *)dst length:(int32_t)length __attribute__((swift_name("readFully(dst:length:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinDoubleArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length_:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinFloatArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length__:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinIntArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length___:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinLongArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length____:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinShortArray *)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length_____:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)readFullyDst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length______:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)readFullyDst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length_______:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)readFullyDst:(id)dst offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length________:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)readFullyDst:(id)dst offset:(int32_t)offset length_________:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length_________:)")));
- (void)readFullyDst:(void *)dst offset:(int32_t)offset length__________:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length__________:)")));
- (void)readFullyDst:(void *)dst offset:(int64_t)offset length___________:(int64_t)length __attribute__((swift_name("readFully(dst:offset:length___________:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length__:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length___:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length____:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_____:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length______:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_______:)")));
- (int32_t)readInt __attribute__((swift_name("readInt()")));
- (int32_t)readIntByteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("readInt(byteOrder:)")));
- (int32_t)readIntLittleEndian __attribute__((swift_name("readIntLittleEndian()")));
- (int64_t)readLong __attribute__((swift_name("readLong()")));
- (int64_t)readLongByteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("readLong(byteOrder:)")));
- (int64_t)readLongLittleEndian __attribute__((swift_name("readLongLittleEndian()")));
- (int16_t)readShort __attribute__((swift_name("readShort()")));
- (int16_t)readShortByteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("readShort(byteOrder:)")));
- (int16_t)readShortLittleEndian __attribute__((swift_name("readShortLittleEndian()")));
- (NSString *)readTextCharset:(XNetworking_fearlesswalletCharset *)charset max:(int32_t)max __attribute__((swift_name("readText(charset:max:)")));
- (NSString *)readTextDecoder:(XNetworking_fearlesswalletCharsetDecoder *)decoder max:(int32_t)max __attribute__((swift_name("readText(decoder:max:)"))) __attribute__((deprecated("Use CharsetDecoder.decode instead")));
- (int32_t)readTextOut:(id<XNetworking_fearlesswalletKotlinAppendable>)out charset:(XNetworking_fearlesswalletCharset *)charset max:(int32_t)max __attribute__((swift_name("readText(out:charset:max:)")));
- (NSString *)readTextExactCharset:(XNetworking_fearlesswalletCharset *)charset n:(int32_t)n __attribute__((swift_name("readTextExact(charset:n:)"))) __attribute__((deprecated("Use readTextExactCharacters instead.")));
- (NSString *)readTextExactBytesCharset:(XNetworking_fearlesswalletCharset *)charset bytes:(int32_t)bytes __attribute__((swift_name("readTextExactBytes(charset:bytes:)"))) __attribute__((deprecated("Parameters order is changed.")));
- (NSString *)readTextExactBytesBytesCount:(int32_t)bytesCount charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("readTextExactBytes(bytesCount:charset:)")));
- (NSString *)readTextExactCharactersCharactersCount:(int32_t)charactersCount charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("readTextExactCharacters(charactersCount:charset:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (uint8_t)readUByte __attribute__((swift_name("readUByte()")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (uint32_t)readUInt __attribute__((swift_name("readUInt()")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (uint64_t)readULong __attribute__((swift_name("readULong()")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (uint16_t)readUShort __attribute__((swift_name("readUShort()")));
- (NSString * _Nullable)readUTF8LineEstimate:(int32_t)estimate limit_:(int32_t)limit __attribute__((swift_name("readUTF8Line(estimate:limit_:)")));
- (BOOL)readUTF8LineToOut:(id<XNetworking_fearlesswalletKotlinAppendable>)out limit:(int32_t)limit __attribute__((swift_name("readUTF8LineTo(out:limit:)")));
- (NSString *)readUTF8UntilDelimiterDelimiters:(NSString *)delimiters limit:(int32_t)limit __attribute__((swift_name("readUTF8UntilDelimiter(delimiters:limit:)")));
- (int32_t)readUTF8UntilDelimiterToOut:(XNetworking_fearlesswalletOutput *)out delimiters:(NSString *)delimiters limit:(int32_t)limit __attribute__((swift_name("readUTF8UntilDelimiterTo(out:delimiters:limit:)")));
- (int32_t)readUTF8UntilDelimiterToOut:(id<XNetworking_fearlesswalletKotlinAppendable>)out delimiters:(NSString *)delimiters limit_:(int32_t)limit __attribute__((swift_name("readUTF8UntilDelimiterTo(out:delimiters:limit_:)")));
- (int64_t)readUntilDelimiterDelimiter:(int8_t)delimiter dst:(XNetworking_fearlesswalletOutput *)dst __attribute__((swift_name("readUntilDelimiter(delimiter:dst:)")));
- (int32_t)readUntilDelimiterDelimiter:(int8_t)delimiter dst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readUntilDelimiter(delimiter:dst:offset:length:)")));
- (int64_t)readUntilDelimitersDelimiter1:(int8_t)delimiter1 delimiter2:(int8_t)delimiter2 dst:(XNetworking_fearlesswalletOutput *)dst __attribute__((swift_name("readUntilDelimiters(delimiter1:delimiter2:dst:)")));
- (int32_t)readUntilDelimitersDelimiter1:(int8_t)delimiter1 delimiter2:(int8_t)delimiter2 dst:(XNetworking_fearlesswalletKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readUntilDelimiters(delimiter1:delimiter2:dst:offset:length:)")));
- (void)takeWhileBlock:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletBuffer *))block __attribute__((swift_name("takeWhile(block:)")));
@property (readonly, getter=isEmpty__) BOOL isEmpty_ __attribute__((swift_name("isEmpty_"))) __attribute__((deprecated("Use endOfInput property instead")));
@property (readonly) BOOL isNotEmpty_ __attribute__((swift_name("isNotEmpty_"))) __attribute__((deprecated("This makes no sense for streaming inputs. Some use-cases are covered by endOfInput property")));
@end

@interface XNetworking_fearlesswalletBuffer (Extensions)
- (XNetworking_fearlesswalletBuffer *)appendC:(unichar)c __attribute__((swift_name("append(c:)"))) __attribute__((unavailable("This is no longer supported. Use a packet builder to append characters instead.")));
- (XNetworking_fearlesswalletBuffer *)appendCsq:(XNetworking_fearlesswalletKotlinCharArray *)csq start:(int32_t)start end:(int32_t)end __attribute__((swift_name("append(csq:start:end:)"))) __attribute__((unavailable("This is no longer supported. Use a packet builder to append characters instead.")));
- (XNetworking_fearlesswalletBuffer *)appendCsq:(id _Nullable)csq __attribute__((swift_name("append(csq:)"))) __attribute__((unavailable("This is no longer supported. Use a packet builder to append characters instead.")));
- (XNetworking_fearlesswalletBuffer *)appendCsq:(id _Nullable)csq start:(int32_t)start end_:(int32_t)end __attribute__((swift_name("append(csq:start:end_:)"))) __attribute__((unavailable("This is no longer supported. Use a packet builder to append characters instead.")));
- (BOOL)canRead __attribute__((swift_name("canRead()")));
- (BOOL)canWrite __attribute__((swift_name("canWrite()")));
- (void)fillTimes:(int32_t)times value:(int8_t)value __attribute__((swift_name("fill(times:value:)")));
- (void)fillTimes:(int32_t)times value_:(uint8_t)value __attribute__((swift_name("fill(times:value_:)")));
- (void)fillN:(int64_t)n v:(int8_t)v __attribute__((swift_name("fill(n:v:)"))) __attribute__((deprecated("Use fill with n with type Int")));
- (void)flush_ __attribute__((swift_name("flush_()"))) __attribute__((unavailable("Does nothing.")));
- (void)forEachBlock:(void (^)(XNetworking_fearlesswalletByte *))block __attribute__((swift_name("forEach(block:)")));
- (XNetworking_fearlesswalletBuffer *)makeView __attribute__((swift_name("makeView()"))) __attribute__((unavailable("Use duplicate instead")));
- (void)pushBackN:(int32_t)n __attribute__((swift_name("pushBack(n:)"))) __attribute__((unavailable("Use rewind instead")));
- (int32_t)readBlock:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletMemory *, XNetworking_fearlesswalletInt *, XNetworking_fearlesswalletInt *))block __attribute__((swift_name("read(block:)")));
- (int32_t)readAvailableDst:(XNetworking_fearlesswalletBuffer *)dst length:(int32_t)length __attribute__((swift_name("readAvailable(dst:length:)")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length:)")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletKotlinDoubleArray *)destination offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_:)")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletKotlinFloatArray *)destination offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length__:)")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletKotlinIntArray *)destination offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length___:)")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletKotlinLongArray *)destination offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length____:)")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletKotlinShortArray *)destination offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_____:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length______:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_______:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length________:)")));
- (int32_t)readAvailableDestination:(id)destination offset:(int32_t)offset length_________:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length_________:)")));
- (int32_t)readAvailablePointer:(void *)pointer offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailable(pointer:offset:length:)")));
- (int32_t)readAvailablePointer:(void *)pointer offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailable(pointer:offset:length_:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length__:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length___:)")));
- (int32_t)readAvailableLittleEndianDst:(XNetworking_fearlesswalletKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length____:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_____:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length______:)")));
- (int32_t)readAvailableLittleEndianDst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readAvailableLittleEndian(dst:offset:length_______:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)readBytesCount:(int32_t)count __attribute__((swift_name("readBytes(count:)")));
- (int32_t)readDirectBlock:(XNetworking_fearlesswalletInt *(^)(id))block __attribute__((swift_name("readDirect(block:)")));
- (double)readDouble __attribute__((swift_name("readDouble()")));
- (double)readDoubleLittleEndian __attribute__((swift_name("readDoubleLittleEndian()")));
- (float)readFloat __attribute__((swift_name("readFloat()")));
- (float)readFloatLittleEndian __attribute__((swift_name("readFloatLittleEndian()")));
- (int32_t)readFullyDst:(XNetworking_fearlesswalletBuffer *)dst length:(int32_t)length __attribute__((swift_name("readFully(dst:length:)")));
- (void)readFullyDst:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletByte *> *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(dst:offset:length:)")));
- (void)readFullyDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length:)")));
- (void)readFullyDestination:(XNetworking_fearlesswalletKotlinDoubleArray *)destination offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_:)")));
- (void)readFullyDestination:(XNetworking_fearlesswalletKotlinFloatArray *)destination offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length__:)")));
- (void)readFullyDestination:(XNetworking_fearlesswalletKotlinIntArray *)destination offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length___:)")));
- (void)readFullyDestination:(XNetworking_fearlesswalletKotlinLongArray *)destination offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length____:)")));
- (void)readFullyDestination:(XNetworking_fearlesswalletKotlinShortArray *)destination offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_____:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length______:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_______:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length________:)")));
- (void)readFullyDestination:(id)destination offset:(int32_t)offset length_________:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length_________:)")));
- (void)readFullyPointer:(void *)pointer offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFully(pointer:offset:length:)")));
- (void)readFullyPointer:(void *)pointer offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("readFully(pointer:offset:length_:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinDoubleArray *)dst offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinFloatArray *)dst offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinIntArray *)dst offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length__:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinLongArray *)dst offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length___:)")));
- (void)readFullyLittleEndianDst:(XNetworking_fearlesswalletKotlinShortArray *)dst offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length____:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_____:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length______:)")));
- (void)readFullyLittleEndianDst:(id)dst offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("readFullyLittleEndian(dst:offset:length_______:)")));
- (int32_t)readInt __attribute__((swift_name("readInt()")));
- (int32_t)readIntLittleEndian __attribute__((swift_name("readIntLittleEndian()")));
- (int64_t)readLong __attribute__((swift_name("readLong()")));
- (int64_t)readLongLittleEndian __attribute__((swift_name("readLongLittleEndian()")));
- (int16_t)readShort __attribute__((swift_name("readShort()")));
- (int16_t)readShortLittleEndian __attribute__((swift_name("readShortLittleEndian()")));
- (NSString *)readTextCharset:(XNetworking_fearlesswalletCharset *)charset max:(int32_t)max __attribute__((swift_name("readText(charset:max:)")));
- (int32_t)readTextDecoder:(XNetworking_fearlesswalletCharsetDecoder *)decoder out:(id<XNetworking_fearlesswalletKotlinAppendable>)out lastBuffer:(BOOL)lastBuffer max:(int32_t)max __attribute__((swift_name("readText(decoder:out:lastBuffer:max:)"))) __attribute__((unavailable("This is no longer supported. Read from a packet instead.")));
- (uint8_t)readUByte __attribute__((swift_name("readUByte()")));
- (uint32_t)readUInt __attribute__((swift_name("readUInt()")));
- (uint64_t)readULong __attribute__((swift_name("readULong()")));
- (uint16_t)readUShort __attribute__((swift_name("readUShort()")));
- (int32_t)tryPeek __attribute__((swift_name("tryPeek()"))) __attribute__((unavailable("Use tryPeekByte instead")));
- (int32_t)writeBlock:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletMemory *, XNetworking_fearlesswalletInt *, XNetworking_fearlesswalletInt *))block __attribute__((swift_name("write(block:)")));
- (int32_t)writeDirectBlock:(XNetworking_fearlesswalletInt *(^)(id))block __attribute__((swift_name("writeDirect(block:)")));
- (void)writeDoubleValue:(double)value __attribute__((swift_name("writeDouble(value:)")));
- (void)writeDoubleLittleEndianValue:(double)value __attribute__((swift_name("writeDoubleLittleEndian(value:)")));
- (void)writeFloatValue:(float)value __attribute__((swift_name("writeFloat(value:)")));
- (void)writeFloatLittleEndianValue:(float)value __attribute__((swift_name("writeFloatLittleEndian(value:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletBuffer *)src __attribute__((swift_name("writeFully(src:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletBuffer *)src length:(int32_t)length __attribute__((swift_name("writeFully(src:length:)")));
- (void)writeFullySource:(XNetworking_fearlesswalletKotlinByteArray *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length:)")));
- (void)writeFullySource:(XNetworking_fearlesswalletKotlinDoubleArray *)source offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_:)")));
- (void)writeFullySource:(XNetworking_fearlesswalletKotlinFloatArray *)source offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length__:)")));
- (void)writeFullySource:(XNetworking_fearlesswalletKotlinIntArray *)source offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length___:)")));
- (void)writeFullySource:(XNetworking_fearlesswalletKotlinLongArray *)source offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length____:)")));
- (void)writeFullySource:(XNetworking_fearlesswalletKotlinShortArray *)source offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_____:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length______:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_______:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length________:)")));
- (void)writeFullySource:(id)source offset:(int32_t)offset length_________:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length_________:)")));
- (void)writeFullyPointer:(void *)pointer offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(pointer:offset:length:)")));
- (void)writeFullyPointer:(void *)pointer offset:(int64_t)offset length_:(int32_t)length __attribute__((swift_name("writeFully(pointer:offset:length_:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinDoubleArray *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinFloatArray *)source offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinIntArray *)source offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length__:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinLongArray *)source offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length___:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinShortArray *)source offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length____:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_____:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length______:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_______:)")));
- (void)writeIntValue:(int32_t)value __attribute__((swift_name("writeInt(value:)")));
- (void)writeIntLittleEndianValue:(int32_t)value __attribute__((swift_name("writeIntLittleEndian(value:)")));
- (void)writeLongValue:(int64_t)value __attribute__((swift_name("writeLong(value:)")));
- (void)writeLongLittleEndianValue:(int64_t)value __attribute__((swift_name("writeLongLittleEndian(value:)")));
- (void)writeShortValue:(int16_t)value __attribute__((swift_name("writeShort(value:)")));
- (void)writeShortLittleEndianValue:(int16_t)value __attribute__((swift_name("writeShortLittleEndian(value:)")));
- (void)writeUByteValue:(uint8_t)value __attribute__((swift_name("writeUByte(value:)")));
- (void)writeUIntValue:(uint32_t)value __attribute__((swift_name("writeUInt(value:)")));
- (void)writeULongValue:(uint64_t)value __attribute__((swift_name("writeULong(value:)")));
- (void)writeUShortValue:(uint16_t)value __attribute__((swift_name("writeUShort(value:)")));
@end

@interface XNetworking_fearlesswalletOutput (Extensions)
- (id<XNetworking_fearlesswalletKotlinAppendable>)appendCsq:(XNetworking_fearlesswalletKotlinCharArray *)csq start:(int32_t)start end_:(int32_t)end __attribute__((swift_name("append(csq:start:end_:)")));
- (id<XNetworking_fearlesswalletKotlinAppendable>)appendCsq:(id)csq start:(int32_t)start end__:(int32_t)end __attribute__((swift_name("append(csq:start:end__:)")));
- (void)fillTimes:(int64_t)times value:(int8_t)value __attribute__((swift_name("fill(times:value:)")));
- (void)writeDoubleValue:(double)value __attribute__((swift_name("writeDouble(value:)")));
- (void)writeDoubleValue:(double)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("writeDouble(value:byteOrder:)")));
- (void)writeDoubleLittleEndianValue:(double)value __attribute__((swift_name("writeDoubleLittleEndian(value:)")));
- (void)writeFloatValue:(float)value __attribute__((swift_name("writeFloat(value:)")));
- (void)writeFloatValue:(float)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("writeFloat(value:byteOrder:)")));
- (void)writeFloatLittleEndianValue:(float)value __attribute__((swift_name("writeFloatLittleEndian(value:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletMemory *)src offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletMemory *)src offset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("writeFully(src:offset:length_:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletBuffer *)src length:(int32_t)length __attribute__((swift_name("writeFully(src:length:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinByteArray *)src offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length__:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinDoubleArray *)src offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length___:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinFloatArray *)src offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length____:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinIntArray *)src offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length_____:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinLongArray *)src offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length______:)")));
- (void)writeFullySrc:(XNetworking_fearlesswalletKotlinShortArray *)src offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length_______:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeFullyArray:(id)array offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFully(array:offset:length:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeFullyArray:(id)array offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFully(array:offset:length_:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeFullyArray:(id)array offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFully(array:offset:length__:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeFullyArray:(id)array offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFully(array:offset:length___:)")));
- (void)writeFullySrc:(void *)src offset:(int32_t)offset length________:(int32_t)length __attribute__((swift_name("writeFully(src:offset:length________:)")));
- (void)writeFullySrc:(void *)src offset:(int64_t)offset length_________:(int64_t)length __attribute__((swift_name("writeFully(src:offset:length_________:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinDoubleArray *)source offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinFloatArray *)source offset:(int32_t)offset length_:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinIntArray *)source offset:(int32_t)offset length__:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length__:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinLongArray *)source offset:(int32_t)offset length___:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length___:)")));
- (void)writeFullyLittleEndianSource:(XNetworking_fearlesswalletKotlinShortArray *)source offset:(int32_t)offset length____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length____:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length_____:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_____:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length______:)")));
- (void)writeFullyLittleEndianSource:(id)source offset:(int32_t)offset length_______:(int32_t)length __attribute__((swift_name("writeFullyLittleEndian(source:offset:length_______:)")));
- (void)writeIntValue:(int32_t)value __attribute__((swift_name("writeInt(value:)")));
- (void)writeIntValue:(int32_t)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("writeInt(value:byteOrder:)")));
- (void)writeIntLittleEndianValue:(int32_t)value __attribute__((swift_name("writeIntLittleEndian(value:)")));
- (void)writeLongValue:(int64_t)value __attribute__((swift_name("writeLong(value:)")));
- (void)writeLongValue:(int64_t)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("writeLong(value:byteOrder:)")));
- (void)writeLongLittleEndianValue:(int64_t)value __attribute__((swift_name("writeLongLittleEndian(value:)")));
- (void)writeShortValue:(int16_t)value __attribute__((swift_name("writeShort(value:)")));
- (void)writeShortValue:(int16_t)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder __attribute__((swift_name("writeShort(value:byteOrder:)")));
- (void)writeShortLittleEndianValue:(int16_t)value __attribute__((swift_name("writeShortLittleEndian(value:)")));
- (void)writeTextText:(XNetworking_fearlesswalletKotlinCharArray *)text fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("writeText(text:fromIndex:toIndex:charset:)")));
- (void)writeTextText:(id)text fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex charset_:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("writeText(text:fromIndex:toIndex:charset_:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeUByteV:(uint8_t)v __attribute__((swift_name("writeUByte(v:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeUIntV:(uint32_t)v __attribute__((swift_name("writeUInt(v:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeULongV:(uint64_t)v __attribute__((swift_name("writeULong(v:)")));

/**
 * @note annotations
 *   kotlin.ExperimentalUnsignedTypes
*/
- (void)writeUShortV:(uint16_t)v __attribute__((swift_name("writeUShort(v:)")));
@end

@interface XNetworking_fearlesswalletChunkBuffer (Extensions)
- (XNetworking_fearlesswalletChunkBuffer *)makeView_ __attribute__((swift_name("makeView_()"))) __attribute__((unavailable("Use duplicate instead")));
- (int32_t)readAvailableDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int32_t)offset length__________:(int32_t)length __attribute__((swift_name("readAvailable(destination:offset:length__________:)")));
- (double)readDouble_ __attribute__((swift_name("readDouble_()")));
- (float)readFloat_ __attribute__((swift_name("readFloat_()")));
- (void)readFullyDestination:(XNetworking_fearlesswalletKotlinByteArray *)destination offset:(int32_t)offset length__________:(int32_t)length __attribute__((swift_name("readFully(destination:offset:length__________:)")));
- (int32_t)readInt_ __attribute__((swift_name("readInt_()")));
- (int64_t)readLong_ __attribute__((swift_name("readLong_()")));
- (int16_t)readShort_ __attribute__((swift_name("readShort_()")));
- (uint8_t)readUByte_ __attribute__((swift_name("readUByte_()")));
- (uint32_t)readUInt_ __attribute__((swift_name("readUInt_()")));
- (uint64_t)readULong_ __attribute__((swift_name("readULong_()")));
- (uint16_t)readUShort_ __attribute__((swift_name("readUShort_()")));
- (void)writeDoubleValue_:(double)value __attribute__((swift_name("writeDouble(value_:)")));
- (void)writeFloatValue_:(float)value __attribute__((swift_name("writeFloat(value_:)")));
- (void)writeFullySource:(XNetworking_fearlesswalletKotlinByteArray *)source offset:(int32_t)offset length__________:(int32_t)length __attribute__((swift_name("writeFully(source:offset:length__________:)")));
- (void)writeIntValue_:(int32_t)value __attribute__((swift_name("writeInt(value_:)")));
- (void)writeLongValue_:(int64_t)value __attribute__((swift_name("writeLong(value_:)")));
- (void)writeShortValue_:(int16_t)value __attribute__((swift_name("writeShort(value_:)")));
- (void)writeUByteValue_:(uint8_t)value __attribute__((swift_name("writeUByte(value_:)")));
- (void)writeUIntValue_:(uint32_t)value __attribute__((swift_name("writeUInt(value_:)")));
- (void)writeULongValue_:(uint64_t)value __attribute__((swift_name("writeULong(value_:)")));
- (void)writeUShortValue_:(uint16_t)value __attribute__((swift_name("writeUShort(value_:)")));
@end

@interface XNetworking_fearlesswalletBytePacketBuilder (Extensions)
- (id _Nullable)previewBlock:(id _Nullable (^)(XNetworking_fearlesswalletByteReadPacket *))block __attribute__((swift_name("preview(block:)")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)writeFullySrc:(void *)src size:(int32_t)size __attribute__((swift_name("writeFully(src:size:)")));
@end

@interface XNetworking_fearlesswalletCharsetDecoder (Extensions)
- (NSString *)decodeInput:(XNetworking_fearlesswalletInput *)input max:(int32_t)max __attribute__((swift_name("decode(input:max:)")));
- (int32_t)decodeInput:(XNetworking_fearlesswalletInput *)input dst:(id<XNetworking_fearlesswalletKotlinAppendable>)dst max:(int32_t)max __attribute__((swift_name("decode(input:dst:max:)")));
- (NSString *)decodeExactBytesInput:(XNetworking_fearlesswalletInput *)input inputLength:(int32_t)inputLength __attribute__((swift_name("decodeExactBytes(input:inputLength:)")));
@property (readonly) XNetworking_fearlesswalletCharset *charset __attribute__((swift_name("charset")));
@end

@interface XNetworking_fearlesswalletCharsetEncoder (Extensions)
- (void)encodeInput:(XNetworking_fearlesswalletKotlinCharArray *)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex dst:(XNetworking_fearlesswalletOutput *)dst __attribute__((swift_name("encode(input:fromIndex:toIndex:dst:)")));
- (XNetworking_fearlesswalletByteReadPacket *)encodeInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("encode(input:fromIndex:toIndex:)")));
- (void)encodeInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex dst_:(XNetworking_fearlesswalletOutput *)dst __attribute__((swift_name("encode(input:fromIndex:toIndex:dst_:)"))) __attribute__((unavailable("Use writeText on Output instead.")));
- (XNetworking_fearlesswalletKotlinByteArray *)encodeToByteArrayInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("encodeToByteArray(input:fromIndex:toIndex:)")));
- (XNetworking_fearlesswalletKotlinByteArray *)encodeToByteArrayImplInput:(id)input fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("encodeToByteArrayImpl(input:fromIndex:toIndex:)"))) __attribute__((unavailable("Internal API. Will be hidden in future releases. Use encodeToByteArray instead.")));
- (XNetworking_fearlesswalletByteReadPacket *)encodeUTF8Input:(XNetworking_fearlesswalletByteReadPacket *)input __attribute__((swift_name("encodeUTF8(input:)")));
- (void)encodeUTF8Input:(XNetworking_fearlesswalletByteReadPacket *)input dst:(XNetworking_fearlesswalletOutput *)dst __attribute__((swift_name("encodeUTF8(input:dst:)")));
@property (readonly) XNetworking_fearlesswalletCharset *charset __attribute__((swift_name("charset")));
@end

@interface XNetworking_fearlesswalletCharset (Extensions)
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

@interface XNetworking_fearlesswalletJsonPrimitive (Extensions)
@property (readonly) BOOL boolean __attribute__((swift_name("boolean")));
@property (readonly) XNetworking_fearlesswalletBoolean * _Nullable booleanOrNull __attribute__((swift_name("booleanOrNull")));
@property (readonly) NSString * _Nullable contentOrNull __attribute__((swift_name("contentOrNull")));
@property (readonly, getter=double) double double_ __attribute__((swift_name("double_")));
@property (readonly) XNetworking_fearlesswalletDouble * _Nullable doubleOrNull __attribute__((swift_name("doubleOrNull")));
@property (readonly, getter=float) float float_ __attribute__((swift_name("float_")));
@property (readonly) XNetworking_fearlesswalletFloat * _Nullable floatOrNull __attribute__((swift_name("floatOrNull")));
@property (readonly, getter=int) int32_t int_ __attribute__((swift_name("int_")));
@property (readonly) XNetworking_fearlesswalletInt * _Nullable intOrNull __attribute__((swift_name("intOrNull")));
@property (readonly, getter=long) int64_t long_ __attribute__((swift_name("long_")));
@property (readonly) XNetworking_fearlesswalletLong * _Nullable longOrNull __attribute__((swift_name("longOrNull")));
@end

@interface XNetworking_fearlesswalletJsonElement (Extensions)
@property (readonly) NSArray<XNetworking_fearlesswalletJsonElement *> *jsonArray __attribute__((swift_name("jsonArray")));
@property (readonly) XNetworking_fearlesswalletJsonNull *jsonNull __attribute__((swift_name("jsonNull")));
@property (readonly) NSDictionary<NSString *, XNetworking_fearlesswalletJsonElement *> *jsonObject __attribute__((swift_name("jsonObject")));
@property (readonly) XNetworking_fearlesswalletJsonPrimitive *jsonPrimitive __attribute__((swift_name("jsonPrimitive")));
@end

@interface XNetworking_fearlesswalletJsonArrayBuilder (Extensions)
- (BOOL)addValue:(XNetworking_fearlesswalletBoolean * _Nullable)value __attribute__((swift_name("add(value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)addValue_:(XNetworking_fearlesswalletKotlinNothing * _Nullable)value __attribute__((swift_name("add(value_:)")));
- (BOOL)addValue__:(id _Nullable)value __attribute__((swift_name("add(value__:)")));
- (BOOL)addValue___:(NSString * _Nullable)value __attribute__((swift_name("add(value___:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmName(name="addAllBooleans")
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)addAllValues:(id)values __attribute__((swift_name("addAll(values:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmName(name="addAllNumbers")
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)addAllValues_:(id)values __attribute__((swift_name("addAll(values_:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmName(name="addAllStrings")
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)addAllValues__:(id)values __attribute__((swift_name("addAll(values__:)")));
- (BOOL)addJsonArrayBuilderAction:(void (^)(XNetworking_fearlesswalletJsonArrayBuilder *))builderAction __attribute__((swift_name("addJsonArray(builderAction:)")));
- (BOOL)addJsonObjectBuilderAction:(void (^)(XNetworking_fearlesswalletJsonObjectBuilder *))builderAction __attribute__((swift_name("addJsonObject(builderAction:)")));
@end

@interface XNetworking_fearlesswalletJson (Extensions)
- (id _Nullable)decodeFromJsonElementJson:(XNetworking_fearlesswalletJsonElement *)json __attribute__((swift_name("decodeFromJsonElement(json:)")));
- (XNetworking_fearlesswalletJsonElement *)encodeToJsonElementValue:(id _Nullable)value __attribute__((swift_name("encodeToJsonElement(value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (XNetworking_fearlesswalletJsonElement *)decodeStringToJsonTreeDeserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer source:(NSString *)source __attribute__((swift_name("decodeStringToJsonTree(deserializer:source:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (id _Nullable)readJsonElement:(XNetworking_fearlesswalletJsonElement *)element deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer __attribute__((swift_name("readJson(element:deserializer:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (XNetworking_fearlesswalletJsonElement *)writeJsonValue:(id _Nullable)value serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer __attribute__((swift_name("writeJson(value:serializer:)")));
@end

@interface XNetworking_fearlesswalletJsonObjectBuilder (Extensions)
- (XNetworking_fearlesswalletJsonElement * _Nullable)putKey:(NSString *)key value:(XNetworking_fearlesswalletBoolean * _Nullable)value __attribute__((swift_name("put(key:value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (XNetworking_fearlesswalletJsonElement * _Nullable)putKey:(NSString *)key value_:(XNetworking_fearlesswalletKotlinNothing * _Nullable)value __attribute__((swift_name("put(key:value_:)")));
- (XNetworking_fearlesswalletJsonElement * _Nullable)putKey:(NSString *)key value__:(id _Nullable)value __attribute__((swift_name("put(key:value__:)")));
- (XNetworking_fearlesswalletJsonElement * _Nullable)putKey:(NSString *)key value___:(NSString * _Nullable)value __attribute__((swift_name("put(key:value___:)")));
- (XNetworking_fearlesswalletJsonElement * _Nullable)putJsonArrayKey:(NSString *)key builderAction:(void (^)(XNetworking_fearlesswalletJsonArrayBuilder *))builderAction __attribute__((swift_name("putJsonArray(key:builderAction:)")));
- (XNetworking_fearlesswalletJsonElement * _Nullable)putJsonObjectKey:(NSString *)key builderAction:(void (^)(XNetworking_fearlesswalletJsonObjectBuilder *))builderAction __attribute__((swift_name("putJsonObject(key:builderAction:)")));
@end

@interface XNetworking_fearlesswalletCoroutineDispatcher (Extensions)

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(block:completionHandler:)")));
@end

@interface XNetworking_fearlesswalletSharingStartedCompanion (Extensions)
- (id<XNetworking_fearlesswalletSharingStarted>)WhileSubscribedStopTimeout:(int64_t)stopTimeout replayExpiration:(int64_t)replayExpiration __attribute__((swift_name("WhileSubscribed(stopTimeout:replayExpiration:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinArray")))
@interface XNetworking_fearlesswalletKotlinArray<T> : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size init:(T _Nullable (^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (T _Nullable)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (id<XNetworking_fearlesswalletKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(T _Nullable)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

@interface XNetworking_fearlesswalletKotlinArray (Extensions)
- (id<XNetworking_fearlesswalletFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntArray")))
@interface XNetworking_fearlesswalletKotlinIntArray : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int32_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (XNetworking_fearlesswalletKotlinIntIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int32_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

@interface XNetworking_fearlesswalletKotlinIntArray (Extensions)
- (id<XNetworking_fearlesswalletFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongArray")))
@interface XNetworking_fearlesswalletKotlinLongArray : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(XNetworking_fearlesswalletLong *(^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int64_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (XNetworking_fearlesswalletKotlinLongIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int64_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

@interface XNetworking_fearlesswalletKotlinLongArray (Extensions)
- (id<XNetworking_fearlesswalletFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end

__attribute__((swift_name("KotlinIntProgression")))
@interface XNetworking_fearlesswalletKotlinIntProgression : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterable>
@property (class, readonly, getter=companion) XNetworking_fearlesswalletKotlinIntProgressionCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (XNetworking_fearlesswalletKotlinIntIterator *)iterator __attribute__((swift_name("iterator()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t first __attribute__((swift_name("first")));
@property (readonly) int32_t last __attribute__((swift_name("last")));
@property (readonly, getter=step_) int32_t step __attribute__((swift_name("step")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntRange")))
@interface XNetworking_fearlesswalletKotlinIntRange : XNetworking_fearlesswalletKotlinIntProgression <XNetworking_fearlesswalletKotlinClosedRange, XNetworking_fearlesswalletKotlinOpenEndRange>
- (instancetype)initWithStart:(int32_t)start endInclusive:(int32_t)endInclusive __attribute__((swift_name("init(start:endInclusive:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletKotlinIntRangeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)containsValue:(XNetworking_fearlesswalletInt *)value __attribute__((swift_name("contains(value:)")));
- (BOOL)containsValue_:(XNetworking_fearlesswalletInt *)value __attribute__((swift_name("contains(value_:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.9")
*/
@property (readonly) XNetworking_fearlesswalletInt *endExclusive __attribute__((swift_name("endExclusive"))) __attribute__((deprecated("Can throw an exception when it's impossible to represent the value with Int type, for example, when the range includes MAX_VALUE. It's recommended to use 'endInclusive' property that doesn't throw.")));
@property (readonly) XNetworking_fearlesswalletInt *endInclusive __attribute__((swift_name("endInclusive")));
@property (readonly, getter=start_) XNetworking_fearlesswalletInt *start __attribute__((swift_name("start")));
@end

@interface XNetworking_fearlesswalletKotlinIntRange (Extensions)
- (id<XNetworking_fearlesswalletFlow>)asFlow __attribute__((swift_name("asFlow()")));
@end

@interface XNetworking_fearlesswalletAfterVersion (Extensions)
- (XNetworking_fearlesswalletAfterVersionWithDriver *)toAfterVersionWithDriver __attribute__((swift_name("toAfterVersionWithDriver()")));
@end

@interface XNetworking_fearlesswalletAtomic (Extensions)
- (id _Nullable)getValueThisRef:(id _Nullable)thisRef prop:(id<XNetworking_fearlesswalletKotlinKProperty>)prop __attribute__((swift_name("getValue(thisRef:prop:)")));
- (void)setValueThisRef:(id _Nullable)thisRef prop:(id<XNetworking_fearlesswalletKotlinKProperty>)prop value:(id _Nullable)value __attribute__((swift_name("setValue(thisRef:prop:value:)")));
@end

@interface XNetworking_fearlesswalletAtomicInt (Extensions)
@property int32_t value __attribute__((swift_name("value")));
@end

@interface XNetworking_fearlesswalletAtomicLong (Extensions)
@property int64_t value __attribute__((swift_name("value")));
@end

@interface XNetworking_fearlesswalletAtomicReference (Extensions)
@property id _Nullable value __attribute__((swift_name("value")));
@end

@interface XNetworking_fearlesswalletThreadLocalRef (Extensions)
@property (setter=setValue__:) id _Nullable value_ __attribute__((swift_name("value_")));
@end

@interface XNetworking_fearlesswalletAbstractPolymorphicSerializer (Extensions)

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (id<XNetworking_fearlesswalletDeserializationStrategy>)findPolymorphicSerializerDecoder:(id<XNetworking_fearlesswalletCompositeDecoder>)decoder klassName:(NSString * _Nullable)klassName __attribute__((swift_name("findPolymorphicSerializer(decoder:klassName:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
- (id<XNetworking_fearlesswalletSerializationStrategy>)findPolymorphicSerializerEncoder:(id<XNetworking_fearlesswalletEncoder_>)encoder value:(id)value __attribute__((swift_name("findPolymorphicSerializer(encoder:value:)")));
@end

@interface XNetworking_fearlesswalletSerializersModuleBuilder (Extensions)
- (void)contextualSerializer:(id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("contextual(serializer:)")));
- (void)polymorphicBaseClass:(id<XNetworking_fearlesswalletKotlinKClass>)baseClass baseSerializer:(id<XNetworking_fearlesswalletKSerializer> _Nullable)baseSerializer builderAction:(void (^)(XNetworking_fearlesswalletPolymorphicModuleBuilder<id> *))builderAction __attribute__((swift_name("polymorphic(baseClass:baseSerializer:builderAction:)")));
@end

@interface XNetworking_fearlesswalletPolymorphicModuleBuilder (Extensions)
- (void)subclassClazz:(id<XNetworking_fearlesswalletKotlinKClass>)clazz __attribute__((swift_name("subclass(clazz:)")));
- (void)subclassSerializer:(id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("subclass(serializer:)")));
@end

@interface XNetworking_fearlesswalletClassSerialDescriptorBuilder (Extensions)
- (void)elementElementName:(NSString *)elementName annotations:(NSArray<id<XNetworking_fearlesswalletKotlinAnnotation>> *)annotations isOptional:(BOOL)isOptional __attribute__((swift_name("element(elementName:annotations:isOptional:)")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinBoolean.Companion")))
@interface XNetworking_fearlesswalletKotlinBooleanCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinBooleanCompanion *shared __attribute__((swift_name("shared")));
@end

@interface XNetworking_fearlesswalletKotlinBooleanCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByte.Companion")))
@interface XNetworking_fearlesswalletKotlinByteCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinByteCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int8_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int8_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinByteCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinChar.Companion")))
@interface XNetworking_fearlesswalletKotlinCharCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinCharCompanion *shared __attribute__((swift_name("shared")));

/**
 * @note annotations
 *   kotlin.experimental.ExperimentalNativeApi
*/
@property (readonly) int32_t MAX_CODE_POINT __attribute__((swift_name("MAX_CODE_POINT")));
@property (readonly) unichar MAX_HIGH_SURROGATE __attribute__((swift_name("MAX_HIGH_SURROGATE")));
@property (readonly) unichar MAX_LOW_SURROGATE __attribute__((swift_name("MAX_LOW_SURROGATE")));

/**
 * @note annotations
 *   kotlin.DeprecatedSinceKotlin(warningSince="1.9")
*/
@property (readonly) int32_t MAX_RADIX __attribute__((swift_name("MAX_RADIX"))) __attribute__((deprecated("Introduce your own constant with the value of `36")));
@property (readonly) unichar MAX_SURROGATE __attribute__((swift_name("MAX_SURROGATE")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) unichar MAX_VALUE __attribute__((swift_name("MAX_VALUE")));

/**
 * @note annotations
 *   kotlin.experimental.ExperimentalNativeApi
*/
@property (readonly) int32_t MIN_CODE_POINT __attribute__((swift_name("MIN_CODE_POINT")));
@property (readonly) unichar MIN_HIGH_SURROGATE __attribute__((swift_name("MIN_HIGH_SURROGATE")));
@property (readonly) unichar MIN_LOW_SURROGATE __attribute__((swift_name("MIN_LOW_SURROGATE")));

/**
 * @note annotations
 *   kotlin.DeprecatedSinceKotlin(warningSince="1.9")
*/
@property (readonly) int32_t MIN_RADIX __attribute__((swift_name("MIN_RADIX"))) __attribute__((deprecated("Introduce your own constant with the value of `2`")));

/**
 * @note annotations
 *   kotlin.experimental.ExperimentalNativeApi
*/
@property (readonly) int32_t MIN_SUPPLEMENTARY_CODE_POINT __attribute__((swift_name("MIN_SUPPLEMENTARY_CODE_POINT")));
@property (readonly) unichar MIN_SURROGATE __attribute__((swift_name("MIN_SURROGATE")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) unichar MIN_VALUE __attribute__((swift_name("MIN_VALUE")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinCharCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinDouble.Companion")))
@interface XNetworking_fearlesswalletKotlinDoubleCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinDoubleCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) double MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) double MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) double NEGATIVE_INFINITY __attribute__((swift_name("NEGATIVE_INFINITY")));
@property (readonly) double NaN __attribute__((swift_name("NaN")));
@property (readonly) double POSITIVE_INFINITY __attribute__((swift_name("POSITIVE_INFINITY")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinDoubleCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinFloat.Companion")))
@interface XNetworking_fearlesswalletKotlinFloatCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinFloatCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) float MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) float MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) float NEGATIVE_INFINITY __attribute__((swift_name("NEGATIVE_INFINITY")));
@property (readonly) float NaN __attribute__((swift_name("NaN")));
@property (readonly) float POSITIVE_INFINITY __attribute__((swift_name("POSITIVE_INFINITY")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinFloatCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinInt.Companion")))
@interface XNetworking_fearlesswalletKotlinIntCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinIntCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int32_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinIntCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLong.Companion")))
@interface XNetworking_fearlesswalletKotlinLongCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinLongCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int64_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int64_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinLongCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinShort.Companion")))
@interface XNetworking_fearlesswalletKotlinShortCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinShortCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int16_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) int16_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinShortCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinString.Companion")))
@interface XNetworking_fearlesswalletKotlinStringCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinStringCompanion *shared __attribute__((swift_name("shared")));
@end

@interface XNetworking_fearlesswalletKotlinStringCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUByte.Companion")))
@interface XNetworking_fearlesswalletKotlinUByteCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinUByteCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint8_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint8_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinUByteCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUInt.Companion")))
@interface XNetworking_fearlesswalletKotlinUIntCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinUIntCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint32_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint32_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinUIntCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinULong.Companion")))
@interface XNetworking_fearlesswalletKotlinULongCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinULongCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint64_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint64_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinULongCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUShort.Companion")))
@interface XNetworking_fearlesswalletKotlinUShortCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinUShortCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) uint16_t MAX_VALUE __attribute__((swift_name("MAX_VALUE")));
@property (readonly) uint16_t MIN_VALUE __attribute__((swift_name("MIN_VALUE")));
@property (readonly) int32_t SIZE_BITS __attribute__((swift_name("SIZE_BITS")));
@property (readonly) int32_t SIZE_BYTES __attribute__((swift_name("SIZE_BYTES")));
@end

@interface XNetworking_fearlesswalletKotlinUShortCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUnit")))
@interface XNetworking_fearlesswalletKotlinUnit : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinUnit *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

@interface XNetworking_fearlesswalletKotlinUnit (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinDuration.Companion")))
@interface XNetworking_fearlesswalletKotlinDurationCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinDurationCompanion *shared __attribute__((swift_name("shared")));
- (int64_t)days:(double)receiver __attribute__((swift_name("days(_:)")));
- (int64_t)days_:(int32_t)receiver __attribute__((swift_name("days(__:)")));
- (int64_t)days__:(int64_t)receiver __attribute__((swift_name("days(___:)")));
- (int64_t)hours:(double)receiver __attribute__((swift_name("hours(_:)")));
- (int64_t)hours_:(int32_t)receiver __attribute__((swift_name("hours(__:)")));
- (int64_t)hours__:(int64_t)receiver __attribute__((swift_name("hours(___:)")));
- (int64_t)microseconds:(double)receiver __attribute__((swift_name("microseconds(_:)")));
- (int64_t)microseconds_:(int32_t)receiver __attribute__((swift_name("microseconds(__:)")));
- (int64_t)microseconds__:(int64_t)receiver __attribute__((swift_name("microseconds(___:)")));
- (int64_t)milliseconds:(double)receiver __attribute__((swift_name("milliseconds(_:)")));
- (int64_t)milliseconds_:(int32_t)receiver __attribute__((swift_name("milliseconds(__:)")));
- (int64_t)milliseconds__:(int64_t)receiver __attribute__((swift_name("milliseconds(___:)")));
- (int64_t)minutes:(double)receiver __attribute__((swift_name("minutes(_:)")));
- (int64_t)minutes_:(int32_t)receiver __attribute__((swift_name("minutes(__:)")));
- (int64_t)minutes__:(int64_t)receiver __attribute__((swift_name("minutes(___:)")));
- (int64_t)nanoseconds:(double)receiver __attribute__((swift_name("nanoseconds(_:)")));
- (int64_t)nanoseconds_:(int32_t)receiver __attribute__((swift_name("nanoseconds(__:)")));
- (int64_t)nanoseconds__:(int64_t)receiver __attribute__((swift_name("nanoseconds(___:)")));
- (int64_t)seconds:(double)receiver __attribute__((swift_name("seconds(_:)")));
- (int64_t)seconds_:(int32_t)receiver __attribute__((swift_name("seconds(__:)")));
- (int64_t)seconds__:(int64_t)receiver __attribute__((swift_name("seconds(___:)")));

/**
 * @note annotations
 *   kotlin.time.ExperimentalTime
*/
- (double)convertValue:(double)value sourceUnit:(XNetworking_fearlesswalletKotlinDurationUnit *)sourceUnit targetUnit:(XNetworking_fearlesswalletKotlinDurationUnit *)targetUnit __attribute__((swift_name("convert(value:sourceUnit:targetUnit:)")));
- (int64_t)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
- (int64_t)parseIsoStringValue:(NSString *)value __attribute__((swift_name("parseIsoString(value:)")));
- (id _Nullable)parseIsoStringOrNullValue:(NSString *)value __attribute__((swift_name("parseIsoStringOrNull(value:)")));
- (id _Nullable)parseOrNullValue:(NSString *)value __attribute__((swift_name("parseOrNull(value:)")));
@property (readonly) int64_t INFINITE __attribute__((swift_name("INFINITE")));
@property (readonly) int64_t ZERO __attribute__((swift_name("ZERO")));
@end

@interface XNetworking_fearlesswalletKotlinDurationCompanion (Extensions)
- (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

@interface XNetworking_fearlesswalletTraceBase (Extensions)
- (XNetworking_fearlesswalletTraceBase *)namedName:(NSString *)name __attribute__((swift_name("named(name:)")));
@end

@interface XNetworking_fearlesswalletSynchronizedObject (Extensions)
- (id _Nullable)withLockBlock:(id _Nullable (^)(void))block __attribute__((swift_name("withLock(block:)")));
@end

@interface XNetworking_fearlesswalletDatabaseFileContext (Extensions)
- (void)deleteDatabaseConfiguration:(XNetworking_fearlesswalletDatabaseConfiguration *)configuration __attribute__((swift_name("deleteDatabase(configuration:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExpectInfoKt")))
@interface XNetworking_fearlesswalletExpectInfoKt : XNetworking_fearlesswalletBase
@property (class, readonly) NSString *platform_android __attribute__((swift_name("platform_android")));
@property (class, readonly) NSString *platform_ios __attribute__((swift_name("platform_ios")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BlockExplorerGraphQlRequestKt")))
@interface XNetworking_fearlesswalletBlockExplorerGraphQlRequestKt : XNetworking_fearlesswalletBase
@property (class, readonly) NSString *varAfterCursor __attribute__((swift_name("varAfterCursor")));
@property (class, readonly) NSString *varCountRemote __attribute__((swift_name("varCountRemote")));
@property (class, readonly) NSString *varMyAddress __attribute__((swift_name("varMyAddress")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ActualInfoKt")))
@interface XNetworking_fearlesswalletActualInfoKt : XNetworking_fearlesswalletBase
+ (NSString *)platform __attribute__((swift_name("platform()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TbdActualInfoIosKt")))
@interface XNetworking_fearlesswalletTbdActualInfoIosKt : XNetworking_fearlesswalletBase
+ (NSString *)shaA:(XNetworking_fearlesswalletKotlinByteArray *)a __attribute__((swift_name("sha(a:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SoramitsuNetworkClientKt")))
@interface XNetworking_fearlesswalletSoramitsuNetworkClientKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletHeaders>)plus:(id<XNetworking_fearlesswalletHeaders>)receiver other:(id<XNetworking_fearlesswalletHeaders>)other __attribute__((swift_name("plus(_:other:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonSupportKt")))
@interface XNetworking_fearlesswalletJsonSupportKt : XNetworking_fearlesswalletBase
+ (void)json:(id<XNetworking_fearlesswalletConfiguration>)receiver json:(XNetworking_fearlesswalletJson *)json contentType:(XNetworking_fearlesswalletContentType *)contentType __attribute__((swift_name("json(_:json:contentType:)")));
@property (class, readonly) XNetworking_fearlesswalletJson *DefaultJson __attribute__((swift_name("DefaultJson")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KtorNSURLSessionDelegateKt")))
@interface XNetworking_fearlesswalletKtorNSURLSessionDelegateKt : XNetworking_fearlesswalletBase
+ (NSObject *)KtorNSURLSessionDelegate __attribute__((swift_name("KtorNSURLSessionDelegate()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientKt")))
@interface XNetworking_fearlesswalletHttpClientKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletHttpClient *)HttpClientBlock:(void (^)(XNetworking_fearlesswalletHttpClientConfig<id> *))block __attribute__((swift_name("HttpClient(block:)")));
+ (XNetworking_fearlesswalletHttpClient *)HttpClientEngine:(id<XNetworking_fearlesswalletHttpClientEngine>)engine block:(void (^)(XNetworking_fearlesswalletHttpClientConfig<id> *))block __attribute__((swift_name("HttpClient(engine:block:)")));
+ (XNetworking_fearlesswalletHttpClient *)HttpClientEngineFactory:(id<XNetworking_fearlesswalletHttpClientEngineFactory>)engineFactory block:(void (^)(XNetworking_fearlesswalletHttpClientConfig<XNetworking_fearlesswalletHttpClientEngineConfig *> *))block __attribute__((swift_name("HttpClient(engineFactory:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CIOKt")))
@interface XNetworking_fearlesswalletCIOKt : XNetworking_fearlesswalletBase
@property (class, readonly) int32_t DEFAULT_HTTP_BUFFER_SIZE __attribute__((swift_name("DEFAULT_HTTP_BUFFER_SIZE")));
@property (class, readonly) int32_t DEFAULT_HTTP_POOL_SIZE __attribute__((swift_name("DEFAULT_HTTP_POOL_SIZE")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClientEventsKt")))
@interface XNetworking_fearlesswalletClientEventsKt : XNetworking_fearlesswalletBase
@property (class, readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpRequestBuilder *> *HttpRequestCreated __attribute__((swift_name("HttpRequestCreated")));
@property (class, readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpRequestBuilder *> *HttpRequestIsReadyForSending __attribute__((swift_name("HttpRequestIsReadyForSending")));
@property (class, readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpResponse *> *HttpResponseCancelled __attribute__((swift_name("HttpResponseCancelled")));
@property (class, readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpResponseReceiveFail *> *HttpResponseReceiveFailed __attribute__((swift_name("HttpResponseReceiveFailed")));
@property (class, readonly) XNetworking_fearlesswalletEventDefinition<XNetworking_fearlesswalletHttpResponse *> *HttpResponseReceived __attribute__((swift_name("HttpResponseReceived")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersKt")))
@interface XNetworking_fearlesswalletHeadersKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletHeaders>)buildHeadersBlock:(void (^)(XNetworking_fearlesswalletHeadersBuilder *))block __attribute__((swift_name("buildHeaders(block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutExceptionsCommonKt")))
@interface XNetworking_fearlesswalletTimeoutExceptionsCommonKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletByteReadChannel>)mapEngineExceptions:(id<XNetworking_fearlesswalletCoroutineScope>)receiver input:(id<XNetworking_fearlesswalletByteReadChannel>)input request:(XNetworking_fearlesswalletHttpRequestData *)request __attribute__((swift_name("mapEngineExceptions(_:input:request:)")));
+ (id<XNetworking_fearlesswalletByteWriteChannel>)mapEngineExceptions:(id<XNetworking_fearlesswalletCoroutineScope>)receiver output:(id<XNetworking_fearlesswalletByteWriteChannel>)output request:(XNetworking_fearlesswalletHttpRequestData *)request __attribute__((swift_name("mapEngineExceptions(_:output:request:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuildersKt")))
@interface XNetworking_fearlesswalletBuildersKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletHttpRequestBuilder *)requestBlock:(void (^)(XNetworking_fearlesswalletHttpRequestBuilder *))block __attribute__((swift_name("request(block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UtilsKt")))
@interface XNetworking_fearlesswalletUtilsKt : XNetworking_fearlesswalletBase
+ (void)accept:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver contentType:(XNetworking_fearlesswalletContentType *)contentType __attribute__((swift_name("accept(_:contentType:)")));
+ (void)basicAuth:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver username:(NSString *)username password:(NSString *)password __attribute__((swift_name("basicAuth(_:username:password:)")));
+ (void)bearerAuth:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver token:(NSString *)token __attribute__((swift_name("bearerAuth(_:token:)")));
+ (void)cookie:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver name:(NSString *)name value:(NSString *)value maxAge:(int32_t)maxAge expires:(XNetworking_fearlesswalletGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions __attribute__((swift_name("cookie(_:name:value:maxAge:expires:domain:path:secure:httpOnly:extensions:)")));
+ (void)header:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver key:(NSString *)key value:(id _Nullable)value __attribute__((swift_name("header(_:key:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpRequestKt")))
@interface XNetworking_fearlesswalletHttpRequestKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletHeadersBuilder *)headers:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver block:(void (^)(XNetworking_fearlesswalletHeadersBuilder *))block __attribute__((swift_name("headers(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormDslKt")))
@interface XNetworking_fearlesswalletFormDslKt : XNetworking_fearlesswalletBase
+ (NSArray<XNetworking_fearlesswalletPartData *> *)formDataBlock:(void (^)(XNetworking_fearlesswalletFormBuilder *))block __attribute__((swift_name("formData(block:)")));
+ (NSArray<XNetworking_fearlesswalletPartData *> *)formDataValues:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletFormPart<id> *> *)values __attribute__((swift_name("formData(values:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientEngineCapabilityKt")))
@interface XNetworking_fearlesswalletHttpClientEngineCapabilityKt : XNetworking_fearlesswalletBase
@property (class, readonly) NSSet<XNetworking_fearlesswalletHttpTimeoutPlugin *> *DEFAULT_CAPABILITIES __attribute__((swift_name("DEFAULT_CAPABILITIES")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UtilsKt_")))
@interface XNetworking_fearlesswalletUtilsKt_ : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)callContextWithCompletionHandler:(void (^)(id<XNetworking_fearlesswalletKotlinCoroutineContext> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("callContext(completionHandler:)")));
+ (void)mergeHeadersRequestHeaders:(id<XNetworking_fearlesswalletHeaders>)requestHeaders content:(XNetworking_fearlesswalletOutgoingContent *)content block:(void (^)(NSString *, NSString *))block __attribute__((swift_name("mergeHeaders(requestHeaders:content:block:)")));
@property (class, readonly) NSString *KTOR_DEFAULT_USER_AGENT __attribute__((swift_name("KTOR_DEFAULT_USER_AGENT")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpClientEngineKt")))
@interface XNetworking_fearlesswalletHttpClientEngineKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletHttpClientEngineFactory>)config:(id<XNetworking_fearlesswalletHttpClientEngineFactory>)receiver nested:(void (^)(XNetworking_fearlesswalletHttpClientEngineConfig *))nested __attribute__((swift_name("config(_:nested:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpTimeoutKt")))
@interface XNetworking_fearlesswalletHttpTimeoutKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletConnectTimeoutException *)ConnectTimeoutExceptionRequest:(XNetworking_fearlesswalletHttpRequestData *)request cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("ConnectTimeoutException(request:cause:)")));
+ (XNetworking_fearlesswalletConnectTimeoutException *)ConnectTimeoutExceptionUrl:(NSString *)url timeout:(XNetworking_fearlesswalletLong * _Nullable)timeout cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("ConnectTimeoutException(url:timeout:cause:)")));
+ (XNetworking_fearlesswalletSocketTimeoutException *)SocketTimeoutExceptionRequest:(XNetworking_fearlesswalletHttpRequestData *)request cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("SocketTimeoutException(request:cause:)")));
+ (int32_t)convertLongTimeoutToIntWithInfiniteAsZeroTimeout:(int64_t)timeout __attribute__((swift_name("convertLongTimeoutToIntWithInfiniteAsZero(timeout:)")));
+ (int64_t)convertLongTimeoutToLongWithInfiniteAsZeroTimeout:(int64_t)timeout __attribute__((swift_name("convertLongTimeoutToLongWithInfiniteAsZero(timeout:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCacheStorageKt")))
@interface XNetworking_fearlesswalletHttpCacheStorageKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)store:(id<XNetworking_fearlesswalletCacheStorage>)receiver response:(XNetworking_fearlesswalletHttpResponse *)response completionHandler:(void (^)(XNetworking_fearlesswalletCachedResponseData * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("store(_:response:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)store:(id<XNetworking_fearlesswalletCacheStorage>)receiver response:(XNetworking_fearlesswalletHttpResponse *)response varyKeys:(NSDictionary<NSString *, NSString *> *)varyKeys isShared:(BOOL)isShared completionHandler:(void (^)(XNetworking_fearlesswalletCachedResponseData * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("store(_:response:varyKeys:isShared:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CookiesStorageKt")))
@interface XNetworking_fearlesswalletCookiesStorageKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)addCookie:(id<XNetworking_fearlesswalletCookiesStorage>)receiver urlString:(NSString *)urlString cookie:(XNetworking_fearlesswalletCookie *)cookie completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("addCookie(_:urlString:cookie:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpCookiesKt")))
@interface XNetworking_fearlesswalletHttpCookiesKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletCookie * _Nullable)get:(NSArray<XNetworking_fearlesswalletCookie *> *)receiver name:(NSString *)name __attribute__((swift_name("get(_:name:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CreatePluginUtilsKt")))
@interface XNetworking_fearlesswalletCreatePluginUtilsKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletClientPlugin>)createClientPluginName:(NSString *)name createConfiguration:(id (^)(void))createConfiguration body:(void (^)(XNetworking_fearlesswalletClientPluginBuilder<id> *))body __attribute__((swift_name("createClientPlugin(name:createConfiguration:body:)")));
+ (id<XNetworking_fearlesswalletClientPlugin>)createClientPluginName:(NSString *)name body:(void (^)(XNetworking_fearlesswalletClientPluginBuilder<XNetworking_fearlesswalletKotlinUnit *> *))body __attribute__((swift_name("createClientPlugin(name:body:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebsocketChannelSerializationKt")))
@interface XNetworking_fearlesswalletWebsocketChannelSerializationKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)receiveDeserializedBase:(id<XNetworking_fearlesswalletWebSocketSession>)receiver converter:(id<XNetworking_fearlesswalletWebsocketContentConverter>)converter charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveDeserializedBase(_:converter:charset:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)receiveDeserializedBase:(id<XNetworking_fearlesswalletWebSocketSession>)receiver typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo converter:(id<XNetworking_fearlesswalletWebsocketContentConverter>)converter charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveDeserializedBase(_:typeInfo:converter:charset:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)sendSerializedBase:(id<XNetworking_fearlesswalletWebSocketSession>)receiver data:(id _Nullable)data converter:(id<XNetworking_fearlesswalletWebsocketContentConverter>)converter charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("sendSerializedBase(_:data:converter:charset:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)sendSerializedBase:(id<XNetworking_fearlesswalletWebSocketSession>)receiver data:(id _Nullable)data typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo converter:(id<XNetworking_fearlesswalletWebsocketContentConverter>)converter charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("sendSerializedBase(_:data:typeInfo:converter:charset:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExtensionsNativeKt")))
@interface XNetworking_fearlesswalletExtensionsNativeKt : XNetworking_fearlesswalletBase
+ (void)addExtensionProviderProvider:(id<XNetworking_fearlesswalletKotlinxSerializationExtensionProvider>)provider __attribute__((swift_name("addExtensionProvider(provider:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinxSerializationConverterKt")))
@interface XNetworking_fearlesswalletKotlinxSerializationConverterKt : XNetworking_fearlesswalletBase
+ (void)serialization:(id<XNetworking_fearlesswalletConfiguration>)receiver contentType:(XNetworking_fearlesswalletContentType *)contentType format:(id<XNetworking_fearlesswalletBinaryFormat>)format __attribute__((swift_name("serialization(_:contentType:format:)")));
+ (void)serialization:(id<XNetworking_fearlesswalletConfiguration>)receiver contentType:(XNetworking_fearlesswalletContentType *)contentType format_:(id<XNetworking_fearlesswalletStringFormat>)format __attribute__((swift_name("serialization(_:contentType:format_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebsocketContentConverterKt")))
@interface XNetworking_fearlesswalletWebsocketContentConverterKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)deserialize:(id<XNetworking_fearlesswalletWebsocketContentConverter>)receiver content:(XNetworking_fearlesswalletFrame *)content charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("deserialize(_:content:charset:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)serialize:(id<XNetworking_fearlesswalletWebsocketContentConverter>)receiver value:(id _Nullable)value charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(XNetworking_fearlesswalletFrame * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("serialize(_:value:charset:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentConverterKt")))
@interface XNetworking_fearlesswalletContentConverterKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)deserialize:(NSArray<id<XNetworking_fearlesswalletContentConverter>> *)receiver body:(id<XNetworking_fearlesswalletByteReadChannel>)body typeInfo:(XNetworking_fearlesswalletTypeInfo *)typeInfo charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deserialize(_:body:typeInfo:charset:completionHandler:)")));
+ (XNetworking_fearlesswalletCharset *)suitableCharset:(id<XNetworking_fearlesswalletHeaders>)receiver defaultCharset:(XNetworking_fearlesswalletCharset *)defaultCharset __attribute__((swift_name("suitableCharset(_:defaultCharset:)")));
+ (XNetworking_fearlesswalletCharset * _Nullable)suitableCharsetOrNull:(id<XNetworking_fearlesswalletHeaders>)receiver defaultCharset:(XNetworking_fearlesswalletCharset *)defaultCharset __attribute__((swift_name("suitableCharsetOrNull(_:defaultCharset:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DefaultWebSocketSessionKt")))
@interface XNetworking_fearlesswalletDefaultWebSocketSessionKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletDefaultWebSocketSession>)DefaultWebSocketSessionSession:(id<XNetworking_fearlesswalletWebSocketSession>)session pingInterval:(int64_t)pingInterval timeoutMillis:(int64_t)timeoutMillis __attribute__((swift_name("DefaultWebSocketSession(session:pingInterval:timeoutMillis:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RawWebSocketKt")))
@interface XNetworking_fearlesswalletRawWebSocketKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletWebSocketSession>)RawWebSocketInput:(id<XNetworking_fearlesswalletByteReadChannel>)input output:(id<XNetworking_fearlesswalletByteWriteChannel>)output maxFrameSize:(int64_t)maxFrameSize masking:(BOOL)masking coroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext __attribute__((swift_name("RawWebSocket(input:output:maxFrameSize:masking:coroutineContext:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketExtensionHeaderKt")))
@interface XNetworking_fearlesswalletWebSocketExtensionHeaderKt : XNetworking_fearlesswalletBase
+ (NSArray<XNetworking_fearlesswalletWebSocketExtensionHeader *> *)parseWebSocketExtensionsValue:(NSString *)value __attribute__((swift_name("parseWebSocketExtensions(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WebSocketSessionKt")))
@interface XNetworking_fearlesswalletWebSocketSessionKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)close:(id<XNetworking_fearlesswalletWebSocketSession>)receiver reason:(XNetworking_fearlesswalletCloseReason *)reason completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("close(_:reason:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)close:(id<XNetworking_fearlesswalletWebSocketSession>)receiver cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("close(_:cause:completionHandler:)"))) __attribute__((deprecated("Close with reason or terminate instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)closeExceptionally:(id<XNetworking_fearlesswalletWebSocketSession>)receiver cause:(XNetworking_fearlesswalletKotlinThrowable *)cause completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("closeExceptionally(_:cause:completionHandler:)")));
+ (id<XNetworking_fearlesswalletWebSocketExtension>)extension:(id<XNetworking_fearlesswalletWebSocketSession>)receiver extension:(id<XNetworking_fearlesswalletWebSocketExtensionFactory>)extension __attribute__((swift_name("extension(_:extension:)")));
+ (id<XNetworking_fearlesswalletWebSocketExtension> _Nullable)extensionOrNull:(id<XNetworking_fearlesswalletWebSocketSession>)receiver extension:(id<XNetworking_fearlesswalletWebSocketExtensionFactory>)extension __attribute__((swift_name("extensionOrNull(_:extension:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)send:(id<XNetworking_fearlesswalletWebSocketSession>)receiver content:(XNetworking_fearlesswalletKotlinByteArray *)content completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("send(_:content:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)send:(id<XNetworking_fearlesswalletWebSocketSession>)receiver content:(NSString *)content completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("send(_:content:completionHandler_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RawWebSocketCommonKt")))
@interface XNetworking_fearlesswalletRawWebSocketCommonKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFrame:(id<XNetworking_fearlesswalletByteReadChannel>)receiver maxFrameSize:(int64_t)maxFrameSize lastOpcode:(int32_t)lastOpcode completionHandler:(void (^)(XNetworking_fearlesswalletFrame * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFrame(_:maxFrameSize:lastOpcode:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeFrame:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver frame:(XNetworking_fearlesswalletFrame *)frame masking:(BOOL)masking completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFrame(_:frame:masking:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLBuilderKt")))
@interface XNetworking_fearlesswalletURLBuilderKt : XNetworking_fearlesswalletBase
@property (class, readonly) int32_t DEFAULT_PORT __attribute__((swift_name("DEFAULT_PORT")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ParametersKt")))
@interface XNetworking_fearlesswalletParametersKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletParametersBuilder>)ParametersBuilderSize:(int32_t)size __attribute__((swift_name("ParametersBuilder(size:)")));
+ (id<XNetworking_fearlesswalletParameters>)parametersBuilder:(void (^)(id<XNetworking_fearlesswalletParametersBuilder>))builder __attribute__((swift_name("parameters(builder:)")));
+ (id<XNetworking_fearlesswalletParameters>)parametersOf __attribute__((swift_name("parametersOf()")));
+ (id<XNetworking_fearlesswalletParameters>)parametersOfPairs:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSArray<NSString *> *> *> *)pairs __attribute__((swift_name("parametersOf(pairs:)")));
+ (id<XNetworking_fearlesswalletParameters>)parametersOfName:(NSString *)name value:(NSString *)value __attribute__((swift_name("parametersOf(name:value:)")));
+ (id<XNetworking_fearlesswalletParameters>)parametersOfName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("parametersOf(name:values:)")));
+ (id<XNetworking_fearlesswalletParameters>)parametersOfMap:(NSDictionary<NSString *, NSArray<NSString *> *> *)map __attribute__((swift_name("parametersOf(map:)")));
+ (id<XNetworking_fearlesswalletParameters>)plus:(id<XNetworking_fearlesswalletParameters>)receiver other:(id<XNetworking_fearlesswalletParameters>)other __attribute__((swift_name("plus(_:other:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("URLUtilsKt")))
@interface XNetworking_fearlesswalletURLUtilsKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletURLBuilder *)URLBuilderBuilder:(XNetworking_fearlesswalletURLBuilder *)builder __attribute__((swift_name("URLBuilder(builder:)")));
+ (XNetworking_fearlesswalletURLBuilder *)URLBuilderUrl:(XNetworking_fearlesswalletUrl *)url __attribute__((swift_name("URLBuilder(url:)")));
+ (XNetworking_fearlesswalletURLBuilder *)URLBuilderUrlString:(NSString *)urlString __attribute__((swift_name("URLBuilder(urlString:)")));
+ (XNetworking_fearlesswalletUrl *)UrlBuilder:(XNetworking_fearlesswalletURLBuilder *)builder __attribute__((swift_name("Url(builder:)")));
+ (XNetworking_fearlesswalletUrl *)UrlUrlString:(NSString *)urlString __attribute__((swift_name("Url(urlString:)")));
+ (void)appendUrlFullPath:(id<XNetworking_fearlesswalletKotlinAppendable>)receiver encodedPath:(NSString *)encodedPath encodedQueryParameters:(id<XNetworking_fearlesswalletParametersBuilder>)encodedQueryParameters trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("appendUrlFullPath(_:encodedPath:encodedQueryParameters:trailingQuery:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContentRangeKt")))
@interface XNetworking_fearlesswalletContentRangeKt : XNetworking_fearlesswalletBase
+ (NSString *)contentRangeHeaderValueRange:(XNetworking_fearlesswalletKotlinLongRange * _Nullable)range fullLength:(XNetworking_fearlesswalletLong * _Nullable)fullLength unit:(XNetworking_fearlesswalletRangeUnits *)unit __attribute__((swift_name("contentRangeHeaderValue(range:fullLength:unit:)")));
+ (NSString *)contentRangeHeaderValueRange:(XNetworking_fearlesswalletKotlinLongRange * _Nullable)range fullLength:(XNetworking_fearlesswalletLong * _Nullable)fullLength unit_:(NSString *)unit __attribute__((swift_name("contentRangeHeaderValue(range:fullLength:unit_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CookieKt")))
@interface XNetworking_fearlesswalletCookieKt : XNetworking_fearlesswalletBase
+ (NSString *)decodeCookieValueEncodedValue:(NSString *)encodedValue encoding:(XNetworking_fearlesswalletCookieEncoding *)encoding __attribute__((swift_name("decodeCookieValue(encodedValue:encoding:)")));
+ (NSString *)encodeCookieValueValue:(NSString *)value encoding:(XNetworking_fearlesswalletCookieEncoding *)encoding __attribute__((swift_name("encodeCookieValue(value:encoding:)")));
+ (NSDictionary<NSString *, NSString *> *)parseClientCookiesHeaderCookiesHeader:(NSString *)cookiesHeader skipEscaped:(BOOL)skipEscaped __attribute__((swift_name("parseClientCookiesHeader(cookiesHeader:skipEscaped:)")));
+ (XNetworking_fearlesswalletCookie *)parseServerSetCookieHeaderCookiesHeader:(NSString *)cookiesHeader __attribute__((swift_name("parseServerSetCookieHeader(cookiesHeader:)")));
+ (NSString *)renderCookieHeaderCookie:(XNetworking_fearlesswalletCookie *)cookie __attribute__((swift_name("renderCookieHeader(cookie:)")));
+ (NSString *)renderSetCookieHeaderCookie:(XNetworking_fearlesswalletCookie *)cookie __attribute__((swift_name("renderSetCookieHeader(cookie:)")));
+ (NSString *)renderSetCookieHeaderName:(NSString *)name value:(NSString *)value encoding:(XNetworking_fearlesswalletCookieEncoding *)encoding maxAge:(int32_t)maxAge expires:(XNetworking_fearlesswalletGMTDate * _Nullable)expires domain:(NSString * _Nullable)domain path:(NSString * _Nullable)path secure:(BOOL)secure httpOnly:(BOOL)httpOnly extensions:(NSDictionary<NSString *, id> *)extensions includeEncoding:(BOOL)includeEncoding __attribute__((swift_name("renderSetCookieHeader(name:value:encoding:maxAge:expires:domain:path:secure:httpOnly:extensions:includeEncoding:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeadersKt_")))
@interface XNetworking_fearlesswalletHeadersKt_ : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletHeaders>)headersBuilder:(void (^)(XNetworking_fearlesswalletHeadersBuilder *))builder __attribute__((swift_name("headers(builder:)")));
+ (id<XNetworking_fearlesswalletHeaders>)headersOf __attribute__((swift_name("headersOf()")));
+ (id<XNetworking_fearlesswalletHeaders>)headersOfPairs:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSArray<NSString *> *> *> *)pairs __attribute__((swift_name("headersOf(pairs:)")));
+ (id<XNetworking_fearlesswalletHeaders>)headersOfName:(NSString *)name value:(NSString *)value __attribute__((swift_name("headersOf(name:value:)")));
+ (id<XNetworking_fearlesswalletHeaders>)headersOfName:(NSString *)name values:(NSArray<NSString *> *)values __attribute__((swift_name("headersOf(name:values:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IpParserKt")))
@interface XNetworking_fearlesswalletIpParserKt : XNetworking_fearlesswalletBase
+ (BOOL)hostIsIpHost:(NSString *)host __attribute__((swift_name("hostIsIp(host:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpHeaderValueParserKt")))
@interface XNetworking_fearlesswalletHttpHeaderValueParserKt : XNetworking_fearlesswalletBase
+ (NSArray<XNetworking_fearlesswalletHeaderValue *> *)parseAndSortContentTypeHeaderHeader:(NSString * _Nullable)header __attribute__((swift_name("parseAndSortContentTypeHeader(header:)")));
+ (NSArray<XNetworking_fearlesswalletHeaderValue *> *)parseAndSortHeaderHeader:(NSString * _Nullable)header __attribute__((swift_name("parseAndSortHeader(header:)")));
+ (NSArray<XNetworking_fearlesswalletHeaderValue *> *)parseHeaderValueText:(NSString * _Nullable)text __attribute__((swift_name("parseHeaderValue(text:)")));
+ (NSArray<XNetworking_fearlesswalletHeaderValue *> *)parseHeaderValueText:(NSString * _Nullable)text parametersOnly:(BOOL)parametersOnly __attribute__((swift_name("parseHeaderValue(text:parametersOnly:)")));
+ (NSArray<XNetworking_fearlesswalletHeaderValueParam *> *)toHeaderParamsList:(id)receiver __attribute__((swift_name("toHeaderParamsList(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QueryKt")))
@interface XNetworking_fearlesswalletQueryKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletParameters>)parseQueryStringQuery:(NSString *)query startIndex:(int32_t)startIndex limit:(int32_t)limit decode:(BOOL)decode __attribute__((swift_name("parseQueryString(query:startIndex:limit:decode:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RangesKt")))
@interface XNetworking_fearlesswalletRangesKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletRangesSpecifier * _Nullable)parseRangesSpecifierRangeSpec:(NSString *)rangeSpec __attribute__((swift_name("parseRangesSpecifier(rangeSpec:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HeaderValueWithParametersKt")))
@interface XNetworking_fearlesswalletHeaderValueWithParametersKt : XNetworking_fearlesswalletBase
+ (void)append:(id<XNetworking_fearlesswalletStringValuesBuilder>)receiver name:(NSString *)name value:(XNetworking_fearlesswalletHeaderValueWithParameters *)value __attribute__((swift_name("append(_:name:value:)")));
+ (NSString *)escapeIfNeeded:(NSString *)receiver __attribute__((swift_name("escapeIfNeeded(_:)")));
+ (NSString *)quote:(NSString *)receiver __attribute__((swift_name("quote(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpMessagePropertiesKt")))
@interface XNetworking_fearlesswalletHttpMessagePropertiesKt : XNetworking_fearlesswalletBase
+ (NSArray<XNetworking_fearlesswalletHeaderValue *> *)cacheControl:(id<XNetworking_fearlesswalletHttpMessage>)receiver __attribute__((swift_name("cacheControl(_:)")));
+ (XNetworking_fearlesswalletCharset * _Nullable)charset:(id<XNetworking_fearlesswalletHttpMessage>)receiver __attribute__((swift_name("charset(_:)")));
+ (XNetworking_fearlesswalletCharset * _Nullable)charset_:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver __attribute__((swift_name("charset(__:)")));
+ (XNetworking_fearlesswalletKotlinUnit * _Nullable)charset:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("charset(_:charset:)"))) __attribute__((unavailable("Use content with particular content type and charset instead")));
+ (XNetworking_fearlesswalletLong * _Nullable)contentLength:(id<XNetworking_fearlesswalletHttpMessage>)receiver __attribute__((swift_name("contentLength(_:)")));
+ (XNetworking_fearlesswalletLong * _Nullable)contentLength_:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver __attribute__((swift_name("contentLength(__:)")));
+ (void)contentLength:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver length:(int32_t)length __attribute__((swift_name("contentLength(_:length:)"))) __attribute__((unavailable("Content-Length is controlled by underlying engine. Don't specify it explicitly.")));
+ (XNetworking_fearlesswalletContentType * _Nullable)contentType:(id<XNetworking_fearlesswalletHttpMessage>)receiver __attribute__((swift_name("contentType(_:)")));
+ (XNetworking_fearlesswalletContentType * _Nullable)contentType_:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver __attribute__((swift_name("contentType(__:)")));
+ (void)contentType:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver type:(XNetworking_fearlesswalletContentType *)type __attribute__((swift_name("contentType(_:type:)")));
+ (NSArray<XNetworking_fearlesswalletCookie *> *)cookies:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver __attribute__((swift_name("cookies(_:)")));
+ (NSString * _Nullable)etag:(id<XNetworking_fearlesswalletHttpMessage>)receiver __attribute__((swift_name("etag(_:)")));
+ (NSString * _Nullable)etag_:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver __attribute__((swift_name("etag(__:)")));
+ (void)ifNoneMatch:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver value:(NSString *)value __attribute__((swift_name("ifNoneMatch(_:value:)")));
+ (void)maxAge:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver seconds:(int32_t)seconds __attribute__((swift_name("maxAge(_:seconds:)")));
+ (NSArray<XNetworking_fearlesswalletCookie *> *)setCookie:(id<XNetworking_fearlesswalletHttpMessage>)receiver __attribute__((swift_name("setCookie(_:)")));
+ (void)userAgent:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver content:(NSString *)content __attribute__((swift_name("userAgent(_:content:)")));
+ (NSArray<NSString *> * _Nullable)vary:(id<XNetworking_fearlesswalletHttpMessage>)receiver __attribute__((swift_name("vary(_:)")));
+ (NSArray<NSString *> * _Nullable)vary_:(id<XNetworking_fearlesswalletHttpMessageBuilder>)receiver __attribute__((swift_name("vary(__:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CodecsKt")))
@interface XNetworking_fearlesswalletCodecsKt : XNetworking_fearlesswalletBase
+ (NSString *)decodeURLPart:(NSString *)receiver start:(int32_t)start end:(int32_t)end charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("decodeURLPart(_:start:end:charset:)")));
+ (NSString *)decodeURLQueryComponent:(NSString *)receiver start:(int32_t)start end:(int32_t)end plusIsSpace:(BOOL)plusIsSpace charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("decodeURLQueryComponent(_:start:end:plusIsSpace:charset:)")));
+ (NSString *)encodeOAuth:(NSString *)receiver __attribute__((swift_name("encodeOAuth(_:)")));
+ (NSString *)encodeURLParameter:(NSString *)receiver spaceToPlus:(BOOL)spaceToPlus __attribute__((swift_name("encodeURLParameter(_:spaceToPlus:)")));
+ (NSString *)encodeURLPath:(NSString *)receiver __attribute__((swift_name("encodeURLPath(_:)")));
+ (NSString *)encodeURLPathPart:(NSString *)receiver __attribute__((swift_name("encodeURLPathPart(_:)")));
+ (NSString *)encodeURLQueryComponent:(NSString *)receiver encodeFull:(BOOL)encodeFull spaceToPlus:(BOOL)spaceToPlus charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("encodeURLQueryComponent(_:encodeFull:spaceToPlus:charset:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpUrlEncodedKt")))
@interface XNetworking_fearlesswalletHttpUrlEncodedKt : XNetworking_fearlesswalletBase
+ (NSString *)formUrlEncode:(id<XNetworking_fearlesswalletParameters>)receiver __attribute__((swift_name("formUrlEncode(_:)")));
+ (NSString *)formUrlEncode_:(NSArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *> *)receiver __attribute__((swift_name("formUrlEncode(__:)")));
+ (void)formUrlEncodeTo:(id<XNetworking_fearlesswalletParameters>)receiver out:(id<XNetworking_fearlesswalletKotlinAppendable>)out __attribute__((swift_name("formUrlEncodeTo(_:out:)")));
+ (void)formUrlEncodeTo:(NSArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *> *)receiver out_:(id<XNetworking_fearlesswalletKotlinAppendable>)out __attribute__((swift_name("formUrlEncodeTo(_:out_:)")));
+ (id<XNetworking_fearlesswalletParameters>)parseUrlEncodedParameters:(NSString *)receiver defaultEncoding:(XNetworking_fearlesswalletCharset *)defaultEncoding limit:(int32_t)limit __attribute__((swift_name("parseUrlEncodedParameters(_:defaultEncoding:limit:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DateUtilsKt")))
@interface XNetworking_fearlesswalletDateUtilsKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletGMTDate *)fromCookieToGmtDate:(NSString *)receiver __attribute__((swift_name("fromCookieToGmtDate(_:)")));
+ (XNetworking_fearlesswalletGMTDate *)fromHttpToGmtDate:(NSString *)receiver __attribute__((swift_name("fromHttpToGmtDate(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HttpAuthHeaderKt")))
@interface XNetworking_fearlesswalletHttpAuthHeaderKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletHttpAuthHeader * _Nullable)parseAuthorizationHeaderHeaderValue:(NSString *)headerValue __attribute__((swift_name("parseAuthorizationHeader(headerValue:)")));
+ (NSArray<XNetworking_fearlesswalletHttpAuthHeader *> *)parseAuthorizationHeadersHeaderValue:(NSString *)headerValue __attribute__((swift_name("parseAuthorizationHeaders(headerValue:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CachingOptionsKt")))
@interface XNetworking_fearlesswalletCachingOptionsKt : XNetworking_fearlesswalletBase
@property (class, readonly) XNetworking_fearlesswalletAttributeKey<XNetworking_fearlesswalletCachingOptions *> *CachingProperty __attribute__((swift_name("CachingProperty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VersionsKt")))
@interface XNetworking_fearlesswalletVersionsKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletEntityTagVersion *)EntityTagVersionSpec:(NSString *)spec __attribute__((swift_name("EntityTagVersion(spec:)")));
@property (class, readonly) XNetworking_fearlesswalletAttributeKey<NSArray<id<XNetworking_fearlesswalletVersion>> *> *VersionListProperty __attribute__((swift_name("VersionListProperty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultipartKt")))
@interface XNetworking_fearlesswalletMultipartKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)forEachPart:(id<XNetworking_fearlesswalletMultiPartData>)receiver partHandler:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)partHandler completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("forEachPart(_:partHandler:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readAllParts:(id<XNetworking_fearlesswalletMultiPartData>)receiver completionHandler:(void (^)(NSArray<XNetworking_fearlesswalletPartData *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAllParts(_:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UtilsKt__")))
@interface XNetworking_fearlesswalletUtilsKt__ : XNetworking_fearlesswalletBase
+ (NSString *)websocketServerAcceptNonce:(NSString *)nonce __attribute__((swift_name("websocketServerAccept(nonce:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttributesNativeKt")))
@interface XNetworking_fearlesswalletAttributesNativeKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletAttributes>)AttributesConcurrent:(BOOL)concurrent __attribute__((swift_name("Attributes(concurrent:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CryptoNativeKt")))
@interface XNetworking_fearlesswalletCryptoNativeKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletDigest>)DigestName:(NSString *)name __attribute__((swift_name("Digest(name:)")));
+ (NSString *)generateNonce __attribute__((swift_name("generateNonce()")));
+ (XNetworking_fearlesswalletKotlinByteArray *)sha1Bytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("sha1(bytes:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutinesUtilsKt")))
@interface XNetworking_fearlesswalletCoroutinesUtilsKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKotlinCoroutineContext>)SilentSupervisorParent:(id<XNetworking_fearlesswalletJob> _Nullable)parent __attribute__((swift_name("SilentSupervisor(parent:)")));
+ (void)printDebugTree:(id<XNetworking_fearlesswalletJob>)receiver offset:(int32_t)offset __attribute__((swift_name("printDebugTree(_:offset:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionsKt")))
@interface XNetworking_fearlesswalletCollectionsKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletMutableDictionary<NSString *, id> *)caseInsensitiveMap __attribute__((swift_name("caseInsensitiveMap()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CryptoKt")))
@interface XNetworking_fearlesswalletCryptoKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletKotlinByteArray *)generateNonceSize:(int32_t)size __attribute__((swift_name("generateNonce(size:)")));
+ (NSString *)hexBytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("hex(bytes:)")));
+ (XNetworking_fearlesswalletKotlinByteArray *)hexS:(NSString *)s __attribute__((swift_name("hex(s:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)build:(id<XNetworking_fearlesswalletDigest>)receiver bytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes completionHandler:(void (^)(XNetworking_fearlesswalletKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("build(_:bytes:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)build:(id<XNetworking_fearlesswalletDigest>)receiver string:(NSString *)string charset:(XNetworking_fearlesswalletCharset *)charset completionHandler:(void (^)(XNetworking_fearlesswalletKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("build(_:string:charset:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringValuesKt")))
@interface XNetworking_fearlesswalletStringValuesKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletStringValues>)valuesOf __attribute__((swift_name("valuesOf()")));
+ (id<XNetworking_fearlesswalletStringValues>)valuesOfPairs:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSArray<NSString *> *> *> *)pairs caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(pairs:caseInsensitiveKey:)")));
+ (id<XNetworking_fearlesswalletStringValues>)valuesOfName:(NSString *)name value:(NSString *)value caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(name:value:caseInsensitiveKey:)")));
+ (id<XNetworking_fearlesswalletStringValues>)valuesOfName:(NSString *)name values:(NSArray<NSString *> *)values caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(name:values:caseInsensitiveKey:)")));
+ (id<XNetworking_fearlesswalletStringValues>)valuesOfMap:(NSDictionary<NSString *, id> *)map caseInsensitiveKey:(BOOL)caseInsensitiveKey __attribute__((swift_name("valuesOf(map:caseInsensitiveKey:)")));
+ (id<XNetworking_fearlesswalletStringValuesBuilder>)appendAll:(id<XNetworking_fearlesswalletStringValuesBuilder>)receiver builder:(id<XNetworking_fearlesswalletStringValuesBuilder>)builder __attribute__((swift_name("appendAll(_:builder:)")));
+ (void)appendFiltered:(id<XNetworking_fearlesswalletStringValuesBuilder>)receiver source:(id<XNetworking_fearlesswalletStringValues>)source keepEmpty:(BOOL)keepEmpty predicate:(XNetworking_fearlesswalletBoolean *(^)(NSString *, NSString *))predicate __attribute__((swift_name("appendFiltered(_:source:keepEmpty:predicate:)")));
+ (id<XNetworking_fearlesswalletStringValuesBuilder>)appendIfNameAbsent:(id<XNetworking_fearlesswalletStringValuesBuilder>)receiver name:(NSString *)name value:(NSString *)value __attribute__((swift_name("appendIfNameAbsent(_:name:value:)")));
+ (id<XNetworking_fearlesswalletStringValuesBuilder>)appendIfNameAndValueAbsent:(id<XNetworking_fearlesswalletStringValuesBuilder>)receiver name:(NSString *)name value:(NSString *)value __attribute__((swift_name("appendIfNameAndValueAbsent(_:name:value:)")));
+ (id<XNetworking_fearlesswalletStringValues>)filter:(id<XNetworking_fearlesswalletStringValues>)receiver keepEmpty:(BOOL)keepEmpty predicate:(XNetworking_fearlesswalletBoolean *(^)(NSString *, NSString *))predicate __attribute__((swift_name("filter(_:keepEmpty:predicate:)")));
+ (NSArray<XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *> *)flattenEntries:(id<XNetworking_fearlesswalletStringValues>)receiver __attribute__((swift_name("flattenEntries(_:)")));
+ (void)flattenForEach:(id<XNetworking_fearlesswalletStringValues>)receiver block:(void (^)(NSString *, NSString *))block __attribute__((swift_name("flattenForEach(_:block:)")));
+ (NSDictionary<NSString *, NSArray<NSString *> *> *)toMap:(id<XNetworking_fearlesswalletStringValues>)receiver __attribute__((swift_name("toMap(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TextKt")))
@interface XNetworking_fearlesswalletTextKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *)chomp:(NSString *)receiver separator:(NSString *)separator onMissingDelimiter:(XNetworking_fearlesswalletKotlinPair<NSString *, NSString *> *(^)(void))onMissingDelimiter __attribute__((swift_name("chomp(_:separator:onMissingDelimiter:)")));
+ (NSString *)escapeHTML:(NSString *)receiver __attribute__((swift_name("escapeHTML(_:)")));
+ (NSString *)toLowerCasePreservingASCIIRules:(NSString *)receiver __attribute__((swift_name("toLowerCasePreservingASCIIRules(_:)")));
+ (NSString *)toUpperCasePreservingASCIIRules:(NSString *)receiver __attribute__((swift_name("toUpperCasePreservingASCIIRules(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteChannelsKt")))
@interface XNetworking_fearlesswalletByteChannelsKt : XNetworking_fearlesswalletBase
+ (void)doCopyToBoth:(id<XNetworking_fearlesswalletByteReadChannel>)receiver first:(id<XNetworking_fearlesswalletByteWriteChannel>)first second:(id<XNetworking_fearlesswalletByteWriteChannel>)second __attribute__((swift_name("doCopyToBoth(_:first:second:)")));
+ (XNetworking_fearlesswalletKotlinPair<id<XNetworking_fearlesswalletByteReadChannel>, id<XNetworking_fearlesswalletByteReadChannel>> *)split:(id<XNetworking_fearlesswalletByteReadChannel>)receiver coroutineScope:(id<XNetworking_fearlesswalletCoroutineScope>)coroutineScope __attribute__((swift_name("split(_:coroutineScope:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toByteArray:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toByteArray(_:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Base64Kt")))
@interface XNetworking_fearlesswalletBase64Kt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletKotlinByteArray *)decodeBase64Bytes:(NSString *)receiver __attribute__((swift_name("decodeBase64Bytes(_:)")));
+ (NSString *)decodeBase64String:(NSString *)receiver __attribute__((swift_name("decodeBase64String(_:)")));
+ (NSString *)encodeBase64:(NSString *)receiver __attribute__((swift_name("encodeBase64(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CharsetKt")))
@interface XNetworking_fearlesswalletCharsetKt : XNetworking_fearlesswalletBase
+ (BOOL)isLowerCase:(unichar)receiver __attribute__((swift_name("isLowerCase(_:)")));
+ (XNetworking_fearlesswalletKotlinCharArray *)toCharArray:(NSString *)receiver __attribute__((swift_name("toCharArray(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttributesKt")))
@interface XNetworking_fearlesswalletAttributesKt : XNetworking_fearlesswalletBase
+ (void)putAll:(id<XNetworking_fearlesswalletAttributes>)receiver other:(id<XNetworking_fearlesswalletAttributes>)other __attribute__((swift_name("putAll(_:other:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionsNativeKt")))
@interface XNetworking_fearlesswalletCollectionsNativeKt : XNetworking_fearlesswalletBase
+ (NSSet<id> *)unmodifiable:(NSSet<id> *)receiver __attribute__((swift_name("unmodifiable(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoggerNativeKt")))
@interface XNetworking_fearlesswalletLoggerNativeKt : XNetworking_fearlesswalletBase
+ (BOOL)isTraceEnabled:(id<XNetworking_fearlesswalletLogger_>)receiver __attribute__((swift_name("isTraceEnabled(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KtorSimpleLoggerNativeKt")))
@interface XNetworking_fearlesswalletKtorSimpleLoggerNativeKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletLogger_>)KtorSimpleLoggerName:(NSString *)name __attribute__((swift_name("KtorSimpleLogger(name:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoggerKt")))
@interface XNetworking_fearlesswalletLoggerKt : XNetworking_fearlesswalletBase
+ (void)error:(id<XNetworking_fearlesswalletLogger_>)receiver exception:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("error(_:exception:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NetworkAddressNativeKt")))
@interface XNetworking_fearlesswalletNetworkAddressNativeKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletNetworkAddress *)NetworkAddressHostname:(NSString *)hostname port:(int32_t)port __attribute__((swift_name("NetworkAddress(hostname:port:)")));
+ (XNetworking_fearlesswalletNetworkAddress *)ResolvedNetworkAddressHostname:(NSString *)hostname port:(int32_t)port explicitAddress:(id _Nullable)explicitAddress __attribute__((swift_name("ResolvedNetworkAddress(hostname:port:explicitAddress:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReadersKt")))
@interface XNetworking_fearlesswalletReadersKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toByteArray:(id<XNetworking_fearlesswalletByteReadChannel>)receiver limit:(int32_t)limit completionHandler:(void (^)(XNetworking_fearlesswalletKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toByteArray(_:limit:completionHandler:)")));
+ (void)use:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver block:(void (^)(id<XNetworking_fearlesswalletByteWriteChannel>))block __attribute__((swift_name("use(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContextUtilsKt")))
@interface XNetworking_fearlesswalletContextUtilsKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)addToContextInDebugModePluginName:(NSString *)pluginName block:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("addToContextInDebugMode(pluginName:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doInitContextInDebugModeBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("doInitContextInDebugMode(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)useContextElementInDebugModeKey:(id<XNetworking_fearlesswalletKotlinCoroutineContextKey>)key action:(void (^)(id<XNetworking_fearlesswalletKotlinCoroutineContextElement>))action completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("useContextElementInDebugMode(key:action:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DateNativeKt")))
@interface XNetworking_fearlesswalletDateNativeKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletGMTDate *)GMTDateSeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfMonth:(int32_t)dayOfMonth month:(XNetworking_fearlesswalletMonth *)month year:(int32_t)year __attribute__((swift_name("GMTDate(seconds:minutes:hours:dayOfMonth:month:year:)")));
+ (XNetworking_fearlesswalletGMTDate *)GMTDateTimestamp:(XNetworking_fearlesswalletLong * _Nullable)timestamp __attribute__((swift_name("GMTDate(timestamp:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DateNixKt")))
@interface XNetworking_fearlesswalletDateNixKt : XNetworking_fearlesswalletBase
+ (int64_t)getTimeMillis __attribute__((swift_name("getTimeMillis()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TypeInfoNativeKt")))
@interface XNetworking_fearlesswalletTypeInfoNativeKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKotlinKType>)platformType:(id<XNetworking_fearlesswalletKotlinKType>)receiver __attribute__((swift_name("platformType(_:)")));
+ (XNetworking_fearlesswalletTypeInfo *)typeInfo __attribute__((swift_name("typeInfo()")));
+ (BOOL)instanceOf:(id)receiver type:(id<XNetworking_fearlesswalletKotlinKClass>)type __attribute__((swift_name("instanceOf(_:type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConcurrentSetKt")))
@interface XNetworking_fearlesswalletConcurrentSetKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletMutableSet<id> *)ConcurrentSet __attribute__((swift_name("ConcurrentSet()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionUtilsKt")))
@interface XNetworking_fearlesswalletCollectionUtilsKt : XNetworking_fearlesswalletBase
+ (NSMutableArray<id> *)sharedList __attribute__((swift_name("sharedList()"))) __attribute__((deprecated("Will be dropped with new memory model enabled by default")));
+ (NSMutableArray<id> *)sharedListOfValues:(XNetworking_fearlesswalletKotlinArray<id> *)values __attribute__((swift_name("sharedListOf(values:)"))) __attribute__((deprecated("Will be dropped with new memory model enabled by default")));
+ (XNetworking_fearlesswalletMutableDictionary<id, id> *)sharedMapInitialCapacity:(int32_t)initialCapacity __attribute__((swift_name("sharedMap(initialCapacity:)"))) __attribute__((deprecated("Will be dropped with new memory model enabled by default")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteChannelNativeKt")))
@interface XNetworking_fearlesswalletByteChannelNativeKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletByteChannel>)ByteChannelAutoFlush:(BOOL)autoFlush __attribute__((swift_name("ByteChannel(autoFlush:)")));
+ (id<XNetworking_fearlesswalletByteReadChannel>)ByteReadChannelContent:(XNetworking_fearlesswalletKotlinByteArray *)content offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("ByteReadChannel(content:offset:length:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doCopyTo:(id<XNetworking_fearlesswalletByteReadChannel>)receiver dst:(id<XNetworking_fearlesswalletByteWriteChannel>)dst limit:(int64_t)limit completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doCopyTo(_:dst:limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)joinTo:(id<XNetworking_fearlesswalletByteReadChannel>)receiver dst:(id<XNetworking_fearlesswalletByteWriteChannel>)dst closeOnEnd:(BOOL)closeOnEnd completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("joinTo(_:dst:closeOnEnd:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteChannelCtorKt")))
@interface XNetworking_fearlesswalletByteChannelCtorKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletByteReadChannel>)ByteReadChannelContent:(XNetworking_fearlesswalletKotlinByteArray *)content __attribute__((swift_name("ByteReadChannel(content:)")));
+ (id<XNetworking_fearlesswalletByteReadChannel>)ByteReadChannelContent:(XNetworking_fearlesswalletKotlinByteArray *)content offset:(int32_t)offset __attribute__((swift_name("ByteReadChannel(content:offset:)")));
+ (id<XNetworking_fearlesswalletByteReadChannel>)ByteReadChannelText:(NSString *)text charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("ByteReadChannel(text:charset:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutinesKt")))
@interface XNetworking_fearlesswalletCoroutinesKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletReaderJob>)readerCoroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext channel:(id<XNetworking_fearlesswalletByteChannel>)channel parent:(id<XNetworking_fearlesswalletJob> _Nullable)parent block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("reader(coroutineContext:channel:parent:block:)"))) __attribute__((deprecated("Use scope.reader instead")));
+ (id<XNetworking_fearlesswalletReaderJob>)readerCoroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush parent:(id<XNetworking_fearlesswalletJob> _Nullable)parent block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("reader(coroutineContext:autoFlush:parent:block:)"))) __attribute__((deprecated("Use scope.reader instead")));
+ (id<XNetworking_fearlesswalletWriterJob>)writerCoroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext channel:(id<XNetworking_fearlesswalletByteChannel>)channel parent:(id<XNetworking_fearlesswalletJob> _Nullable)parent block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("writer(coroutineContext:channel:parent:block:)"))) __attribute__((deprecated("Use scope.writer instead")));
+ (id<XNetworking_fearlesswalletWriterJob>)writerCoroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush parent:(id<XNetworking_fearlesswalletJob> _Nullable)parent block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("writer(coroutineContext:autoFlush:parent:block:)"))) __attribute__((deprecated("Use scope.writer instead")));
+ (id<XNetworking_fearlesswalletReaderJob>)reader:(id<XNetworking_fearlesswalletCoroutineScope>)receiver coroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext channel:(id<XNetworking_fearlesswalletByteChannel>)channel block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("reader(_:coroutineContext:channel:block:)")));
+ (id<XNetworking_fearlesswalletReaderJob>)reader:(id<XNetworking_fearlesswalletCoroutineScope>)receiver coroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("reader(_:coroutineContext:autoFlush:block:)")));
+ (id<XNetworking_fearlesswalletWriterJob>)writer:(id<XNetworking_fearlesswalletCoroutineScope>)receiver coroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext channel:(id<XNetworking_fearlesswalletByteChannel>)channel block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("writer(_:coroutineContext:channel:block:)")));
+ (id<XNetworking_fearlesswalletWriterJob>)writer:(id<XNetworking_fearlesswalletCoroutineScope>)receiver coroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext autoFlush:(BOOL)autoFlush block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("writer(_:coroutineContext:autoFlush:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadChannelKt")))
@interface XNetworking_fearlesswalletByteReadChannelKt : XNetworking_fearlesswalletBase
+ (BOOL)cancel:(id<XNetworking_fearlesswalletByteReadChannel>)receiver __attribute__((swift_name("cancel(_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doCopyAndClose:(id<XNetworking_fearlesswalletByteReadChannel>)receiver dst:(id<XNetworking_fearlesswalletByteWriteChannel>)dst limit:(int64_t)limit completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doCopyAndClose(_:dst:limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)doCopyTo:(id<XNetworking_fearlesswalletByteReadChannel>)receiver dst:(id<XNetworking_fearlesswalletByteWriteChannel>)dst completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doCopyTo(_:dst:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)discard:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)discardExact:(id<XNetworking_fearlesswalletByteReadChannel>)receiver n:(int64_t)n completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("discardExact(_:n:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readAvailable:(id<XNetworking_fearlesswalletByteReadChannel>)receiver dst:(XNetworking_fearlesswalletKotlinByteArray *)dst completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(_:dst:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFully:(id<XNetworking_fearlesswalletByteReadChannel>)receiver dst:(XNetworking_fearlesswalletChunkBuffer *)dst completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(_:dst:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFully:(id<XNetworking_fearlesswalletByteReadChannel>)receiver dst:(XNetworking_fearlesswalletKotlinByteArray *)dst completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(_:dst:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readRemaining:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readUTF8Line:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readUTF8LineTo:(id<XNetworking_fearlesswalletByteReadChannel>)receiver out:(id<XNetworking_fearlesswalletKotlinAppendable>)out completionHandler:(void (^)(XNetworking_fearlesswalletBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(_:out:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteWriteChannelKt")))
@interface XNetworking_fearlesswalletByteWriteChannelKt : XNetworking_fearlesswalletBase
+ (BOOL)close:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver __attribute__((swift_name("close(_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeAvailable:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver src:(XNetworking_fearlesswalletKotlinByteArray *)src completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("writeAvailable(_:src:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeBoolean:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver b:(BOOL)b completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeBoolean(_:b:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeByte:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver b:(int32_t)b completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeByte(_:b:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeChar:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver ch:(unichar)ch completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeChar(_:ch:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeFully:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver src:(XNetworking_fearlesswalletKotlinByteArray *)src completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFully(_:src:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeInt:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver i:(int64_t)i completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(_:i:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeInt:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver i:(int64_t)i byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(_:i:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writePacket:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver builder:(void (^)(XNetworking_fearlesswalletBytePacketBuilder *))builder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writePacket(_:builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writePacketSuspend:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver builder:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)builder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writePacketSuspend(_:builder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShort:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver s:(int32_t)s completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(_:s:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShort:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver s:(int32_t)s byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(_:s:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeStringUtf8:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver s:(id)s completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeStringUtf8(_:s:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeStringUtf8:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver s:(NSString *)s completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeStringUtf8(_:s:completionHandler_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReadSessionKt")))
@interface XNetworking_fearlesswalletReadSessionKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)read:(id<XNetworking_fearlesswalletByteReadChannel>)receiver desiredSize:(int32_t)desiredSize block:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletMemory *, XNetworking_fearlesswalletLong *, XNetworking_fearlesswalletLong *))block completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("read(_:desiredSize:block:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelLittleEndianKt")))
@interface XNetworking_fearlesswalletChannelLittleEndianKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readDouble:(id<XNetworking_fearlesswalletByteReadChannel>)receiver byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(XNetworking_fearlesswalletDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(_:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readDoubleLittleEndian:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDoubleLittleEndian(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFloat:(id<XNetworking_fearlesswalletByteReadChannel>)receiver byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(XNetworking_fearlesswalletFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(_:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readFloatLittleEndian:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloatLittleEndian(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readInt:(id<XNetworking_fearlesswalletByteReadChannel>)receiver byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(_:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readIntLittleEndian:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readIntLittleEndian(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readLong:(id<XNetworking_fearlesswalletByteReadChannel>)receiver byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(_:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readLongLittleEndian:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLongLittleEndian(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readShort:(id<XNetworking_fearlesswalletByteReadChannel>)receiver byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(XNetworking_fearlesswalletShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(_:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)readShortLittleEndian:(id<XNetworking_fearlesswalletByteReadChannel>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShortLittleEndian(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeDouble:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(double)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeDouble(_:value:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeDoubleLittleEndian:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(double)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeDoubleLittleEndian(_:value:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeFloat:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(float)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloat(_:value:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeFloatLittleEndian:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(float)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeFloatLittleEndian(_:value:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeInt:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(int32_t)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeInt(_:value:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeIntLittleEndian:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(int32_t)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeIntLittleEndian(_:value:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeLong:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(int64_t)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeLong(_:value:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeLongLittleEndian:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(int64_t)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeLongLittleEndian(_:value:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShort:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(int16_t)value byteOrder:(XNetworking_fearlesswalletByteOrder *)byteOrder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeShort(_:value:byteOrder:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)writeShortLittleEndian:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver value:(int16_t)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("writeShortLittleEndian(_:value:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WriterSessionKt")))
@interface XNetworking_fearlesswalletWriterSessionKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)write:(id<XNetworking_fearlesswalletByteWriteChannel>)receiver desiredSpace:(int32_t)desiredSpace block:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletMemory *, XNetworking_fearlesswalletLong *, XNetworking_fearlesswalletLong *))block completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("write(_:desiredSpace:block:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrderKt")))
@interface XNetworking_fearlesswalletByteOrderKt : XNetworking_fearlesswalletBase
+ (int8_t)highByte:(int16_t)receiver __attribute__((swift_name("highByte(_:)")));
+ (int32_t)highInt:(int64_t)receiver __attribute__((swift_name("highInt(_:)")));
+ (int16_t)highShort:(int32_t)receiver __attribute__((swift_name("highShort(_:)")));
+ (int8_t)lowByte:(int16_t)receiver __attribute__((swift_name("lowByte(_:)")));
+ (int32_t)lowInt:(int64_t)receiver __attribute__((swift_name("lowInt(_:)")));
+ (int16_t)lowShort:(int32_t)receiver __attribute__((swift_name("lowShort(_:)")));
+ (uint32_t)reverseByteOrder:(uint32_t)receiver __attribute__((swift_name("reverseByteOrder(_:)")));
+ (uint64_t)reverseByteOrder_:(uint64_t)receiver __attribute__((swift_name("reverseByteOrder(__:)")));
+ (uint16_t)reverseByteOrder__:(uint16_t)receiver __attribute__((swift_name("reverseByteOrder(___:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MemoryFactoryKt")))
@interface XNetworking_fearlesswalletMemoryFactoryKt : XNetworking_fearlesswalletBase
+ (id _Nullable)withMemorySize:(int32_t)size block:(id _Nullable (^)(XNetworking_fearlesswalletMemory *))block __attribute__((swift_name("withMemory(size:block:)")));
+ (id _Nullable)withMemorySize:(int64_t)size block_:(id _Nullable (^)(XNetworking_fearlesswalletMemory *))block __attribute__((swift_name("withMemory(size:block_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MemoryFactoryNativeKt")))
@interface XNetworking_fearlesswalletMemoryFactoryNativeKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletMemory *)doAllocMemory:(id<XNetworking_fearlesswalletKotlinNativePlacement>)receiver size:(int32_t)size __attribute__((swift_name("doAllocMemory(_:size:)")));
+ (XNetworking_fearlesswalletMemory *)doAllocMemory:(id<XNetworking_fearlesswalletKotlinNativePlacement>)receiver size_:(int64_t)size __attribute__((swift_name("doAllocMemory(_:size_:)")));
+ (void)free:(id<XNetworking_fearlesswalletKotlinNativeFreeablePlacement>)receiver memory:(XNetworking_fearlesswalletMemory *)memory __attribute__((swift_name("free(_:memory:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MemoryNativeKt")))
@interface XNetworking_fearlesswalletMemoryNativeKt : XNetworking_fearlesswalletBase
+ (void)doCopyTo:(void *)receiver destination:(XNetworking_fearlesswalletMemory *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(_:destination:offset:length:destinationOffset:)")));
+ (void)doCopyTo:(void *)receiver destination:(XNetworking_fearlesswalletMemory *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(_:destination:offset:length:destinationOffset_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteOrderNativeKt")))
@interface XNetworking_fearlesswalletByteOrderNativeKt : XNetworking_fearlesswalletBase
+ (double)reverseByteOrder:(double)receiver __attribute__((swift_name("reverseByteOrder(_:)")));
+ (float)reverseByteOrder_:(float)receiver __attribute__((swift_name("reverseByteOrder(__:)")));
+ (int32_t)reverseByteOrder__:(int32_t)receiver __attribute__((swift_name("reverseByteOrder(___:)")));
+ (int64_t)reverseByteOrder___:(int64_t)receiver __attribute__((swift_name("reverseByteOrder(____:)")));
+ (int16_t)reverseByteOrder____:(int16_t)receiver __attribute__((swift_name("reverseByteOrder(_____:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedKt")))
@interface XNetworking_fearlesswalletSharedKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)sharedValue:(id _Nullable)value __attribute__((swift_name("shared(value:)"))) __attribute__((unavailable("Is obsolete in new memory model.")));
+ (id<XNetworking_fearlesswalletKotlinReadOnlyProperty>)sharedLazyFunction:(id (^)(void))function __attribute__((swift_name("sharedLazy(function:)"))) __attribute__((unavailable("Is obsolete in new memory model.")));
+ (id<XNetworking_fearlesswalletKotlinReadOnlyProperty>)threadLocalValue:(id)value __attribute__((swift_name("threadLocal(value:)"))) __attribute__((unavailable("Is obsolete in new memory model.")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformKt")))
@interface XNetworking_fearlesswalletPlatformKt : XNetworking_fearlesswalletBase
@property (class, readonly) int32_t PACKET_MAX_COPY_SIZE __attribute__((swift_name("PACKET_MAX_COPY_SIZE")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteReadPacketKt")))
@interface XNetworking_fearlesswalletByteReadPacketKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletByteReadPacket *)ByteReadPacketArray:(XNetworking_fearlesswalletKotlinByteArray *)array offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("ByteReadPacket(array:offset:length:)")));
+ (XNetworking_fearlesswalletByteReadPacket *)ByteReadPacketArray:(XNetworking_fearlesswalletKotlinByteArray *)array offset:(int32_t)offset length:(int32_t)length block:(void (^)(XNetworking_fearlesswalletKotlinByteArray *))block __attribute__((swift_name("ByteReadPacket(array:offset:length:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BufferUtilsNativeKt")))
@interface XNetworking_fearlesswalletBufferUtilsNativeKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletChunkBuffer *)ChunkBufferPtr:(void *)ptr lengthInBytes:(int32_t)lengthInBytes origin:(XNetworking_fearlesswalletChunkBuffer * _Nullable)origin __attribute__((swift_name("ChunkBuffer(ptr:lengthInBytes:origin:)")));
+ (XNetworking_fearlesswalletChunkBuffer *)ChunkBufferPtr:(void *)ptr lengthInBytes:(int64_t)lengthInBytes origin_:(XNetworking_fearlesswalletChunkBuffer * _Nullable)origin __attribute__((swift_name("ChunkBuffer(ptr:lengthInBytes:origin_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringsNativeKt")))
@interface XNetworking_fearlesswalletStringsNativeKt : XNetworking_fearlesswalletBase
+ (NSString *)StringBytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes offset:(int32_t)offset length:(int32_t)length charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("String(bytes:offset:length:charset:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuilderKt")))
@interface XNetworking_fearlesswalletBuilderKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletByteReadPacket *)buildPacketBlock:(void (^)(XNetworking_fearlesswalletBytePacketBuilder *))block __attribute__((swift_name("buildPacket(block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BufferFactoryKt")))
@interface XNetworking_fearlesswalletBufferFactoryKt : XNetworking_fearlesswalletBase
+ (id _Nullable)withBufferPool:(id<XNetworking_fearlesswalletObjectPool>)pool block:(id _Nullable (^)(XNetworking_fearlesswalletBuffer *))block __attribute__((swift_name("withBuffer(pool:block:)")));
+ (id _Nullable)withBufferSize:(int32_t)size block:(id _Nullable (^)(XNetworking_fearlesswalletBuffer *))block __attribute__((swift_name("withBuffer(size:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StringsKt")))
@interface XNetworking_fearlesswalletStringsKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletKotlinByteArray *)toByteArray:(NSString *)receiver charset:(XNetworking_fearlesswalletCharset *)charset __attribute__((swift_name("toByteArray(_:charset:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseableKt")))
@interface XNetworking_fearlesswalletCloseableKt : XNetworking_fearlesswalletBase
+ (id _Nullable)use:(id<XNetworking_fearlesswalletCloseable>)receiver block:(id _Nullable (^)(id<XNetworking_fearlesswalletCloseable>))block __attribute__((swift_name("use(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ByteArrayPoolKt")))
@interface XNetworking_fearlesswalletByteArrayPoolKt : XNetworking_fearlesswalletBase
@property (class, readonly) id<XNetworking_fearlesswalletObjectPool> ByteArrayPool __attribute__((swift_name("ByteArrayPool")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PoolKt")))
@interface XNetworking_fearlesswalletPoolKt : XNetworking_fearlesswalletBase
+ (id _Nullable)useBorrowed:(id<XNetworking_fearlesswalletObjectPool>)receiver block:(id _Nullable (^)(id))block __attribute__((swift_name("useBorrowed(_:block:)"))) __attribute__((deprecated("Use useInstance instead")));
+ (id _Nullable)useInstance:(id<XNetworking_fearlesswalletObjectPool>)receiver block:(id _Nullable (^)(id))block __attribute__((swift_name("useInstance(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeSqlDatabaseKt")))
@interface XNetworking_fearlesswalletNativeSqlDatabaseKt : XNetworking_fearlesswalletBase
+ (void)wrapConnectionConnection:(id<XNetworking_fearlesswalletDatabaseConnection>)connection block:(void (^)(id<XNetworking_fearlesswalletSqlDriver>))block __attribute__((swift_name("wrapConnection(connection:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SettingsSerializationKt")))
@interface XNetworking_fearlesswalletSettingsSerializationKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id _Nullable)decodeValue:(id<XNetworking_fearlesswalletSettings>)receiver serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer key:(NSString *)key defaultValue:(id _Nullable)defaultValue serializersModule:(XNetworking_fearlesswalletSerializersModule *)serializersModule __attribute__((swift_name("decodeValue(_:serializer:key:defaultValue:serializersModule:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id _Nullable)decodeValueOrNull:(id<XNetworking_fearlesswalletSettings>)receiver serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer key:(NSString *)key serializersModule:(XNetworking_fearlesswalletSerializersModule *)serializersModule __attribute__((swift_name("decodeValueOrNull(_:serializer:key:serializersModule:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (void)encodeValue:(id<XNetworking_fearlesswalletSettings>)receiver serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer key:(NSString *)key value:(id _Nullable)value serializersModule:(XNetworking_fearlesswalletSerializersModule *)serializersModule __attribute__((swift_name("encodeValue(_:serializer:key:value:serializersModule:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)nullableSerializedValue:(id<XNetworking_fearlesswalletSettings>)receiver serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer key:(NSString * _Nullable)key context:(XNetworking_fearlesswalletSerializersModule *)context __attribute__((swift_name("nullableSerializedValue(_:serializer:key:context:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)serializedValue:(id<XNetworking_fearlesswalletSettings>)receiver serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer key:(NSString * _Nullable)key defaultValue:(id _Nullable)defaultValue context:(XNetworking_fearlesswalletSerializersModule *)context __attribute__((swift_name("serializedValue(_:serializer:key:defaultValue:context:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonKt")))
@interface XNetworking_fearlesswalletJsonKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletJson *)JsonFrom:(XNetworking_fearlesswalletJson *)from builderAction:(void (^)(XNetworking_fearlesswalletJsonBuilder *))builderAction __attribute__((swift_name("Json(from:builderAction:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonElementKt")))
@interface XNetworking_fearlesswalletJsonElementKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonPrimitiveValue:(XNetworking_fearlesswalletBoolean * _Nullable)value __attribute__((swift_name("JsonPrimitive(value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (XNetworking_fearlesswalletJsonNull *)JsonPrimitiveValue_:(XNetworking_fearlesswalletKotlinNothing * _Nullable)value __attribute__((swift_name("JsonPrimitive(value_:)")));
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonPrimitiveValue__:(id _Nullable)value __attribute__((swift_name("JsonPrimitive(value__:)")));
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonPrimitiveValue___:(NSString * _Nullable)value __attribute__((swift_name("JsonPrimitive(value___:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonPrimitiveValue____:(uint8_t)value __attribute__((swift_name("JsonPrimitive(value____:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonPrimitiveValue_____:(uint32_t)value __attribute__((swift_name("JsonPrimitive(value_____:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonPrimitiveValue______:(uint64_t)value __attribute__((swift_name("JsonPrimitive(value______:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonPrimitiveValue_______:(uint16_t)value __attribute__((swift_name("JsonPrimitive(value_______:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (XNetworking_fearlesswalletJsonPrimitive *)JsonUnquotedLiteralValue:(NSString * _Nullable)value __attribute__((swift_name("JsonUnquotedLiteral(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonElementBuildersKt")))
@interface XNetworking_fearlesswalletJsonElementBuildersKt : XNetworking_fearlesswalletBase
+ (NSArray<XNetworking_fearlesswalletJsonElement *> *)buildJsonArrayBuilderAction:(void (^)(XNetworking_fearlesswalletJsonArrayBuilder *))builderAction __attribute__((swift_name("buildJsonArray(builderAction:)")));
+ (NSDictionary<NSString *, XNetworking_fearlesswalletJsonElement *> *)buildJsonObjectBuilderAction:(void (^)(XNetworking_fearlesswalletJsonObjectBuilder *))builderAction __attribute__((swift_name("buildJsonObject(builderAction:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JobKt")))
@interface XNetworking_fearlesswalletJobKt : XNetworking_fearlesswalletBase
+ (BOOL)isActive:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)receiver __attribute__((swift_name("isActive(_:)")));
+ (id<XNetworking_fearlesswalletJob>)job:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)receiver __attribute__((swift_name("job(_:)")));
+ (id<XNetworking_fearlesswalletCompletableJob>)JobParent:(id<XNetworking_fearlesswalletJob> _Nullable)parent __attribute__((swift_name("Job(parent:)")));
+ (void)cancel:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)receiver cause:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(_:cause:)")));
+ (void)cancel:(id<XNetworking_fearlesswalletJob>)receiver message:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(_:message:cause:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)cancelAndJoin:(id<XNetworking_fearlesswalletJob>)receiver completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("cancelAndJoin(_:completionHandler:)")));
+ (void)cancelChildren:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)receiver cause:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancelChildren(_:cause:)")));
+ (void)cancelChildren:(id<XNetworking_fearlesswalletJob>)receiver cause_:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancelChildren(_:cause_:)")));
+ (void)ensureActive:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)receiver __attribute__((swift_name("ensureActive(_:)")));
+ (void)ensureActive_:(id<XNetworking_fearlesswalletJob>)receiver __attribute__((swift_name("ensureActive(__:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineScopeKt")))
@interface XNetworking_fearlesswalletCoroutineScopeKt : XNetworking_fearlesswalletBase
+ (BOOL)isActive:(id<XNetworking_fearlesswalletCoroutineScope>)receiver __attribute__((swift_name("isActive(_:)")));
+ (id<XNetworking_fearlesswalletCoroutineScope>)CoroutineScopeContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("CoroutineScope(context:)")));
+ (id<XNetworking_fearlesswalletCoroutineScope>)MainScope __attribute__((swift_name("MainScope()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)coroutineScopeBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("coroutineScope(block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)currentCoroutineContextWithCompletionHandler:(void (^)(id<XNetworking_fearlesswalletKotlinCoroutineContext> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("currentCoroutineContext(completionHandler:)")));
+ (void)cancel:(id<XNetworking_fearlesswalletCoroutineScope>)receiver message:(NSString *)message cause:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(_:message:cause:)")));
+ (void)cancel:(id<XNetworking_fearlesswalletCoroutineScope>)receiver cause:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(_:cause:)")));
+ (void)ensureActive:(id<XNetworking_fearlesswalletCoroutineScope>)receiver __attribute__((swift_name("ensureActive(_:)")));
+ (id<XNetworking_fearlesswalletCoroutineScope>)plus:(id<XNetworking_fearlesswalletCoroutineScope>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("plus(_:context:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompletableDeferredKt")))
@interface XNetworking_fearlesswalletCompletableDeferredKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletCompletableDeferred>)CompletableDeferredValue:(id _Nullable)value __attribute__((swift_name("CompletableDeferred(value:)")));
+ (id<XNetworking_fearlesswalletCompletableDeferred>)CompletableDeferredParent:(id<XNetworking_fearlesswalletJob> _Nullable)parent __attribute__((swift_name("CompletableDeferred(parent:)")));
+ (BOOL)completeWith:(id<XNetworking_fearlesswalletCompletableDeferred>)receiver result:(id _Nullable)result __attribute__((swift_name("completeWith(_:result:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineExceptionHandlerKt")))
@interface XNetworking_fearlesswalletCoroutineExceptionHandlerKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletCoroutineExceptionHandler>)CoroutineExceptionHandlerHandler:(void (^)(id<XNetworking_fearlesswalletKotlinCoroutineContext>, XNetworking_fearlesswalletKotlinThrowable *))handler __attribute__((swift_name("CoroutineExceptionHandler(handler:)")));
+ (void)handleCoroutineExceptionContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context exception:(XNetworking_fearlesswalletKotlinThrowable *)exception __attribute__((swift_name("handleCoroutineException(context:exception:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RunnableKt")))
@interface XNetworking_fearlesswalletRunnableKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletRunnable>)RunnableBlock:(void (^)(void))block __attribute__((swift_name("Runnable(block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SupervisorKt")))
@interface XNetworking_fearlesswalletSupervisorKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletCompletableJob>)SupervisorJobParent:(id<XNetworking_fearlesswalletJob> _Nullable)parent __attribute__((swift_name("SupervisorJob(parent:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)supervisorScopeBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("supervisorScope(block:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AwaitKt")))
@interface XNetworking_fearlesswalletAwaitKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitAllDeferreds:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletDeferred>> *)deferreds completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitAll(deferreds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)joinAllJobs:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletJob>> *)jobs completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("joinAll(jobs:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitAll:(id)receiver completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitAll(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)joinAll:(id)receiver completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("joinAll(_:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DelayKt")))
@interface XNetworking_fearlesswalletDelayKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitCancellationWithCompletionHandler:(void (^)(XNetworking_fearlesswalletKotlinNothing * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitCancellation(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)delayTimeMillis:(int64_t)timeMillis completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("delay(timeMillis:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)delayDuration:(int64_t)duration completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("delay(duration:completionHandler:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
+ (id<XNetworking_fearlesswalletFlow>)debounce:(id<XNetworking_fearlesswalletFlow>)receiver timeoutMillis:(XNetworking_fearlesswalletLong *(^)(id _Nullable))timeoutMillis __attribute__((swift_name("debounce(_:timeoutMillis:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
 *   kotlin.jvm.JvmName(name="debounceDuration")
*/
+ (id<XNetworking_fearlesswalletFlow>)debounce:(id<XNetworking_fearlesswalletFlow>)receiver timeout:(id (^)(id _Nullable))timeout __attribute__((swift_name("debounce(_:timeout:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
+ (id<XNetworking_fearlesswalletFlow>)debounce:(id<XNetworking_fearlesswalletFlow>)receiver timeoutMillis_:(int64_t)timeoutMillis __attribute__((swift_name("debounce(_:timeoutMillis_:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
+ (id<XNetworking_fearlesswalletFlow>)debounce:(id<XNetworking_fearlesswalletFlow>)receiver timeout_:(int64_t)timeout __attribute__((swift_name("debounce(_:timeout_:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
+ (id<XNetworking_fearlesswalletFlow>)sample:(id<XNetworking_fearlesswalletFlow>)receiver periodMillis:(int64_t)periodMillis __attribute__((swift_name("sample(_:periodMillis:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
+ (id<XNetworking_fearlesswalletFlow>)sample:(id<XNetworking_fearlesswalletFlow>)receiver period:(int64_t)period __attribute__((swift_name("sample(_:period:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
+ (id<XNetworking_fearlesswalletFlow>)timeout:(id<XNetworking_fearlesswalletFlow>)receiver timeout:(int64_t)timeout __attribute__((swift_name("timeout(_:timeout:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultithreadedDispatchersKt")))
@interface XNetworking_fearlesswalletMultithreadedDispatchersKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletCloseableCoroutineDispatcher *)doNewFixedThreadPoolContextNThreads:(int32_t)nThreads name:(NSString *)name __attribute__((swift_name("doNewFixedThreadPoolContext(nThreads:name:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultithreadedDispatchers_commonKt")))
@interface XNetworking_fearlesswalletMultithreadedDispatchers_commonKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
 *   kotlinx.coroutines.DelicateCoroutinesApi
*/
+ (XNetworking_fearlesswalletCloseableCoroutineDispatcher *)doNewSingleThreadContextName:(NSString *)name __attribute__((swift_name("doNewSingleThreadContext(name:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuildersKt_")))
@interface XNetworking_fearlesswalletBuildersKt_ : XNetworking_fearlesswalletBase
+ (id _Nullable)runBlockingContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("runBlocking(context:block:)")));
+ (id<XNetworking_fearlesswalletFlow>)callbackFlowBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("callbackFlow(block:)")));
+ (id<XNetworking_fearlesswalletFlow>)channelFlowBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("channelFlow(block:)")));
+ (id<XNetworking_fearlesswalletFlow>)emptyFlow __attribute__((swift_name("emptyFlow()")));
+ (id<XNetworking_fearlesswalletFlow>)flowBlock:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("flow(block:)")));
+ (id<XNetworking_fearlesswalletFlow>)flowOfValue:(id _Nullable)value __attribute__((swift_name("flowOf(value:)")));
+ (id<XNetworking_fearlesswalletFlow>)flowOfElements:(XNetworking_fearlesswalletKotlinArray<id> *)elements __attribute__((swift_name("flowOf(elements:)")));
+ (id<XNetworking_fearlesswalletFlow>)asFlow:(id _Nullable (^)(void))receiver __attribute__((swift_name("asFlow(_:)")));
+ (id<XNetworking_fearlesswalletFlow>)asFlow_:(id)receiver __attribute__((swift_name("asFlow(__:)")));
+ (id<XNetworking_fearlesswalletFlow>)asFlow__:(id<XNetworking_fearlesswalletKotlinIterator>)receiver __attribute__((swift_name("asFlow(___:)")));
+ (id<XNetworking_fearlesswalletFlow>)asFlow___:(id<XNetworking_fearlesswalletKotlinSequence>)receiver __attribute__((swift_name("asFlow(____:)")));
+ (id<XNetworking_fearlesswalletFlow>)asFlow____:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)receiver __attribute__((swift_name("asFlow(_____:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CancellableContinuationKt")))
@interface XNetworking_fearlesswalletCancellableContinuationKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)suspendCancellableCoroutineBlock:(void (^)(id<XNetworking_fearlesswalletCancellableContinuation>))block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("suspendCancellableCoroutine(block:completionHandler:)")));
+ (void)disposeOnCancellation:(id<XNetworking_fearlesswalletCancellableContinuation>)receiver handle:(id<XNetworking_fearlesswalletDisposableHandle>)handle __attribute__((swift_name("disposeOnCancellation(_:handle:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Builders_commonKt")))
@interface XNetworking_fearlesswalletBuilders_commonKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withContextContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withContext(context:block:completionHandler:)")));
+ (id<XNetworking_fearlesswalletDeferred>)async:(id<XNetworking_fearlesswalletCoroutineScope>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context start:(XNetworking_fearlesswalletCoroutineStart *)start block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("async(_:context:start:block:)")));
+ (id<XNetworking_fearlesswalletJob>)launch:(id<XNetworking_fearlesswalletCoroutineScope>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context start:(XNetworking_fearlesswalletCoroutineStart *)start block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("launch(_:context:start:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutKt")))
@interface XNetworking_fearlesswalletTimeoutKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutTimeMillis:(int64_t)timeMillis block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeout(timeMillis:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutTimeout:(int64_t)timeout block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeout(timeout:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutOrNullTimeMillis:(int64_t)timeMillis block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeoutOrNull(timeMillis:block:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withTimeoutOrNullTimeout:(int64_t)timeout block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withTimeoutOrNull(timeout:block:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("YieldKt")))
@interface XNetworking_fearlesswalletYieldKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)yieldWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("yield(completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutineContextKt")))
@interface XNetworking_fearlesswalletCoroutineContextKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKotlinCoroutineContext>)doNewCoroutineContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)receiver addedContext:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)addedContext __attribute__((swift_name("doNewCoroutineContext(_:addedContext:)")));
+ (id<XNetworking_fearlesswalletKotlinCoroutineContext>)doNewCoroutineContext:(id<XNetworking_fearlesswalletCoroutineScope>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("doNewCoroutineContext(_:context:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CancellableKt")))
@interface XNetworking_fearlesswalletCancellableKt : XNetworking_fearlesswalletBase
+ (void)startCoroutineCancellable:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)receiver completion:(id<XNetworking_fearlesswalletKotlinContinuation>)completion __attribute__((swift_name("startCoroutineCancellable(_:completion:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BroadcastChannelKt")))
@interface XNetworking_fearlesswalletBroadcastChannelKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.coroutines.ObsoleteCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletBroadcastChannel>)BroadcastChannelCapacity:(int32_t)capacity __attribute__((swift_name("BroadcastChannel(capacity:)"))) __attribute__((deprecated("BroadcastChannel is deprecated in the favour of SharedFlow and StateFlow, and is no longer supported")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelKt")))
@interface XNetworking_fearlesswalletChannelKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletChannel>)ChannelCapacity:(int32_t)capacity onBufferOverflow:(XNetworking_fearlesswalletBufferOverflow *)onBufferOverflow onUndeliveredElement:(void (^ _Nullable)(id _Nullable))onUndeliveredElement __attribute__((swift_name("Channel(capacity:onBufferOverflow:onUndeliveredElement:)")));
+ (id _Nullable)getOrElse:(id _Nullable)receiver onFailure:(id _Nullable (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))onFailure __attribute__((swift_name("getOrElse(_:onFailure:)")));
+ (id _Nullable)onClosed:(id _Nullable)receiver action:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))action __attribute__((swift_name("onClosed(_:action:)")));
+ (id _Nullable)onFailure:(id _Nullable)receiver action:(void (^)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))action __attribute__((swift_name("onFailure(_:action:)")));
+ (id _Nullable)onSuccess:(id _Nullable)receiver action:(void (^)(id _Nullable))action __attribute__((swift_name("onSuccess(_:action:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProduceKt")))
@interface XNetworking_fearlesswalletProduceKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)awaitClose:(id<XNetworking_fearlesswalletProducerScope>)receiver block:(void (^)(void))block completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("awaitClose(_:block:completionHandler:)")));
+ (id<XNetworking_fearlesswalletReceiveChannel>)produce:(id<XNetworking_fearlesswalletCoroutineScope>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context capacity:(int32_t)capacity start:(XNetworking_fearlesswalletCoroutineStart *)start onCompletion:(void (^ _Nullable)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))onCompletion block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("produce(_:context:capacity:start:onCompletion:block:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletReceiveChannel>)produce:(id<XNetworking_fearlesswalletCoroutineScope>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context capacity:(int32_t)capacity block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("produce(_:context:capacity:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BroadcastKt")))
@interface XNetworking_fearlesswalletBroadcastKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.coroutines.ObsoleteCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletBroadcastChannel>)broadcast:(id<XNetworking_fearlesswalletCoroutineScope>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context capacity:(int32_t)capacity start:(XNetworking_fearlesswalletCoroutineStart *)start onCompletion:(void (^ _Nullable)(XNetworking_fearlesswalletKotlinThrowable * _Nullable))onCompletion block:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)block __attribute__((swift_name("broadcast(_:context:capacity:start:onCompletion:block:)"))) __attribute__((deprecated("BroadcastChannel is deprecated in the favour of SharedFlow and is no longer supported")));

/**
 * @note annotations
 *   kotlinx.coroutines.ObsoleteCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletBroadcastChannel>)broadcast:(id<XNetworking_fearlesswalletReceiveChannel>)receiver capacity:(int32_t)capacity start:(XNetworking_fearlesswalletCoroutineStart *)start __attribute__((swift_name("broadcast(_:capacity:start:)"))) __attribute__((deprecated("BroadcastChannel is deprecated in the favour of SharedFlow and is no longer supported")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Channels_commonKt")))
@interface XNetworking_fearlesswalletChannels_commonKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.coroutines.ObsoleteCoroutinesApi
*/
+ (id _Nullable)consume:(id<XNetworking_fearlesswalletBroadcastChannel>)receiver block:(id _Nullable (^)(id<XNetworking_fearlesswalletReceiveChannel>))block __attribute__((swift_name("consume(_:block:)"))) __attribute__((deprecated("BroadcastChannel is deprecated in the favour of SharedFlow and is no longer supported")));
+ (id _Nullable)consume:(id<XNetworking_fearlesswalletReceiveChannel>)receiver block_:(id _Nullable (^)(id<XNetworking_fearlesswalletReceiveChannel>))block __attribute__((swift_name("consume(_:block_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)consumeEach:(id<XNetworking_fearlesswalletBroadcastChannel>)receiver action:(void (^)(id _Nullable))action completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("consumeEach(_:action:completionHandler:)"))) __attribute__((deprecated("BroadcastChannel is deprecated in the favour of SharedFlow and is no longer supported")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)consumeEach:(id<XNetworking_fearlesswalletReceiveChannel>)receiver action:(void (^)(id _Nullable))action completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("consumeEach(_:action:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toList:(id<XNetworking_fearlesswalletReceiveChannel>)receiver completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toList(_:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChannelsKt")))
@interface XNetworking_fearlesswalletChannelsKt : XNetworking_fearlesswalletBase
+ (id _Nullable)trySendBlocking:(id<XNetworking_fearlesswalletSendChannel>)receiver element:(id _Nullable)element __attribute__((swift_name("trySendBlocking(_:element:)")));
+ (id<XNetworking_fearlesswalletFlow>)asFlow:(id<XNetworking_fearlesswalletBroadcastChannel>)receiver __attribute__((swift_name("asFlow(_:)"))) __attribute__((unavailable("'BroadcastChannel' is obsolete and all corresponding operators are deprecated in the favour of StateFlow and SharedFlow")));
+ (id<XNetworking_fearlesswalletFlow>)consumeAsFlow:(id<XNetworking_fearlesswalletReceiveChannel>)receiver __attribute__((swift_name("consumeAsFlow(_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)emitAll:(id<XNetworking_fearlesswalletFlowCollector>)receiver channel:(id<XNetworking_fearlesswalletReceiveChannel>)channel completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("emitAll(_:channel:completionHandler:)")));
+ (id<XNetworking_fearlesswalletReceiveChannel>)produceIn:(id<XNetworking_fearlesswalletFlow>)receiver scope:(id<XNetworking_fearlesswalletCoroutineScope>)scope __attribute__((swift_name("produceIn(_:scope:)")));
+ (id<XNetworking_fearlesswalletFlow>)receiveAsFlow:(id<XNetworking_fearlesswalletReceiveChannel>)receiver __attribute__((swift_name("receiveAsFlow(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MergeKt")))
@interface XNetworking_fearlesswalletMergeKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)mergeFlows:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletFlow>> *)flows __attribute__((swift_name("merge(flows:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletFlow>)flatMapConcat:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("flatMapConcat(_:transform:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletFlow>)flatMapLatest:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("flatMapLatest(_:transform:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletFlow>)flatMapMerge:(id<XNetworking_fearlesswalletFlow>)receiver concurrency:(int32_t)concurrency transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("flatMapMerge(_:concurrency:transform:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletFlow>)flattenConcat:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("flattenConcat(_:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletFlow>)flattenMerge:(id<XNetworking_fearlesswalletFlow>)receiver concurrency:(int32_t)concurrency __attribute__((swift_name("flattenMerge(_:concurrency:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletFlow>)mapLatest:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("mapLatest(_:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)merge:(id)receiver __attribute__((swift_name("merge(_:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (id<XNetworking_fearlesswalletFlow>)transformLatest:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("transformLatest(_:transform:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
@property (class, readonly) int32_t DEFAULT_CONCURRENCY __attribute__((swift_name("DEFAULT_CONCURRENCY")));

/**
 * @note annotations
 *   kotlinx.coroutines.FlowPreview
*/
@property (class, readonly) NSString *DEFAULT_CONCURRENCY_PROPERTY_NAME __attribute__((swift_name("DEFAULT_CONCURRENCY_PROPERTY_NAME")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LintKt")))
@interface XNetworking_fearlesswalletLintKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKotlinCoroutineContext>)coroutineContext:(id<XNetworking_fearlesswalletFlowCollector>)receiver __attribute__((swift_name("coroutineContext(_:)"))) __attribute__((unavailable("coroutineContext is resolved into the property of outer CoroutineScope which is likely to be an error.Use currentCoroutineContext() instead or specify the receiver of coroutineContext explicitly")));
+ (BOOL)isActive:(id<XNetworking_fearlesswalletFlowCollector>)receiver __attribute__((swift_name("isActive(_:)"))) __attribute__((unavailable("isActive is resolved into the extension of outer CoroutineScope which is likely to be an error.Use currentCoroutineContext().isActive or cancellable() operator instead or specify the receiver of isActive explicitly. Additionally, flow {} builder emissions are cancellable by default.")));
+ (void)cancel:(id<XNetworking_fearlesswalletFlowCollector>)receiver cause:(XNetworking_fearlesswalletKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(_:cause:)"))) __attribute__((unavailable("cancel() is resolved into the extension of outer CoroutineScope which is likely to be an error.Use currentCoroutineContext().cancel() instead or specify the receiver of cancel() explicitly")));
+ (id<XNetworking_fearlesswalletFlow>)cancellable:(id<XNetworking_fearlesswalletSharedFlow>)receiver __attribute__((swift_name("cancellable(_:)"))) __attribute__((unavailable("Applying 'cancellable' to a SharedFlow has no effect. See the SharedFlow documentation on Operator Fusion.")));
+ (id<XNetworking_fearlesswalletFlow>)catch:(id<XNetworking_fearlesswalletSharedFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)action __attribute__((swift_name("catch(_:action:)"))) __attribute__((deprecated("SharedFlow never completes, so this operator typically has not effect, it can only catch exceptions from 'onSubscribe' operator")));
+ (id<XNetworking_fearlesswalletFlow>)conflate:(id<XNetworking_fearlesswalletStateFlow>)receiver __attribute__((swift_name("conflate(_:)"))) __attribute__((unavailable("Applying 'conflate' to StateFlow has no effect. See the StateFlow documentation on Operator Fusion.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)count:(id<XNetworking_fearlesswalletSharedFlow>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("count(_:completionHandler:)"))) __attribute__((deprecated("SharedFlow never completes, so this terminal operation never completes.")));
+ (id<XNetworking_fearlesswalletFlow>)distinctUntilChanged:(id<XNetworking_fearlesswalletStateFlow>)receiver __attribute__((swift_name("distinctUntilChanged(_:)"))) __attribute__((unavailable("Applying 'distinctUntilChanged' to StateFlow has no effect. See the StateFlow documentation on Operator Fusion.")));
+ (id<XNetworking_fearlesswalletFlow>)flowOn:(id<XNetworking_fearlesswalletSharedFlow>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("flowOn(_:context:)"))) __attribute__((unavailable("Applying 'flowOn' to SharedFlow has no effect. See the SharedFlow documentation on Operator Fusion.")));
+ (id<XNetworking_fearlesswalletFlow>)retry:(id<XNetworking_fearlesswalletSharedFlow>)receiver retries:(int64_t)retries predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate __attribute__((swift_name("retry(_:retries:predicate:)"))) __attribute__((deprecated("SharedFlow never completes, so this operator has no effect.")));
+ (id<XNetworking_fearlesswalletFlow>)retryWhen:(id<XNetworking_fearlesswalletSharedFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)predicate __attribute__((swift_name("retryWhen(_:predicate:)"))) __attribute__((deprecated("SharedFlow never completes, so this operator has no effect.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toList:(id<XNetworking_fearlesswalletSharedFlow>)receiver completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toList(_:completionHandler:)"))) __attribute__((deprecated("SharedFlow never completes, so this terminal operation never completes.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toList:(id<XNetworking_fearlesswalletSharedFlow>)receiver destination:(NSMutableArray<id> *)destination completionHandler:(void (^)(XNetworking_fearlesswalletKotlinNothing * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toList(_:destination:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toSet:(id<XNetworking_fearlesswalletSharedFlow>)receiver completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toSet(_:completionHandler:)"))) __attribute__((deprecated("SharedFlow never completes, so this terminal operation never completes.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toSet:(id<XNetworking_fearlesswalletSharedFlow>)receiver destination:(XNetworking_fearlesswalletMutableSet<id> *)destination completionHandler:(void (^)(XNetworking_fearlesswalletKotlinNothing * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toSet(_:destination:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedFlowKt")))
@interface XNetworking_fearlesswalletSharedFlowKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletMutableSharedFlow>)MutableSharedFlowReplay:(int32_t)replay extraBufferCapacity:(int32_t)extraBufferCapacity onBufferOverflow:(XNetworking_fearlesswalletBufferOverflow *)onBufferOverflow __attribute__((swift_name("MutableSharedFlow(replay:extraBufferCapacity:onBufferOverflow:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StateFlowKt")))
@interface XNetworking_fearlesswalletStateFlowKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletMutableStateFlow>)MutableStateFlowValue:(id _Nullable)value __attribute__((swift_name("MutableStateFlow(value:)")));
+ (id _Nullable)getAndUpdate:(id<XNetworking_fearlesswalletMutableStateFlow>)receiver function:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("getAndUpdate(_:function:)")));
+ (void)update:(id<XNetworking_fearlesswalletMutableStateFlow>)receiver function:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("update(_:function:)")));
+ (id _Nullable)updateAndGet:(id<XNetworking_fearlesswalletMutableStateFlow>)receiver function:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("updateAndGet(_:function:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ZipKt")))
@interface XNetworking_fearlesswalletZipKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)combineFlows:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletFlow>> *)flows transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("combine(flows:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineFlows:(id)flows transform_:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("combine(flows:transform_:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 flow3:(id<XNetworking_fearlesswalletFlow>)flow3 flow4:(id<XNetworking_fearlesswalletFlow>)flow4 flow5:(id<XNetworking_fearlesswalletFlow>)flow5 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction5>)transform __attribute__((swift_name("combine(flow:flow2:flow3:flow4:flow5:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 flow3:(id<XNetworking_fearlesswalletFlow>)flow3 flow4:(id<XNetworking_fearlesswalletFlow>)flow4 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction4>)transform __attribute__((swift_name("combine(flow:flow2:flow3:flow4:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 flow3:(id<XNetworking_fearlesswalletFlow>)flow3 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)transform __attribute__((swift_name("combine(flow:flow2:flow3:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("combine(flow:flow2:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineTransformFlows:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletFlow>> *)flows transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("combineTransform(flows:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineTransformFlows:(id)flows transform_:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("combineTransform(flows:transform_:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineTransformFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 flow3:(id<XNetworking_fearlesswalletFlow>)flow3 flow4:(id<XNetworking_fearlesswalletFlow>)flow4 flow5:(id<XNetworking_fearlesswalletFlow>)flow5 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction6>)transform __attribute__((swift_name("combineTransform(flow:flow2:flow3:flow4:flow5:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineTransformFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 flow3:(id<XNetworking_fearlesswalletFlow>)flow3 flow4:(id<XNetworking_fearlesswalletFlow>)flow4 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction5>)transform __attribute__((swift_name("combineTransform(flow:flow2:flow3:flow4:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineTransformFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 flow3:(id<XNetworking_fearlesswalletFlow>)flow3 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction4>)transform __attribute__((swift_name("combineTransform(flow:flow2:flow3:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)combineTransformFlow:(id<XNetworking_fearlesswalletFlow>)flow flow2:(id<XNetworking_fearlesswalletFlow>)flow2 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)transform __attribute__((swift_name("combineTransform(flow:flow2:transform:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmName(name="flowCombine")
*/
+ (id<XNetworking_fearlesswalletFlow>)combine:(id<XNetworking_fearlesswalletFlow>)receiver flow:(id<XNetworking_fearlesswalletFlow>)flow transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("combine(_:flow:transform:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmName(name="flowCombineTransform")
*/
+ (id<XNetworking_fearlesswalletFlow>)combineTransform:(id<XNetworking_fearlesswalletFlow>)receiver flow:(id<XNetworking_fearlesswalletFlow>)flow transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)transform __attribute__((swift_name("combineTransform(_:flow:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)zip:(id<XNetworking_fearlesswalletFlow>)receiver other:(id<XNetworking_fearlesswalletFlow>)other transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("zip(_:other:transform:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShareKt")))
@interface XNetworking_fearlesswalletShareKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletSharedFlow>)asSharedFlow:(id<XNetworking_fearlesswalletMutableSharedFlow>)receiver __attribute__((swift_name("asSharedFlow(_:)")));
+ (id<XNetworking_fearlesswalletStateFlow>)asStateFlow:(id<XNetworking_fearlesswalletMutableStateFlow>)receiver __attribute__((swift_name("asStateFlow(_:)")));
+ (id<XNetworking_fearlesswalletSharedFlow>)onSubscription:(id<XNetworking_fearlesswalletSharedFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)action __attribute__((swift_name("onSubscription(_:action:)")));
+ (id<XNetworking_fearlesswalletSharedFlow>)shareIn:(id<XNetworking_fearlesswalletFlow>)receiver scope:(id<XNetworking_fearlesswalletCoroutineScope>)scope started:(id<XNetworking_fearlesswalletSharingStarted>)started replay:(int32_t)replay __attribute__((swift_name("shareIn(_:scope:started:replay:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)stateIn:(id<XNetworking_fearlesswalletFlow>)receiver scope:(id<XNetworking_fearlesswalletCoroutineScope>)scope completionHandler:(void (^)(id<XNetworking_fearlesswalletStateFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("stateIn(_:scope:completionHandler:)")));
+ (id<XNetworking_fearlesswalletStateFlow>)stateIn:(id<XNetworking_fearlesswalletFlow>)receiver scope:(id<XNetworking_fearlesswalletCoroutineScope>)scope started:(id<XNetworking_fearlesswalletSharingStarted>)started initialValue:(id _Nullable)initialValue __attribute__((swift_name("stateIn(_:scope:started:initialValue:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContextKt")))
@interface XNetworking_fearlesswalletContextKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)buffer:(id<XNetworking_fearlesswalletFlow>)receiver capacity:(int32_t)capacity onBufferOverflow:(XNetworking_fearlesswalletBufferOverflow *)onBufferOverflow __attribute__((swift_name("buffer(_:capacity:onBufferOverflow:)")));
+ (id<XNetworking_fearlesswalletFlow>)cancellable:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("cancellable(_:)")));
+ (id<XNetworking_fearlesswalletFlow>)conflate:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("conflate(_:)")));
+ (id<XNetworking_fearlesswalletFlow>)flowOn:(id<XNetworking_fearlesswalletFlow>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("flowOn(_:context:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MigrationKt")))
@interface XNetworking_fearlesswalletMigrationKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)cache:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("cache(_:)"))) __attribute__((unavailable("Flow analogue of 'cache()' is 'shareIn' with unlimited replay and 'started = SharingStared.Lazily' argument'")));
+ (id<XNetworking_fearlesswalletFlow>)combineLatest:(id<XNetworking_fearlesswalletFlow>)receiver other:(id<XNetworking_fearlesswalletFlow>)other other2:(id<XNetworking_fearlesswalletFlow>)other2 other3:(id<XNetworking_fearlesswalletFlow>)other3 other4:(id<XNetworking_fearlesswalletFlow>)other4 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction5>)transform __attribute__((swift_name("combineLatest(_:other:other2:other3:other4:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<XNetworking_fearlesswalletFlow>)combineLatest:(id<XNetworking_fearlesswalletFlow>)receiver other:(id<XNetworking_fearlesswalletFlow>)other other2:(id<XNetworking_fearlesswalletFlow>)other2 other3:(id<XNetworking_fearlesswalletFlow>)other3 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction4>)transform __attribute__((swift_name("combineLatest(_:other:other2:other3:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<XNetworking_fearlesswalletFlow>)combineLatest:(id<XNetworking_fearlesswalletFlow>)receiver other:(id<XNetworking_fearlesswalletFlow>)other other2:(id<XNetworking_fearlesswalletFlow>)other2 transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)transform __attribute__((swift_name("combineLatest(_:other:other2:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<XNetworking_fearlesswalletFlow>)combineLatest:(id<XNetworking_fearlesswalletFlow>)receiver other:(id<XNetworking_fearlesswalletFlow>)other transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("combineLatest(_:other:transform:)"))) __attribute__((unavailable("Flow analogue of 'combineLatest' is 'combine'")));
+ (id<XNetworking_fearlesswalletFlow>)compose:(id<XNetworking_fearlesswalletFlow>)receiver transformer:(id<XNetworking_fearlesswalletFlow> (^)(id<XNetworking_fearlesswalletFlow>))transformer __attribute__((swift_name("compose(_:transformer:)"))) __attribute__((unavailable("Flow analogue of 'compose' is 'let'")));
+ (id<XNetworking_fearlesswalletFlow>)concatMap:(id<XNetworking_fearlesswalletFlow>)receiver mapper:(id<XNetworking_fearlesswalletFlow> (^)(id _Nullable))mapper __attribute__((swift_name("concatMap(_:mapper:)"))) __attribute__((unavailable("Flow analogue of 'concatMap' is 'flatMapConcat'")));
+ (id<XNetworking_fearlesswalletFlow>)concatWith:(id<XNetworking_fearlesswalletFlow>)receiver value:(id _Nullable)value __attribute__((swift_name("concatWith(_:value:)"))) __attribute__((unavailable("Flow analogue of 'concatWith' is 'onCompletion'. Use 'onCompletion { emit(value) }'")));
+ (id<XNetworking_fearlesswalletFlow>)concatWith:(id<XNetworking_fearlesswalletFlow>)receiver other:(id<XNetworking_fearlesswalletFlow>)other __attribute__((swift_name("concatWith(_:other:)"))) __attribute__((unavailable("Flow analogue of 'concatWith' is 'onCompletion'. Use 'onCompletion { if (it == null) emitAll(other) }'")));
+ (id<XNetworking_fearlesswalletFlow>)delayEach:(id<XNetworking_fearlesswalletFlow>)receiver timeMillis:(int64_t)timeMillis __attribute__((swift_name("delayEach(_:timeMillis:)"))) __attribute__((unavailable("Use 'onEach { delay(timeMillis) }'")));
+ (id<XNetworking_fearlesswalletFlow>)delayFlow:(id<XNetworking_fearlesswalletFlow>)receiver timeMillis:(int64_t)timeMillis __attribute__((swift_name("delayFlow(_:timeMillis:)"))) __attribute__((unavailable("Use 'onStart { delay(timeMillis) }'")));
+ (id<XNetworking_fearlesswalletFlow>)flatMap:(id<XNetworking_fearlesswalletFlow>)receiver mapper:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)mapper __attribute__((swift_name("flatMap(_:mapper:)"))) __attribute__((unavailable("Flow analogue is 'flatMapConcat'")));
+ (id<XNetworking_fearlesswalletFlow>)flatten:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("flatten(_:)"))) __attribute__((unavailable("Flow analogue of 'flatten' is 'flattenConcat'")));
+ (void)forEach:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)action __attribute__((swift_name("forEach(_:action:)"))) __attribute__((unavailable("Flow analogue of 'forEach' is 'collect'")));
+ (id<XNetworking_fearlesswalletFlow>)merge:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("merge(_:)"))) __attribute__((unavailable("Flow analogue of 'merge' is 'flattenConcat'")));
+ (id<XNetworking_fearlesswalletFlow>)observeOn:(id<XNetworking_fearlesswalletFlow>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("observeOn(_:context:)"))) __attribute__((unavailable("Collect flow in the desired context instead")));
+ (id<XNetworking_fearlesswalletFlow>)onErrorResume:(id<XNetworking_fearlesswalletFlow>)receiver fallback:(id<XNetworking_fearlesswalletFlow>)fallback __attribute__((swift_name("onErrorResume(_:fallback:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { emitAll(fallback) }'")));
+ (id<XNetworking_fearlesswalletFlow>)onErrorResumeNext:(id<XNetworking_fearlesswalletFlow>)receiver fallback:(id<XNetworking_fearlesswalletFlow>)fallback __attribute__((swift_name("onErrorResumeNext(_:fallback:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { emitAll(fallback) }'")));
+ (id<XNetworking_fearlesswalletFlow>)onErrorReturn:(id<XNetworking_fearlesswalletFlow>)receiver fallback:(id _Nullable)fallback __attribute__((swift_name("onErrorReturn(_:fallback:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { emit(fallback) }'")));
+ (id<XNetworking_fearlesswalletFlow>)onErrorReturn:(id<XNetworking_fearlesswalletFlow>)receiver fallback:(id _Nullable)fallback predicate:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletKotlinThrowable *))predicate __attribute__((swift_name("onErrorReturn(_:fallback:predicate:)"))) __attribute__((unavailable("Flow analogue of 'onErrorXxx' is 'catch'. Use 'catch { e -> if (predicate(e)) emit(fallback) else throw e }'")));
+ (id<XNetworking_fearlesswalletFlow>)publish:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("publish(_:)"))) __attribute__((unavailable("Flow analogue of 'publish()' is 'shareIn'. \npublish().connect() is the default strategy (no extra call is needed), \npublish().autoConnect() translates to 'started = SharingStared.Lazily' argument, \npublish().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<XNetworking_fearlesswalletFlow>)publish:(id<XNetworking_fearlesswalletFlow>)receiver bufferSize:(int32_t)bufferSize __attribute__((swift_name("publish(_:bufferSize:)"))) __attribute__((unavailable("Flow analogue of 'publish(bufferSize)' is 'buffer' followed by 'shareIn'. \npublish().connect() is the default strategy (no extra call is needed), \npublish().autoConnect() translates to 'started = SharingStared.Lazily' argument, \npublish().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<XNetworking_fearlesswalletFlow>)publishOn:(id<XNetworking_fearlesswalletFlow>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("publishOn(_:context:)"))) __attribute__((unavailable("Collect flow in the desired context instead")));
+ (id<XNetworking_fearlesswalletFlow>)replay:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("replay(_:)"))) __attribute__((unavailable("Flow analogue of 'replay()' is 'shareIn' with unlimited replay. \nreplay().connect() is the default strategy (no extra call is needed), \nreplay().autoConnect() translates to 'started = SharingStared.Lazily' argument, \nreplay().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<XNetworking_fearlesswalletFlow>)replay:(id<XNetworking_fearlesswalletFlow>)receiver bufferSize:(int32_t)bufferSize __attribute__((swift_name("replay(_:bufferSize:)"))) __attribute__((unavailable("Flow analogue of 'replay(bufferSize)' is 'shareIn' with the specified replay parameter. \nreplay().connect() is the default strategy (no extra call is needed), \nreplay().autoConnect() translates to 'started = SharingStared.Lazily' argument, \nreplay().refCount() translates to 'started = SharingStared.WhileSubscribed()' argument.")));
+ (id<XNetworking_fearlesswalletFlow>)scanFold:(id<XNetworking_fearlesswalletFlow>)receiver initial:(id _Nullable)initial operation:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)operation __attribute__((swift_name("scanFold(_:initial:operation:)"))) __attribute__((unavailable("Flow has less verbose 'scan' shortcut")));
+ (id<XNetworking_fearlesswalletFlow>)scanReduce:(id<XNetworking_fearlesswalletFlow>)receiver operation:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)operation __attribute__((swift_name("scanReduce(_:operation:)"))) __attribute__((unavailable("'scanReduce' was renamed to 'runningReduce' to be consistent with Kotlin standard library")));
+ (id<XNetworking_fearlesswalletFlow>)skip:(id<XNetworking_fearlesswalletFlow>)receiver count:(int32_t)count __attribute__((swift_name("skip(_:count:)"))) __attribute__((unavailable("Flow analogue of 'skip' is 'drop'")));
+ (id<XNetworking_fearlesswalletFlow>)startWith:(id<XNetworking_fearlesswalletFlow>)receiver value:(id _Nullable)value __attribute__((swift_name("startWith(_:value:)"))) __attribute__((unavailable("Flow analogue of 'startWith' is 'onStart'. Use 'onStart { emit(value) }'")));
+ (id<XNetworking_fearlesswalletFlow>)startWith:(id<XNetworking_fearlesswalletFlow>)receiver other:(id<XNetworking_fearlesswalletFlow>)other __attribute__((swift_name("startWith(_:other:)"))) __attribute__((unavailable("Flow analogue of 'startWith' is 'onStart'. Use 'onStart { emitAll(other) }'")));
+ (void)subscribe:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("subscribe(_:)"))) __attribute__((unavailable("Use 'launchIn' with 'onEach', 'onCompletion' and 'catch' instead")));
+ (void)subscribe:(id<XNetworking_fearlesswalletFlow>)receiver onEach:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)onEach __attribute__((swift_name("subscribe(_:onEach:)"))) __attribute__((unavailable("Use 'launchIn' with 'onEach', 'onCompletion' and 'catch' instead")));
+ (void)subscribe:(id<XNetworking_fearlesswalletFlow>)receiver onEach:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)onEach onError:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)onError __attribute__((swift_name("subscribe(_:onEach:onError:)"))) __attribute__((unavailable("Use 'launchIn' with 'onEach', 'onCompletion' and 'catch' instead")));
+ (id<XNetworking_fearlesswalletFlow>)subscribeOn:(id<XNetworking_fearlesswalletFlow>)receiver context:(id<XNetworking_fearlesswalletKotlinCoroutineContext>)context __attribute__((swift_name("subscribeOn(_:context:)"))) __attribute__((unavailable("Use 'flowOn' instead")));
+ (id<XNetworking_fearlesswalletFlow>)switchMap:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("switchMap(_:transform:)"))) __attribute__((unavailable("Flow analogues of 'switchMap' are 'transformLatest', 'flatMapLatest' and 'mapLatest'")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ErrorsKt")))
@interface XNetworking_fearlesswalletErrorsKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)catch:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)action __attribute__((swift_name("catch(_:action:)")));
+ (id<XNetworking_fearlesswalletFlow>)retry:(id<XNetworking_fearlesswalletFlow>)receiver retries:(int64_t)retries predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate __attribute__((swift_name("retry(_:retries:predicate:)")));
+ (id<XNetworking_fearlesswalletFlow>)retryWhen:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction3>)predicate __attribute__((swift_name("retryWhen(_:predicate:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectKt")))
@interface XNetworking_fearlesswalletCollectKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)collect:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collect(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)collectIndexed:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)action completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collectIndexed(_:action:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)collectLatest:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)action completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collectLatest(_:action:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)emitAll:(id<XNetworking_fearlesswalletFlowCollector>)receiver flow:(id<XNetworking_fearlesswalletFlow>)flow completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("emitAll(_:flow:completionHandler:)")));
+ (id<XNetworking_fearlesswalletJob>)launchIn:(id<XNetworking_fearlesswalletFlow>)receiver scope:(id<XNetworking_fearlesswalletCoroutineScope>)scope __attribute__((swift_name("launchIn(_:scope:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CountKt")))
@interface XNetworking_fearlesswalletCountKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)count:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("count(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)count:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate completionHandler:(void (^)(XNetworking_fearlesswalletInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("count(_:predicate:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DistinctKt")))
@interface XNetworking_fearlesswalletDistinctKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)distinctUntilChanged:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("distinctUntilChanged(_:)")));
+ (id<XNetworking_fearlesswalletFlow>)distinctUntilChanged:(id<XNetworking_fearlesswalletFlow>)receiver areEquivalent:(XNetworking_fearlesswalletBoolean *(^)(id _Nullable, id _Nullable))areEquivalent __attribute__((swift_name("distinctUntilChanged(_:areEquivalent:)")));
+ (id<XNetworking_fearlesswalletFlow>)distinctUntilChangedBy:(id<XNetworking_fearlesswalletFlow>)receiver keySelector:(id _Nullable (^)(id _Nullable))keySelector __attribute__((swift_name("distinctUntilChangedBy(_:keySelector:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LimitKt")))
@interface XNetworking_fearlesswalletLimitKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)drop:(id<XNetworking_fearlesswalletFlow>)receiver count:(int32_t)count __attribute__((swift_name("drop(_:count:)")));
+ (id<XNetworking_fearlesswalletFlow>)dropWhile:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate __attribute__((swift_name("dropWhile(_:predicate:)")));
+ (id<XNetworking_fearlesswalletFlow>)take:(id<XNetworking_fearlesswalletFlow>)receiver count:(int32_t)count __attribute__((swift_name("take(_:count:)")));
+ (id<XNetworking_fearlesswalletFlow>)takeWhile:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate __attribute__((swift_name("takeWhile(_:predicate:)")));
+ (id<XNetworking_fearlesswalletFlow>)transformWhile:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("transformWhile(_:transform:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TransformKt")))
@interface XNetworking_fearlesswalletTransformKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)filter:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate __attribute__((swift_name("filter(_:predicate:)")));
+ (id<XNetworking_fearlesswalletFlow>)filterIsInstance:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("filterIsInstance(_:)")));
+ (id<XNetworking_fearlesswalletFlow>)filterIsInstance:(id<XNetworking_fearlesswalletFlow>)receiver klass:(id<XNetworking_fearlesswalletKotlinKClass>)klass __attribute__((swift_name("filterIsInstance(_:klass:)")));
+ (id<XNetworking_fearlesswalletFlow>)filterNot:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate __attribute__((swift_name("filterNot(_:predicate:)")));
+ (id<XNetworking_fearlesswalletFlow>)filterNotNull:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("filterNotNull(_:)")));
+ (id<XNetworking_fearlesswalletFlow>)map:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("map(_:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)mapNotNull:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)transform __attribute__((swift_name("mapNotNull(_:transform:)")));
+ (id<XNetworking_fearlesswalletFlow>)onEach:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)action __attribute__((swift_name("onEach(_:action:)")));
+ (id<XNetworking_fearlesswalletFlow>)runningFold:(id<XNetworking_fearlesswalletFlow>)receiver initial:(id _Nullable)initial operation:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)operation __attribute__((swift_name("runningFold(_:initial:operation:)")));
+ (id<XNetworking_fearlesswalletFlow>)runningReduce:(id<XNetworking_fearlesswalletFlow>)receiver operation:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)operation __attribute__((swift_name("runningReduce(_:operation:)")));
+ (id<XNetworking_fearlesswalletFlow>)scan:(id<XNetworking_fearlesswalletFlow>)receiver initial:(id _Nullable)initial operation:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)operation __attribute__((swift_name("scan(_:initial:operation:)")));
+ (id<XNetworking_fearlesswalletFlow>)withIndex:(id<XNetworking_fearlesswalletFlow>)receiver __attribute__((swift_name("withIndex(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReduceKt")))
@interface XNetworking_fearlesswalletReduceKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)first:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("first(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)first:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("first(_:predicate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)firstOrNull:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("firstOrNull(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)firstOrNull:(id<XNetworking_fearlesswalletFlow>)receiver predicate:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)predicate completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("firstOrNull(_:predicate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)fold:(id<XNetworking_fearlesswalletFlow>)receiver initial:(id _Nullable)initial operation:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)operation completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("fold(_:initial:operation:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)last:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("last(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)lastOrNull:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("lastOrNull(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)reduce:(id<XNetworking_fearlesswalletFlow>)receiver operation:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)operation completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("reduce(_:operation:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)single:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("single(_:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)singleOrNull:(id<XNetworking_fearlesswalletFlow>)receiver completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("singleOrNull(_:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmittersKt")))
@interface XNetworking_fearlesswalletEmittersKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletFlow>)onCompletion:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)action __attribute__((swift_name("onCompletion(_:action:)")));
+ (id<XNetworking_fearlesswalletFlow>)onEmpty:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)action __attribute__((swift_name("onEmpty(_:action:)")));
+ (id<XNetworking_fearlesswalletFlow>)onStart:(id<XNetworking_fearlesswalletFlow>)receiver action:(id<XNetworking_fearlesswalletKotlinSuspendFunction1>)action __attribute__((swift_name("onStart(_:action:)")));
+ (id<XNetworking_fearlesswalletFlow>)transform:(id<XNetworking_fearlesswalletFlow>)receiver transform:(id<XNetworking_fearlesswalletKotlinSuspendFunction2>)transform __attribute__((swift_name("transform(_:transform:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CollectionKt")))
@interface XNetworking_fearlesswalletCollectionKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toCollection:(id<XNetworking_fearlesswalletFlow>)receiver destination:(id)destination completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toCollection(_:destination:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toList:(id<XNetworking_fearlesswalletFlow>)receiver destination:(NSMutableArray<id> *)destination completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toList(_:destination:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)toSet:(id<XNetworking_fearlesswalletFlow>)receiver destination:(XNetworking_fearlesswalletMutableSet<id> *)destination completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("toSet(_:destination:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SelectKt")))
@interface XNetworking_fearlesswalletSelectKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)selectBuilder:(void (^)(id<XNetworking_fearlesswalletSelectBuilder>))builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("select(builder:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SelectUnbiasedKt")))
@interface XNetworking_fearlesswalletSelectUnbiasedKt : XNetworking_fearlesswalletBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)selectUnbiasedBuilder:(void (^)(id<XNetworking_fearlesswalletSelectBuilder>))builder completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("selectUnbiased(builder:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WhileSelectKt")))
@interface XNetworking_fearlesswalletWhileSelectKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)whileSelectBuilder:(void (^)(id<XNetworking_fearlesswalletSelectBuilder>))builder completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("whileSelect(builder:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OnTimeoutKt")))
@interface XNetworking_fearlesswalletOnTimeoutKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (void)onTimeout:(id<XNetworking_fearlesswalletSelectBuilder>)receiver timeMillis:(int64_t)timeMillis block:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)block __attribute__((swift_name("onTimeout(_:timeMillis:block:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
+ (void)onTimeout:(id<XNetworking_fearlesswalletSelectBuilder>)receiver timeout:(int64_t)timeout block:(id<XNetworking_fearlesswalletKotlinSuspendFunction0>)block __attribute__((swift_name("onTimeout(_:timeout:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Synchronized_commonKt")))
@interface XNetworking_fearlesswalletSynchronized_commonKt : XNetworking_fearlesswalletBase
+ (id _Nullable)synchronizedLock:(XNetworking_fearlesswalletSynchronizedObject *)lock block:(id _Nullable (^)(void))block __attribute__((swift_name("synchronized(lock:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedKt")))
@interface XNetworking_fearlesswalletSynchronizedKt : XNetworking_fearlesswalletBase
+ (id _Nullable)synchronizedImplLock:(XNetworking_fearlesswalletSynchronizedObject *)lock block:(id _Nullable (^)(void))block __attribute__((swift_name("synchronizedImpl(lock:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DispatchedContinuationKt")))
@interface XNetworking_fearlesswalletDispatchedContinuationKt : XNetworking_fearlesswalletBase
+ (void)resumeCancellableWith:(id<XNetworking_fearlesswalletKotlinContinuation>)receiver result:(id _Nullable)result onCancellation:(void (^ _Nullable)(XNetworking_fearlesswalletKotlinThrowable *))onCancellation __attribute__((swift_name("resumeCancellableWith(_:result:onCancellation:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MutexKt")))
@interface XNetworking_fearlesswalletMutexKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletMutex>)MutexLocked:(BOOL)locked __attribute__((swift_name("Mutex(locked:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withLock:(id<XNetworking_fearlesswalletMutex>)receiver owner:(id _Nullable)owner action:(id _Nullable (^)(void))action completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withLock(_:owner:action:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SemaphoreKt")))
@interface XNetworking_fearlesswalletSemaphoreKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletSemaphore>)SemaphorePermits:(int32_t)permits acquiredPermits:(int32_t)acquiredPermits __attribute__((swift_name("Semaphore(permits:acquiredPermits:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)withPermit:(id<XNetworking_fearlesswalletSemaphore>)receiver action:(id _Nullable (^)(void))action completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("withPermit(_:action:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EnumColumnAdapterKt")))
@interface XNetworking_fearlesswalletEnumColumnAdapterKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletEnumColumnAdapter<XNetworking_fearlesswalletKotlinEnum *> *)EnumColumnAdapter __attribute__((swift_name("EnumColumnAdapter()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QueryKt_")))
@interface XNetworking_fearlesswalletQueryKt_ : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletQuery<id> *)QueryIdentifier:(int32_t)identifier queries:(NSMutableArray<XNetworking_fearlesswalletQuery<id> *> *)queries driver:(id<XNetworking_fearlesswalletSqlDriver>)driver query:(NSString *)query mapper:(id (^)(id<XNetworking_fearlesswalletSqlCursor>))mapper __attribute__((swift_name("Query(identifier:queries:driver:query:mapper:)")));
+ (XNetworking_fearlesswalletQuery<id> *)QueryIdentifier:(int32_t)identifier queries:(NSMutableArray<XNetworking_fearlesswalletQuery<id> *> *)queries driver:(id<XNetworking_fearlesswalletSqlDriver>)driver fileName:(NSString *)fileName label:(NSString *)label query:(NSString *)query mapper:(id (^)(id<XNetworking_fearlesswalletSqlCursor>))mapper __attribute__((swift_name("Query(identifier:queries:driver:fileName:label:query:mapper:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqlDriverKt")))
@interface XNetworking_fearlesswalletSqlDriverKt : XNetworking_fearlesswalletBase
+ (void)migrateWithCallbacks:(id<XNetworking_fearlesswalletSqlDriverSchema>)receiver driver:(id<XNetworking_fearlesswalletSqlDriver>)driver oldVersion:(int32_t)oldVersion newVersion:(int32_t)newVersion callbacks:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletAfterVersion *> *)callbacks __attribute__((swift_name("migrateWithCallbacks(_:driver:oldVersion:newVersion:callbacks:)")));
+ (void)migrateWithCallbacks:(id<XNetworking_fearlesswalletSqlDriverSchema>)receiver driver:(id<XNetworking_fearlesswalletSqlDriver>)driver oldVersion:(int32_t)oldVersion newVersion:(int32_t)newVersion callbacks_:(XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletAfterVersionWithDriver *> *)callbacks __attribute__((swift_name("migrateWithCallbacks(_:driver:oldVersion:newVersion:callbacks_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CloseableKt_")))
@interface XNetworking_fearlesswalletCloseableKt_ : XNetworking_fearlesswalletBase
+ (id _Nullable)use:(id<XNetworking_fearlesswalletCloseable_> _Nullable)receiver body:(id _Nullable (^)(id<XNetworking_fearlesswalletCloseable_> _Nullable))body __attribute__((swift_name("use(_:body:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FunctionsKt")))
@interface XNetworking_fearlesswalletFunctionsKt : XNetworking_fearlesswalletBase
+ (NSMutableArray<XNetworking_fearlesswalletQuery<id> *> *)doCopyOnWriteList __attribute__((swift_name("doCopyOnWriteList()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DelegatesKt")))
@interface XNetworking_fearlesswalletDelegatesKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)boolean:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key defaultValue:(BOOL)defaultValue __attribute__((swift_name("boolean(_:key:defaultValue:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)double:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key defaultValue:(double)defaultValue __attribute__((swift_name("double(_:key:defaultValue:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)float:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key defaultValue:(float)defaultValue __attribute__((swift_name("float(_:key:defaultValue:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)int:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key defaultValue:(int32_t)defaultValue __attribute__((swift_name("int(_:key:defaultValue:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)long:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key defaultValue:(int64_t)defaultValue __attribute__((swift_name("long(_:key:defaultValue:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)nullableBoolean:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key __attribute__((swift_name("nullableBoolean(_:key:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)nullableDouble:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key __attribute__((swift_name("nullableDouble(_:key:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)nullableFloat:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key __attribute__((swift_name("nullableFloat(_:key:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)nullableInt:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key __attribute__((swift_name("nullableInt(_:key:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)nullableLong:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key __attribute__((swift_name("nullableLong(_:key:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)nullableString:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key __attribute__((swift_name("nullableString(_:key:)")));
+ (id<XNetworking_fearlesswalletKotlinReadWriteProperty>)string:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString * _Nullable)key defaultValue:(NSString *)defaultValue __attribute__((swift_name("string(_:key:defaultValue:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OperatorsKt")))
@interface XNetworking_fearlesswalletOperatorsKt : XNetworking_fearlesswalletBase
+ (BOOL)contains:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key __attribute__((swift_name("contains(_:key:)")));
+ (id _Nullable)get:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key __attribute__((swift_name("get(_:key:)")));
+ (BOOL)get:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key defaultValue:(BOOL)defaultValue __attribute__((swift_name("get(_:key:defaultValue:)")));
+ (double)get:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key defaultValue_:(double)defaultValue __attribute__((swift_name("get(_:key:defaultValue_:)")));
+ (float)get:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key defaultValue__:(float)defaultValue __attribute__((swift_name("get(_:key:defaultValue__:)")));
+ (int32_t)get:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key defaultValue___:(int32_t)defaultValue __attribute__((swift_name("get(_:key:defaultValue___:)")));
+ (int64_t)get:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key defaultValue____:(int64_t)defaultValue __attribute__((swift_name("get(_:key:defaultValue____:)")));
+ (NSString *)get:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key defaultValue_____:(NSString *)defaultValue __attribute__((swift_name("get(_:key:defaultValue_____:)")));
+ (void)minusAssign:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key __attribute__((swift_name("minusAssign(_:key:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value:(id _Nullable)value __attribute__((swift_name("set(_:key:value:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value_:(BOOL)value __attribute__((swift_name("set(_:key:value_:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value__:(double)value __attribute__((swift_name("set(_:key:value__:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value___:(float)value __attribute__((swift_name("set(_:key:value___:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value____:(int32_t)value __attribute__((swift_name("set(_:key:value____:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value_____:(int64_t)value __attribute__((swift_name("set(_:key:value_____:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value______:(XNetworking_fearlesswalletKotlinNothing * _Nullable)value __attribute__((swift_name("set(_:key:value______:)")));
+ (void)set:(id<XNetworking_fearlesswalletSettings>)receiver key:(NSString *)key value_______:(NSString *)value __attribute__((swift_name("set(_:key:value_______:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FunctionsKt_")))
@interface XNetworking_fearlesswalletFunctionsKt_ : XNetworking_fearlesswalletBase
+ (NSMutableArray<id> *)frozenCopyOnWriteListCollection:(id _Nullable)collection __attribute__((swift_name("frozenCopyOnWriteList(collection:)")));
+ (XNetworking_fearlesswalletMutableDictionary<id, id> *)frozenHashMapInitialCapacity:(int32_t)initialCapacity loadFactor:(float)loadFactor __attribute__((swift_name("frozenHashMap(initialCapacity:loadFactor:)"))) __attribute__((deprecated("Replacing Atomic collections with isolated state collections (modele `stately-iso-collections`)")));
+ (XNetworking_fearlesswalletMutableSet<id> *)frozenHashSet __attribute__((swift_name("frozenHashSet()"))) __attribute__((deprecated("Replacing Atomic collections with isolated state collections (modele `stately-iso-collections`)")));
+ (NSMutableArray<id> *)frozenLinkedListStableIterator:(BOOL)stableIterator __attribute__((swift_name("frozenLinkedList(stableIterator:)"))) __attribute__((deprecated("Replacing Atomic collections with isolated state collections (modele `stately-iso-collections`)")));
+ (id<XNetworking_fearlesswalletLruCache>)frozenLruCacheMaxCacheSize:(int32_t)maxCacheSize onRemove:(void (^)(id<XNetworking_fearlesswalletKotlinMutableMapMutableEntry>))onRemove __attribute__((swift_name("frozenLruCache(maxCacheSize:onRemove:)")));
+ (NSArray<id> *)toList:(id<XNetworking_fearlesswalletKotlinIterator>)receiver __attribute__((swift_name("toList(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SharedCollectionsKt")))
@interface XNetworking_fearlesswalletSharedCollectionsKt : XNetworking_fearlesswalletBase
+ (NSMutableArray<id> *)sharedList __attribute__((swift_name("sharedList()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockKt")))
@interface XNetworking_fearlesswalletLockKt : XNetworking_fearlesswalletBase
+ (void)close:(NSRecursiveLock *)receiver __attribute__((swift_name("close(_:)")));
+ (id _Nullable)withLock:(NSRecursiveLock *)receiver block:(id _Nullable (^)(void))block __attribute__((swift_name("withLock(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersKt")))
@interface XNetworking_fearlesswalletSerializersKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializer()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKSerializer>)serializerKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<XNetworking_fearlesswalletKSerializer>> *)typeArgumentsSerializers isNullable:(BOOL)isNullable __attribute__((swift_name("serializer(kClass:typeArgumentsSerializers:isNullable:)")));
+ (id<XNetworking_fearlesswalletKSerializer>)serializerType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("serializer(type:)")));
+ (id<XNetworking_fearlesswalletKSerializer> _Nullable)serializerOrNullType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("serializerOrNull(type:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKSerializer>)serializer:(id<XNetworking_fearlesswalletKotlinKClass>)receiver __attribute__((swift_name("serializer(_:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKSerializer> _Nullable)serializerOrNull:(id<XNetworking_fearlesswalletKotlinKClass>)receiver __attribute__((swift_name("serializerOrNull(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialFormatKt")))
@interface XNetworking_fearlesswalletSerialFormatKt : XNetworking_fearlesswalletBase
+ (id _Nullable)decodeFromByteArray:(id<XNetworking_fearlesswalletBinaryFormat>)receiver bytes:(XNetworking_fearlesswalletKotlinByteArray *)bytes __attribute__((swift_name("decodeFromByteArray(_:bytes:)")));
+ (id _Nullable)decodeFromHexString:(id<XNetworking_fearlesswalletBinaryFormat>)receiver hex:(NSString *)hex __attribute__((swift_name("decodeFromHexString(_:hex:)")));
+ (id _Nullable)decodeFromHexString:(id<XNetworking_fearlesswalletBinaryFormat>)receiver deserializer:(id<XNetworking_fearlesswalletDeserializationStrategy>)deserializer hex:(NSString *)hex __attribute__((swift_name("decodeFromHexString(_:deserializer:hex:)")));
+ (id _Nullable)decodeFromString:(id<XNetworking_fearlesswalletStringFormat>)receiver string:(NSString *)string __attribute__((swift_name("decodeFromString(_:string:)")));
+ (XNetworking_fearlesswalletKotlinByteArray *)encodeToByteArray:(id<XNetworking_fearlesswalletBinaryFormat>)receiver value:(id _Nullable)value __attribute__((swift_name("encodeToByteArray(_:value:)")));
+ (NSString *)encodeToHexString:(id<XNetworking_fearlesswalletBinaryFormat>)receiver value:(id _Nullable)value __attribute__((swift_name("encodeToHexString(_:value:)")));
+ (NSString *)encodeToHexString:(id<XNetworking_fearlesswalletBinaryFormat>)receiver serializer:(id<XNetworking_fearlesswalletSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToHexString(_:serializer:value:)")));
+ (NSString *)encodeToString:(id<XNetworking_fearlesswalletStringFormat>)receiver value:(id _Nullable)value __attribute__((swift_name("encodeToString(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InlineClassDescriptorKt")))
@interface XNetworking_fearlesswalletInlineClassDescriptorKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)InlinePrimitiveDescriptorName:(NSString *)name primitiveSerializer:(id<XNetworking_fearlesswalletKSerializer>)primitiveSerializer __attribute__((swift_name("InlinePrimitiveDescriptor(name:primitiveSerializer:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PluginExceptionsKt")))
@interface XNetworking_fearlesswalletPluginExceptionsKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
+ (void)throwArrayMissingFieldExceptionSeenArray:(XNetworking_fearlesswalletKotlinIntArray *)seenArray goldenMaskArray:(XNetworking_fearlesswalletKotlinIntArray *)goldenMaskArray descriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("throwArrayMissingFieldException(seenArray:goldenMaskArray:descriptor:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
+ (void)throwMissingFieldExceptionSeen:(int32_t)seen goldenMask:(int32_t)goldenMask descriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor __attribute__((swift_name("throwMissingFieldException(seen:goldenMask:descriptor:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JsonInternalDependenciesKt")))
@interface XNetworking_fearlesswalletJsonInternalDependenciesKt : XNetworking_fearlesswalletBase

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
+ (NSSet<NSString *> *)jsonCachedSerialNames:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver __attribute__((swift_name("jsonCachedSerialNames(_:)"))) __attribute__((unavailable("Should not be used")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersModuleKt")))
@interface XNetworking_fearlesswalletSerializersModuleKt : XNetworking_fearlesswalletBase
@property (class, readonly) XNetworking_fearlesswalletSerializersModule *EmptySerializersModule __attribute__((swift_name("EmptySerializersModule"))) __attribute__((deprecated("Deprecated in the favour of 'EmptySerializersModule()'")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerializersModuleBuildersKt")))
@interface XNetworking_fearlesswalletSerializersModuleBuildersKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletSerializersModule *)EmptySerializersModule __attribute__((swift_name("EmptySerializersModule()")));
+ (XNetworking_fearlesswalletSerializersModule *)SerializersModuleBuilderAction:(void (^)(XNetworking_fearlesswalletSerializersModuleBuilder *))builderAction __attribute__((swift_name("SerializersModule(builderAction:)")));
+ (XNetworking_fearlesswalletSerializersModule *)serializersModuleOfKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass serializer:(id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializersModuleOf(kClass:serializer:)")));
+ (XNetworking_fearlesswalletSerializersModule *)serializersModuleOfSerializer:(id<XNetworking_fearlesswalletKSerializer>)serializer __attribute__((swift_name("serializersModuleOf(serializer:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContextAwareKt")))
@interface XNetworking_fearlesswalletContextAwareKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKotlinKClass> _Nullable)capturedKClass:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver __attribute__((swift_name("capturedKClass(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialDescriptorKt")))
@interface XNetworking_fearlesswalletSerialDescriptorKt : XNetworking_fearlesswalletBase
+ (id)elementDescriptors:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver __attribute__((swift_name("elementDescriptors(_:)")));
+ (id)elementNames:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver __attribute__((swift_name("elementNames(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SerialDescriptorsKt")))
@interface XNetworking_fearlesswalletSerialDescriptorsKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletSerialDescriptor>)nullable:(id<XNetworking_fearlesswalletSerialDescriptor>)receiver __attribute__((swift_name("nullable(_:)")));
+ (id<XNetworking_fearlesswalletSerialDescriptor>)PrimitiveSerialDescriptorSerialName:(NSString *)serialName kind:(XNetworking_fearlesswalletPrimitiveKind *)kind __attribute__((swift_name("PrimitiveSerialDescriptor(serialName:kind:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)SerialDescriptorSerialName:(NSString *)serialName original:(id<XNetworking_fearlesswalletSerialDescriptor>)original __attribute__((swift_name("SerialDescriptor(serialName:original:)")));
+ (id<XNetworking_fearlesswalletSerialDescriptor>)buildClassSerialDescriptorSerialName:(NSString *)serialName typeParameters:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletSerialDescriptor>> *)typeParameters builderAction:(void (^)(XNetworking_fearlesswalletClassSerialDescriptorBuilder *))builderAction __attribute__((swift_name("buildClassSerialDescriptor(serialName:typeParameters:builderAction:)")));

/**
 * @note annotations
 *   kotlinx.serialization.InternalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)buildSerialDescriptorSerialName:(NSString *)serialName kind:(XNetworking_fearlesswalletSerialKind *)kind typeParameters:(XNetworking_fearlesswalletKotlinArray<id<XNetworking_fearlesswalletSerialDescriptor>> *)typeParameters builder:(void (^)(XNetworking_fearlesswalletClassSerialDescriptorBuilder *))builder __attribute__((swift_name("buildSerialDescriptor(serialName:kind:typeParameters:builder:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)listSerialDescriptor __attribute__((swift_name("listSerialDescriptor()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)listSerialDescriptorElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)elementDescriptor __attribute__((swift_name("listSerialDescriptor(elementDescriptor:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)mapSerialDescriptor __attribute__((swift_name("mapSerialDescriptor()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)mapSerialDescriptorKeyDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)keyDescriptor valueDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)valueDescriptor __attribute__((swift_name("mapSerialDescriptor(keyDescriptor:valueDescriptor:)")));
+ (id<XNetworking_fearlesswalletSerialDescriptor>)serialDescriptor __attribute__((swift_name("serialDescriptor()")));
+ (id<XNetworking_fearlesswalletSerialDescriptor>)serialDescriptorType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("serialDescriptor(type:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)setSerialDescriptor __attribute__((swift_name("setSerialDescriptor()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletSerialDescriptor>)setSerialDescriptorElementDescriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)elementDescriptor __attribute__((swift_name("setSerialDescriptor(elementDescriptor:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuiltinSerializersKt")))
@interface XNetworking_fearlesswalletBuiltinSerializersKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletKSerializer>)nullable:(id<XNetworking_fearlesswalletKSerializer>)receiver __attribute__((swift_name("nullable(_:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKSerializer>)ArraySerializerKClass:(id<XNetworking_fearlesswalletKotlinKClass>)kClass elementSerializer:(id<XNetworking_fearlesswalletKSerializer>)elementSerializer __attribute__((swift_name("ArraySerializer(kClass:elementSerializer:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKSerializer>)ArraySerializerElementSerializer:(id<XNetworking_fearlesswalletKSerializer>)elementSerializer __attribute__((swift_name("ArraySerializer(elementSerializer:)")));
+ (id<XNetworking_fearlesswalletKSerializer>)BooleanArraySerializer __attribute__((swift_name("BooleanArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)ByteArraySerializer __attribute__((swift_name("ByteArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)CharArraySerializer __attribute__((swift_name("CharArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)DoubleArraySerializer __attribute__((swift_name("DoubleArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)FloatArraySerializer __attribute__((swift_name("FloatArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)IntArraySerializer __attribute__((swift_name("IntArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)ListSerializerElementSerializer:(id<XNetworking_fearlesswalletKSerializer>)elementSerializer __attribute__((swift_name("ListSerializer(elementSerializer:)")));
+ (id<XNetworking_fearlesswalletKSerializer>)LongArraySerializer __attribute__((swift_name("LongArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)MapEntrySerializerKeySerializer:(id<XNetworking_fearlesswalletKSerializer>)keySerializer valueSerializer:(id<XNetworking_fearlesswalletKSerializer>)valueSerializer __attribute__((swift_name("MapEntrySerializer(keySerializer:valueSerializer:)")));
+ (id<XNetworking_fearlesswalletKSerializer>)MapSerializerKeySerializer:(id<XNetworking_fearlesswalletKSerializer>)keySerializer valueSerializer:(id<XNetworking_fearlesswalletKSerializer>)valueSerializer __attribute__((swift_name("MapSerializer(keySerializer:valueSerializer:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
+ (id<XNetworking_fearlesswalletKSerializer>)NothingSerializer __attribute__((swift_name("NothingSerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)PairSerializerKeySerializer:(id<XNetworking_fearlesswalletKSerializer>)keySerializer valueSerializer:(id<XNetworking_fearlesswalletKSerializer>)valueSerializer __attribute__((swift_name("PairSerializer(keySerializer:valueSerializer:)")));
+ (id<XNetworking_fearlesswalletKSerializer>)SetSerializerElementSerializer:(id<XNetworking_fearlesswalletKSerializer>)elementSerializer __attribute__((swift_name("SetSerializer(elementSerializer:)")));
+ (id<XNetworking_fearlesswalletKSerializer>)ShortArraySerializer __attribute__((swift_name("ShortArraySerializer()")));
+ (id<XNetworking_fearlesswalletKSerializer>)TripleSerializerASerializer:(id<XNetworking_fearlesswalletKSerializer>)aSerializer bSerializer:(id<XNetworking_fearlesswalletKSerializer>)bSerializer cSerializer:(id<XNetworking_fearlesswalletKSerializer>)cSerializer __attribute__((swift_name("TripleSerializer(aSerializer:bSerializer:cSerializer:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
 *   kotlin.ExperimentalUnsignedTypes
*/
+ (id<XNetworking_fearlesswalletKSerializer>)UByteArraySerializer __attribute__((swift_name("UByteArraySerializer()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
 *   kotlin.ExperimentalUnsignedTypes
*/
+ (id<XNetworking_fearlesswalletKSerializer>)UIntArraySerializer __attribute__((swift_name("UIntArraySerializer()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
 *   kotlin.ExperimentalUnsignedTypes
*/
+ (id<XNetworking_fearlesswalletKSerializer>)ULongArraySerializer __attribute__((swift_name("ULongArraySerializer()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
 *   kotlin.ExperimentalUnsignedTypes
*/
+ (id<XNetworking_fearlesswalletKSerializer>)UShortArraySerializer __attribute__((swift_name("UShortArraySerializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DecodingKt")))
@interface XNetworking_fearlesswalletDecodingKt : XNetworking_fearlesswalletBase
+ (id _Nullable)decodeStructure:(id<XNetworking_fearlesswalletDecoder>)receiver descriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor block:(id _Nullable (^)(id<XNetworking_fearlesswalletCompositeDecoder>))block __attribute__((swift_name("decodeStructure(_:descriptor:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EncodingKt")))
@interface XNetworking_fearlesswalletEncodingKt : XNetworking_fearlesswalletBase
+ (void)encodeCollection:(id<XNetworking_fearlesswalletEncoder_>)receiver descriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor collectionSize:(int32_t)collectionSize block:(void (^)(id<XNetworking_fearlesswalletCompositeEncoder>))block __attribute__((swift_name("encodeCollection(_:descriptor:collectionSize:block:)")));
+ (void)encodeCollection:(id<XNetworking_fearlesswalletEncoder_>)receiver descriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor collection:(id)collection block:(void (^)(id<XNetworking_fearlesswalletCompositeEncoder>, XNetworking_fearlesswalletInt *, id _Nullable))block __attribute__((swift_name("encodeCollection(_:descriptor:collection:block:)")));
+ (void)encodeStructure:(id<XNetworking_fearlesswalletEncoder_>)receiver descriptor:(id<XNetworking_fearlesswalletSerialDescriptor>)descriptor block:(void (^)(id<XNetworking_fearlesswalletCompositeEncoder>))block __attribute__((swift_name("encodeStructure(_:descriptor:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TraceKt")))
@interface XNetworking_fearlesswalletTraceKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletTraceBase *)TraceSize:(int32_t)size format:(XNetworking_fearlesswalletTraceFormat *)format __attribute__((swift_name("Trace(size:format:)")));
@property (class, readonly) XNetworking_fearlesswalletTraceFormat *traceFormatDefault __attribute__((swift_name("traceFormatDefault")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TraceFormatKt")))
@interface XNetworking_fearlesswalletTraceFormatKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletTraceFormat *)TraceFormatFormat:(NSString *(^)(XNetworking_fearlesswalletInt *, id))format __attribute__((swift_name("TraceFormat(format:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicFUKt")))
@interface XNetworking_fearlesswalletAtomicFUKt : XNetworking_fearlesswalletBase
+ (id)atomicInitial:(id _Nullable)initial __attribute__((swift_name("atomic(initial:)")));
+ (id)atomicInitial:(id _Nullable)initial trace:(XNetworking_fearlesswalletTraceBase *)trace __attribute__((swift_name("atomic(initial:trace:)")));
+ (id)atomicInitial_:(BOOL)initial __attribute__((swift_name("atomic(initial_:)")));
+ (id)atomicInitial:(BOOL)initial trace_:(XNetworking_fearlesswalletTraceBase *)trace __attribute__((swift_name("atomic(initial:trace_:)")));
+ (id)atomicInitial__:(int32_t)initial __attribute__((swift_name("atomic(initial__:)")));
+ (id)atomicInitial:(int32_t)initial trace__:(XNetworking_fearlesswalletTraceBase *)trace __attribute__((swift_name("atomic(initial:trace__:)")));
+ (id)atomicInitial___:(int64_t)initial __attribute__((swift_name("atomic(initial___:)")));
+ (id)atomicInitial:(int64_t)initial trace___:(XNetworking_fearlesswalletTraceBase *)trace __attribute__((swift_name("atomic(initial:trace___:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AtomicFU_commonKt")))
@interface XNetworking_fearlesswalletAtomicFU_commonKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletAtomicArray<id> *)atomicArrayOfNullsSize:(int32_t)size __attribute__((swift_name("atomicArrayOfNulls(size:)")));
+ (BOOL)getAndUpdate:(id)receiver function:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletBoolean *))function __attribute__((swift_name("getAndUpdate(_:function:)")));
+ (int32_t)getAndUpdate:(id)receiver function_:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletInt *))function __attribute__((swift_name("getAndUpdate(_:function_:)")));
+ (int64_t)getAndUpdate:(id)receiver function__:(XNetworking_fearlesswalletLong *(^)(XNetworking_fearlesswalletLong *))function __attribute__((swift_name("getAndUpdate(_:function__:)")));
+ (id _Nullable)getAndUpdate:(id)receiver function___:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("getAndUpdate(_:function___:)")));
+ (void)loop:(id)receiver action:(void (^)(XNetworking_fearlesswalletBoolean *))action __attribute__((swift_name("loop(_:action:)")));
+ (void)loop:(id)receiver action_:(void (^)(XNetworking_fearlesswalletInt *))action __attribute__((swift_name("loop(_:action_:)")));
+ (void)loop:(id)receiver action__:(void (^)(XNetworking_fearlesswalletLong *))action __attribute__((swift_name("loop(_:action__:)")));
+ (void)loop:(id)receiver action___:(void (^)(id _Nullable))action __attribute__((swift_name("loop(_:action___:)")));
+ (void)update:(id)receiver function:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletBoolean *))function __attribute__((swift_name("update(_:function:)")));
+ (void)update:(id)receiver function_:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletInt *))function __attribute__((swift_name("update(_:function_:)")));
+ (void)update:(id)receiver function__:(XNetworking_fearlesswalletLong *(^)(XNetworking_fearlesswalletLong *))function __attribute__((swift_name("update(_:function__:)")));
+ (void)update:(id)receiver function___:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("update(_:function___:)")));
+ (BOOL)updateAndGet:(id)receiver function:(XNetworking_fearlesswalletBoolean *(^)(XNetworking_fearlesswalletBoolean *))function __attribute__((swift_name("updateAndGet(_:function:)")));
+ (int32_t)updateAndGet:(id)receiver function_:(XNetworking_fearlesswalletInt *(^)(XNetworking_fearlesswalletInt *))function __attribute__((swift_name("updateAndGet(_:function_:)")));
+ (int64_t)updateAndGet:(id)receiver function__:(XNetworking_fearlesswalletLong *(^)(XNetworking_fearlesswalletLong *))function __attribute__((swift_name("updateAndGet(_:function__:)")));
+ (id _Nullable)updateAndGet:(id)receiver function___:(id _Nullable (^)(id _Nullable))function __attribute__((swift_name("updateAndGet(_:function___:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SynchronizedKt_")))
@interface XNetworking_fearlesswalletSynchronizedKt_ : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletSynchronizedObject *)reentrantLock __attribute__((swift_name("reentrantLock()")));
+ (id _Nullable)synchronizedLock:(XNetworking_fearlesswalletSynchronizedObject *)lock block:(id _Nullable (^)(void))block __attribute__((swift_name("synchronized(lock:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HelpersKt")))
@interface XNetworking_fearlesswalletHelpersKt : XNetworking_fearlesswalletBase
+ (BOOL)isFrozen:(id _Nullable)receiver __attribute__((swift_name("isFrozen(_:)")));
+ (void)ensureNeverFrozen:(id)receiver __attribute__((swift_name("ensureNeverFrozen(_:)")));
+ (id _Nullable)freeze:(id _Nullable)receiver __attribute__((swift_name("freeze(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseConnectionKt")))
@interface XNetworking_fearlesswalletDatabaseConnectionKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletJournalMode *)journalMode:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver __attribute__((swift_name("journalMode(_:)")));
+ (int32_t)getVersion:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver __attribute__((swift_name("getVersion(_:)")));
+ (int64_t)longForQuery:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver sql:(NSString *)sql __attribute__((swift_name("longForQuery(_:sql:)")));
+ (void)resetCipherKey:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver oldKey:(NSString *)oldKey newKey:(NSString *)newKey __attribute__((swift_name("resetCipherKey(_:oldKey:newKey:)")));
+ (void)setCipherKey:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver cipherKey:(NSString *)cipherKey __attribute__((swift_name("setCipherKey(_:cipherKey:)")));
+ (void)setVersion:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver version:(int32_t)version __attribute__((swift_name("setVersion(_:version:)")));
+ (NSString *)stringForQuery:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver sql:(NSString *)sql __attribute__((swift_name("stringForQuery(_:sql:)")));
+ (void)updateForeignKeyConstraints:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver enabled:(BOOL)enabled __attribute__((swift_name("updateForeignKeyConstraints(_:enabled:)")));
+ (XNetworking_fearlesswalletJournalMode *)updateJournalMode:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver value:(XNetworking_fearlesswalletJournalMode *)value __attribute__((swift_name("updateJournalMode(_:value:)")));
+ (void)updateRecursiveTriggers:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver enabled:(BOOL)enabled __attribute__((swift_name("updateRecursiveTriggers(_:enabled:)")));
+ (void)updateSynchronousFlag:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver flag:(XNetworking_fearlesswalletSynchronousFlag *)flag __attribute__((swift_name("updateSynchronousFlag(_:flag:)")));
+ (id _Nullable)withStatement:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver sql:(NSString *)sql proc:(id _Nullable (^)(id<XNetworking_fearlesswalletStatement>))proc __attribute__((swift_name("withStatement(_:sql:proc:)")));
+ (id _Nullable)withTransaction:(id<XNetworking_fearlesswalletDatabaseConnection>)receiver proc:(id _Nullable (^)(id<XNetworking_fearlesswalletDatabaseConnection>))proc __attribute__((swift_name("withTransaction(_:proc:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CreateDatabaseManagerKt")))
@interface XNetworking_fearlesswalletCreateDatabaseManagerKt : XNetworking_fearlesswalletBase
+ (id<XNetworking_fearlesswalletDatabaseManager>)createDatabaseManagerConfiguration:(XNetworking_fearlesswalletDatabaseConfiguration *)configuration __attribute__((swift_name("createDatabaseManager(configuration:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatementKt")))
@interface XNetworking_fearlesswalletStatementKt : XNetworking_fearlesswalletBase
+ (void)bindBlob:(id<XNetworking_fearlesswalletStatement>)receiver index:(int32_t)index value:(XNetworking_fearlesswalletKotlinByteArray * _Nullable)value __attribute__((swift_name("bindBlob(_:index:value:)")));
+ (void)bindDouble:(id<XNetworking_fearlesswalletStatement>)receiver index:(int32_t)index value:(XNetworking_fearlesswalletDouble * _Nullable)value __attribute__((swift_name("bindDouble(_:index:value:)")));
+ (void)bindLong:(id<XNetworking_fearlesswalletStatement>)receiver index:(int32_t)index value:(XNetworking_fearlesswalletLong * _Nullable)value __attribute__((swift_name("bindLong(_:index:value:)")));
+ (void)bindString:(id<XNetworking_fearlesswalletStatement>)receiver index:(int32_t)index value:(NSString * _Nullable)value __attribute__((swift_name("bindString(_:index:value:)")));
+ (int64_t)longForQuery:(id<XNetworking_fearlesswalletStatement>)receiver __attribute__((swift_name("longForQuery(_:)")));
+ (NSString *)stringForQuery:(id<XNetworking_fearlesswalletStatement>)receiver __attribute__((swift_name("stringForQuery(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CursorKt")))
@interface XNetworking_fearlesswalletCursorKt : XNetworking_fearlesswalletBase
+ (int64_t)forLong:(id<XNetworking_fearlesswalletCursor>)receiver __attribute__((swift_name("forLong(_:)")));
+ (XNetworking_fearlesswalletKotlinByteArray * _Nullable)getBytesOrNull:(id<XNetworking_fearlesswalletCursor>)receiver index:(int32_t)index __attribute__((swift_name("getBytesOrNull(_:index:)")));
+ (int32_t)getColumnIndexOrThrow:(id<XNetworking_fearlesswalletCursor>)receiver name:(NSString *)name __attribute__((swift_name("getColumnIndexOrThrow(_:name:)")));
+ (XNetworking_fearlesswalletDouble * _Nullable)getDoubleOrNull:(id<XNetworking_fearlesswalletCursor>)receiver index:(int32_t)index __attribute__((swift_name("getDoubleOrNull(_:index:)")));
+ (XNetworking_fearlesswalletLong * _Nullable)getLongOrNull:(id<XNetworking_fearlesswalletCursor>)receiver index:(int32_t)index __attribute__((swift_name("getLongOrNull(_:index:)")));
+ (NSString * _Nullable)getStringOrNull:(id<XNetworking_fearlesswalletCursor>)receiver index:(int32_t)index __attribute__((swift_name("getStringOrNull(_:index:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DatabaseManagerKt")))
@interface XNetworking_fearlesswalletDatabaseManagerKt : XNetworking_fearlesswalletBase
+ (id _Nullable)withConnection:(id<XNetworking_fearlesswalletDatabaseManager>)receiver block:(id _Nullable (^)(id<XNetworking_fearlesswalletDatabaseConnection>))block __attribute__((swift_name("withConnection(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UsleepKt")))
@interface XNetworking_fearlesswalletUsleepKt : XNetworking_fearlesswalletBase
+ (void)usleepSeconds:(uint32_t)seconds __attribute__((swift_name("usleep(seconds:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockKt_")))
@interface XNetworking_fearlesswalletLockKt_ : XNetworking_fearlesswalletBase
+ (void)close:(NSRecursiveLock *)receiver __attribute__((swift_name("close(_:)")));
+ (id _Nullable)withLock:(NSRecursiveLock *)receiver block:(id _Nullable (^)(void))block __attribute__((swift_name("withLock(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlatformKt_")))
@interface XNetworking_fearlesswalletPlatformKt_ : XNetworking_fearlesswalletBase
+ (NSString *)bytesToStringBv:(void *)bv __attribute__((swift_name("bytesToString(bv:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SqliteDatabaseKt")))
@interface XNetworking_fearlesswalletSqliteDatabaseKt : XNetworking_fearlesswalletBase
+ (XNetworking_fearlesswalletSqliteDatabase *)dbOpenPath:(NSString *)path openFlags:(NSArray<XNetworking_fearlesswalletOpenFlags *> *)openFlags label:(NSString *)label enableTrace:(BOOL)enableTrace enableProfile:(BOOL)enableProfile lookasideSlotSize:(int32_t)lookasideSlotSize lookasideSlotCount:(int32_t)lookasideSlotCount busyTimeout:(int32_t)busyTimeout logging:(id<XNetworking_fearlesswalletLogger__>)logging verboseDataCalls:(BOOL)verboseDataCalls __attribute__((swift_name("dbOpen(path:openFlags:label:enableTrace:enableProfile:lookasideSlotSize:lookasideSlotCount:busyTimeout:logging:verboseDataCalls:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LoggerKt_")))
@interface XNetworking_fearlesswalletLoggerKt_ : XNetworking_fearlesswalletBase
+ (void)e:(id<XNetworking_fearlesswalletLogger__>)receiver exception:(XNetworking_fearlesswalletKotlinThrowable * _Nullable)exception block:(NSString *(^)(void))block __attribute__((swift_name("e(_:exception:block:)")));
+ (void)v:(id<XNetworking_fearlesswalletLogger__>)receiver block:(NSString *(^)(void))block __attribute__((swift_name("v(_:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinPair")))
@interface XNetworking_fearlesswalletKotlinPair<__covariant A, __covariant B> : XNetworking_fearlesswalletBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("init(first:second:)"))) __attribute__((objc_designated_initializer));
- (XNetworking_fearlesswalletKotlinPair<A, B> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("doCopy(first:second:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@end

__attribute__((swift_name("KotlinKDeclarationContainer")))
@protocol XNetworking_fearlesswalletKotlinKDeclarationContainer
@required
@end

__attribute__((swift_name("KotlinKAnnotatedElement")))
@protocol XNetworking_fearlesswalletKotlinKAnnotatedElement
@required
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((swift_name("KotlinKClassifier")))
@protocol XNetworking_fearlesswalletKotlinKClassifier
@required
@end

__attribute__((swift_name("KotlinKClass")))
@protocol XNetworking_fearlesswalletKotlinKClass <XNetworking_fearlesswalletKotlinKDeclarationContainer, XNetworking_fearlesswalletKotlinKAnnotatedElement, XNetworking_fearlesswalletKotlinKClassifier>
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
- (BOOL)isInstanceValue:(id _Nullable)value __attribute__((swift_name("isInstance(value:)")));
@property (readonly) NSString * _Nullable qualifiedName __attribute__((swift_name("qualifiedName")));
@property (readonly) NSString * _Nullable simpleName __attribute__((swift_name("simpleName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinEnumCompanion")))
@interface XNetworking_fearlesswalletKotlinEnumCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinEnumCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("KotlinFunction")))
@protocol XNetworking_fearlesswalletKotlinFunction
@required
@end

__attribute__((swift_name("KotlinSuspendFunction2")))
@protocol XNetworking_fearlesswalletKotlinSuspendFunction2 <XNetworking_fearlesswalletKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:completionHandler:)")));
@end

__attribute__((swift_name("KotlinSuspendFunction1")))
@protocol XNetworking_fearlesswalletKotlinSuspendFunction1 <XNetworking_fearlesswalletKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:completionHandler:)")));
@end

__attribute__((swift_name("KotlinIterator")))
@protocol XNetworking_fearlesswalletKotlinIterator
@required
- (BOOL)hasNext __attribute__((swift_name("hasNext()")));
- (id _Nullable)next_ __attribute__((swift_name("next()")));
@end

__attribute__((swift_name("KotlinSuspendFunction3")))
@protocol XNetworking_fearlesswalletKotlinSuspendFunction3 <XNetworking_fearlesswalletKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:completionHandler:)")));
@end

__attribute__((swift_name("KotlinSuspendFunction4")))
@protocol XNetworking_fearlesswalletKotlinSuspendFunction4 <XNetworking_fearlesswalletKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:completionHandler:)")));
@end

__attribute__((swift_name("KotlinSequence")))
@protocol XNetworking_fearlesswalletKotlinSequence
@required
- (id<XNetworking_fearlesswalletKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinNothing")))
@interface XNetworking_fearlesswalletKotlinNothing : XNetworking_fearlesswalletBase
@end

__attribute__((swift_name("KotlinKType")))
@protocol XNetworking_fearlesswalletKotlinKType
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) NSArray<XNetworking_fearlesswalletKotlinKTypeProjection *> *arguments __attribute__((swift_name("arguments")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) id<XNetworking_fearlesswalletKotlinKClassifier> _Nullable classifier __attribute__((swift_name("classifier")));
@property (readonly) BOOL isMarkedNullable __attribute__((swift_name("isMarkedNullable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinCharArray")))
@interface XNetworking_fearlesswalletKotlinCharArray : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(id (^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (unichar)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (XNetworking_fearlesswalletKotlinCharIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(unichar)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("KotlinSuspendFunction0")))
@protocol XNetworking_fearlesswalletKotlinSuspendFunction0 <XNetworking_fearlesswalletKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(completionHandler:)")));
@end


/**
 * @note annotations
 *   kotlin.DeprecatedSinceKotlin(warningSince="1.9")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinAtomicReference")))
@interface XNetworking_fearlesswalletKotlinAtomicReference<T> : XNetworking_fearlesswalletBase
- (instancetype)initWithValue:(T _Nullable)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Use kotlin.concurrent.AtomicReference instead.")));
- (BOOL)compareAndSetExpected:(T _Nullable)expected newValue:(T _Nullable)newValue __attribute__((swift_name("compareAndSet(expected:newValue:)")));
- (T _Nullable)compareAndSwapExpected:(T _Nullable)expected newValue:(T _Nullable)newValue __attribute__((swift_name("compareAndSwap(expected:newValue:)")));
- (T _Nullable)getAndSetNewValue:(T _Nullable)newValue __attribute__((swift_name("getAndSet(newValue:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property T _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AbstractSharedLinkedListNode")))
@interface XNetworking_fearlesswalletAbstractSharedLinkedListNode<T> : XNetworking_fearlesswalletBase
- (instancetype)initWithList:(NSMutableArray<id> *)list __attribute__((swift_name("init(list:)"))) __attribute__((objc_designated_initializer));
- (BOOL)addT:(T _Nullable)t __attribute__((swift_name("add(t:)")));
- (void)readd __attribute__((swift_name("readd()")));
- (void)removePermanent:(BOOL)permanent __attribute__((swift_name("remove(permanent:)")));
- (void)setT:(T _Nullable)t __attribute__((swift_name("set(t:)")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@property (readonly) NSMutableArray<id> *list __attribute__((swift_name("list")));
@property (readonly) XNetworking_fearlesswalletAtomicReference<XNetworking_fearlesswalletAbstractSharedLinkedListNode<T> *> *next __attribute__((swift_name("next")));
@property (readonly) T _Nullable nodeValue __attribute__((swift_name("nodeValue")));
@property (readonly) XNetworking_fearlesswalletAtomicReference<XNetworking_fearlesswalletAbstractSharedLinkedListNode<T> *> *prev __attribute__((swift_name("prev")));
@end

__attribute__((swift_name("KotlinAnnotation")))
@protocol XNetworking_fearlesswalletKotlinAnnotation
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongProgression.Companion")))
@interface XNetworking_fearlesswalletKotlinLongProgressionCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinLongProgressionCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletKotlinLongProgression *)fromClosedRangeRangeStart:(int64_t)rangeStart rangeEnd:(int64_t)rangeEnd step:(int64_t)step __attribute__((swift_name("fromClosedRange(rangeStart:rangeEnd:step:)")));
@end

__attribute__((swift_name("KotlinLongIterator")))
@interface XNetworking_fearlesswalletKotlinLongIterator : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletLong *)next_ __attribute__((swift_name("next()")));
- (int64_t)nextLong __attribute__((swift_name("nextLong()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinLongRange.Companion")))
@interface XNetworking_fearlesswalletKotlinLongRangeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinLongRangeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletKotlinLongRange *EMPTY __attribute__((swift_name("EMPTY")));
@end

__attribute__((swift_name("KotlinByteIterator")))
@interface XNetworking_fearlesswalletKotlinByteIterator : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletByte *)next_ __attribute__((swift_name("next()")));
- (int8_t)nextByte __attribute__((swift_name("nextByte()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinDoubleArray")))
@interface XNetworking_fearlesswalletKotlinDoubleArray : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(XNetworking_fearlesswalletDouble *(^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (double)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (XNetworking_fearlesswalletKotlinDoubleIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(double)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinFloatArray")))
@interface XNetworking_fearlesswalletKotlinFloatArray : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(XNetworking_fearlesswalletFloat *(^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (float)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (XNetworking_fearlesswalletKotlinFloatIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(float)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinShortArray")))
@interface XNetworking_fearlesswalletKotlinShortArray : XNetworking_fearlesswalletBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(XNetworking_fearlesswalletShort *(^)(XNetworking_fearlesswalletInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int16_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (XNetworking_fearlesswalletKotlinShortIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int16_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("KotlinIntIterator")))
@interface XNetworking_fearlesswalletKotlinIntIterator : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletInt *)next_ __attribute__((swift_name("next()")));
- (int32_t)nextInt __attribute__((swift_name("nextInt()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntProgression.Companion")))
@interface XNetworking_fearlesswalletKotlinIntProgressionCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinIntProgressionCompanion *shared __attribute__((swift_name("shared")));
- (XNetworking_fearlesswalletKotlinIntProgression *)fromClosedRangeRangeStart:(int32_t)rangeStart rangeEnd:(int32_t)rangeEnd step:(int32_t)step __attribute__((swift_name("fromClosedRange(rangeStart:rangeEnd:step:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntRange.Companion")))
@interface XNetworking_fearlesswalletKotlinIntRangeCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinIntRangeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) XNetworking_fearlesswalletKotlinIntRange *EMPTY __attribute__((swift_name("EMPTY")));
@end

__attribute__((swift_name("KotlinKCallable")))
@protocol XNetworking_fearlesswalletKotlinKCallable <XNetworking_fearlesswalletKotlinKAnnotatedElement>
@required
@property (readonly) NSString *name_ __attribute__((swift_name("name_")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKType> returnType __attribute__((swift_name("returnType")));
@end

__attribute__((swift_name("KotlinKProperty")))
@protocol XNetworking_fearlesswalletKotlinKProperty <XNetworking_fearlesswalletKotlinKCallable>
@required
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.6")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinDurationUnit")))
@interface XNetworking_fearlesswalletKotlinDurationUnit : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletKotlinDurationUnit *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletKotlinDurationUnit *nanoseconds __attribute__((swift_name("nanoseconds")));
@property (class, readonly) XNetworking_fearlesswalletKotlinDurationUnit *microseconds __attribute__((swift_name("microseconds")));
@property (class, readonly) XNetworking_fearlesswalletKotlinDurationUnit *milliseconds __attribute__((swift_name("milliseconds")));
@property (class, readonly) XNetworking_fearlesswalletKotlinDurationUnit *seconds __attribute__((swift_name("seconds")));
@property (class, readonly) XNetworking_fearlesswalletKotlinDurationUnit *minutes __attribute__((swift_name("minutes")));
@property (class, readonly) XNetworking_fearlesswalletKotlinDurationUnit *hours __attribute__((swift_name("hours")));
@property (class, readonly) XNetworking_fearlesswalletKotlinDurationUnit *days __attribute__((swift_name("days")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletKotlinDurationUnit *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<XNetworking_fearlesswalletKotlinDurationUnit *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("KotlinNativePlacement")))
@protocol XNetworking_fearlesswalletKotlinNativePlacement
@required
- (void *)doAllocSize:(int32_t)size align:(int32_t)align __attribute__((swift_name("doAlloc(size:align:)")));
- (void *)doAllocSize:(int64_t)size align_:(int32_t)align __attribute__((swift_name("doAlloc(size:align_:)")));
@end

__attribute__((swift_name("KotlinNativeFreeablePlacement")))
@protocol XNetworking_fearlesswalletKotlinNativeFreeablePlacement <XNetworking_fearlesswalletKotlinNativePlacement>
@required
- (void)freeMem:(void * _Nullable)mem __attribute__((swift_name("free(mem:)")));
@end

__attribute__((swift_name("KotlinReadOnlyProperty")))
@protocol XNetworking_fearlesswalletKotlinReadOnlyProperty
@required
- (id _Nullable)getValueThisRef:(id _Nullable)thisRef property:(id<XNetworking_fearlesswalletKotlinKProperty>)property __attribute__((swift_name("getValue(thisRef:property:)")));
@end

__attribute__((swift_name("KotlinReadWriteProperty")))
@protocol XNetworking_fearlesswalletKotlinReadWriteProperty <XNetworking_fearlesswalletKotlinReadOnlyProperty>
@required
- (void)setValueThisRef:(id _Nullable)thisRef property:(id<XNetworking_fearlesswalletKotlinKProperty>)property value:(id _Nullable)value __attribute__((swift_name("setValue(thisRef:property:value:)")));
@end

__attribute__((swift_name("KotlinSuspendFunction5")))
@protocol XNetworking_fearlesswalletKotlinSuspendFunction5 <XNetworking_fearlesswalletKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:completionHandler:)")));
@end

__attribute__((swift_name("KotlinSuspendFunction6")))
@protocol XNetworking_fearlesswalletKotlinSuspendFunction6 <XNetworking_fearlesswalletKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 p3:(id _Nullable)p3 p4:(id _Nullable)p4 p5:(id _Nullable)p5 p6:(id _Nullable)p6 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:p3:p4:p5:p6:completionHandler:)")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection")))
@interface XNetworking_fearlesswalletKotlinKTypeProjection : XNetworking_fearlesswalletBase
- (instancetype)initWithVariance:(XNetworking_fearlesswalletKotlinKVariance * _Nullable)variance type:(id<XNetworking_fearlesswalletKotlinKType> _Nullable)type __attribute__((swift_name("init(variance:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) XNetworking_fearlesswalletKotlinKTypeProjectionCompanion *companion __attribute__((swift_name("companion")));
- (XNetworking_fearlesswalletKotlinKTypeProjection *)doCopyVariance:(XNetworking_fearlesswalletKotlinKVariance * _Nullable)variance type:(id<XNetworking_fearlesswalletKotlinKType> _Nullable)type __attribute__((swift_name("doCopy(variance:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<XNetworking_fearlesswalletKotlinKType> _Nullable type __attribute__((swift_name("type")));
@property (readonly) XNetworking_fearlesswalletKotlinKVariance * _Nullable variance __attribute__((swift_name("variance")));
@end

__attribute__((swift_name("KotlinCharIterator")))
@interface XNetworking_fearlesswalletKotlinCharIterator : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id)next_ __attribute__((swift_name("next()")));
- (unichar)nextChar __attribute__((swift_name("nextChar()")));
@end

__attribute__((swift_name("KotlinDoubleIterator")))
@interface XNetworking_fearlesswalletKotlinDoubleIterator : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletDouble *)next_ __attribute__((swift_name("next()")));
- (double)nextDouble __attribute__((swift_name("nextDouble()")));
@end

__attribute__((swift_name("KotlinFloatIterator")))
@interface XNetworking_fearlesswalletKotlinFloatIterator : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletFloat *)next_ __attribute__((swift_name("next()")));
- (float)nextFloat __attribute__((swift_name("nextFloat()")));
@end

__attribute__((swift_name("KotlinShortIterator")))
@interface XNetworking_fearlesswalletKotlinShortIterator : XNetworking_fearlesswalletBase <XNetworking_fearlesswalletKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (XNetworking_fearlesswalletShort *)next_ __attribute__((swift_name("next()")));
- (int16_t)nextShort __attribute__((swift_name("nextShort()")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKVariance")))
@interface XNetworking_fearlesswalletKotlinKVariance : XNetworking_fearlesswalletKotlinEnum<XNetworking_fearlesswalletKotlinKVariance *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) XNetworking_fearlesswalletKotlinKVariance *invariant __attribute__((swift_name("invariant")));
@property (class, readonly) XNetworking_fearlesswalletKotlinKVariance *in __attribute__((swift_name("in")));
@property (class, readonly) XNetworking_fearlesswalletKotlinKVariance *out __attribute__((swift_name("out")));
+ (XNetworking_fearlesswalletKotlinArray<XNetworking_fearlesswalletKotlinKVariance *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<XNetworking_fearlesswalletKotlinKVariance *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection.Companion")))
@interface XNetworking_fearlesswalletKotlinKTypeProjectionCompanion : XNetworking_fearlesswalletBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) XNetworking_fearlesswalletKotlinKTypeProjectionCompanion *shared __attribute__((swift_name("shared")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (XNetworking_fearlesswalletKotlinKTypeProjection *)contravariantType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("contravariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (XNetworking_fearlesswalletKotlinKTypeProjection *)covariantType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("covariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (XNetworking_fearlesswalletKotlinKTypeProjection *)invariantType:(id<XNetworking_fearlesswalletKotlinKType>)type __attribute__((swift_name("invariant(type:)")));
@property (readonly) XNetworking_fearlesswalletKotlinKTypeProjection *STAR __attribute__((swift_name("STAR")));
@end

#pragma pop_macro("_Nullable_result")
#pragma clang diagnostic pop
NS_ASSUME_NONNULL_END
